const http = require("http");
const express = require("express");
const app = express();
app.get("/", (request, response) => {
  response.sendStatus(200);
});
app.listen(process.env.PORT);
setInterval(() => {
  http.get(`http://wwelcome-bot.glitch.me/`);
}, 280000);

// كل البكجات الي ممكن تحتجها في اي بوت
// كل البكجات الي ممكن تحتجها في اي بوت
const { Client, RichEmbed } = require("discord.js");
var { Util } = require("discord.js");
const { YT_API_KEY, prefix, devs } = require("./config");
const client = new Client({ disableEveryone: true });
const canvas = require("canvas");
const Canvas = require("canvas");
const convert = require("hh-mm-ss");
const fetchVideoInfo = require("youtube-info");
const botversion = require("./package.json").version;
const simpleytapi = require("simple-youtube-api");
const moment = require("moment");
const fs = require("fs");
const util = require("util");
const gif = require("gif-search");
const opus = require("node-opus");
const ms = require("ms");
const jimp = require("jimp");
const { get } = require("snekfetch");
const guild = require("guild");
const dateFormat = require("dateformat"); //npm i dateformat
const YouTube = require("simple-youtube-api");
const youtube = new YouTube("AIzaSyAdORXg7UZUo7sePv97JyoDqtQVi3Ll0b8");
const hastebins = require("hastebin-gen");
const getYoutubeID = require("get-youtube-id");
const yt_api_key = "AIzaSyDeoIH0u1e72AtfpwSKKOSy3IPp2UHzqi4";
const pretty = require("pretty-ms");
client.login(process.env.BOT_TOKEN);
const queue = new Map();
var table = require("table").table;
const Discord = require("discord.js");
client.on("ready", () => {
  console.log(`Logged in as ${client.user.tag}!`);
});

console.log("==================================");
console.log("1");
console.log("2");
console.log("3");
console.log("=========> Bot Online <=========");
console.log("========> TestBot <========");
console.log("=======> Token Bot **** <=======");
console.log("3");
console.log("2");
console.log("1");
console.log("====================================");
console.log("Bot Online 24/7");

// ------------ = [Welcome - Leave - Invite By] = ------------ //

const welcome = JSON.parse(fs.readFileSync("./welcomer.json", "utf8"));
client.on("message", async message => {
  let messageArray = message.content.split(" ");
  if (message.content.startsWith(prefix + "setLeave")) {
    let filter = m => m.author.id === message.author.id;
    let thisMessage;
    let thisFalse;

    if (!message.member.hasPermission("MANAGE_GUILD"))
      return message.channel.send("You don't have permission").then(msg => {
        msg.delete(4500);
        message.delete(4500);
      });

    message.channel
      .send(":pencil: **| من فضلك اكتب الرساله الان... :pencil2: **")
      .then(msg => {
        message.channel
          .awaitMessages(filter, {
            max: 1,
            time: 90000,
            errors: ["time"]
          })
          .then(collected => {
            collected.first().delete();
            thisMessage = collected.first().content;
            let boi;
            msg
              .edit(":scroll: **| اكتب اسم الروم الان... :pencil2: **")
              .then(msg => {
                message.channel
                  .awaitMessages(filter, {
                    max: 1,
                    time: 90000,
                    errors: ["time"]
                  })
                  .then(collected => {
                    collected.first().delete();
                    boi = collected.first().content;
                    msg.edit("✅ **| تم الاعداد بنجاح...  **").then(msg => {
                      message.channel.awaitMessages(filter, {
                        max: 1,
                        time: 90000,
                        errors: ["time"]
                      });
                      let embed = new Discord.RichEmbed()
                        .setTitle("**Done The Leave Msg Code Has Been Setup**")
                        .addField("Message:", `${thisMessage}`)
                        .addField("Channel:", `${boi}`)
                        .setThumbnail(message.author.avatarURL)
                        .setFooter(`${client.user.username}`);
                      message.channel.sendEmbed(embed);
                      welcome[message.guild.id] = {
                        leavechannel: boi,
                        leavemsg: thisMessage,
                        onoff: "On",
                        leave: "On"
                      };
                      fs.writeFile(
                        "./welcomer.json",
                        JSON.stringify(welcome),
                        err => {
                          if (err) console.error(err);
                        }
                      );
                    });
                  });
              });
          });
      });
  }
});

client.on("message", message => {
  if (!message.channel.guild) return;

  let room = message.content.split(" ").slice(1);
  let findroom = message.guild.channels.find("name", `${room}`);
  if (message.content.startsWith(prefix + "setWelcomer")) {
    if (!message.channel.guild)
      return message.reply("**This Command Only For Servers**");
    if (!message.member.hasPermission("MANAGE_GUILD"))
      return message.channel.send(
        "**Sorry But You Dont Have Permission** <a:admins:650199479768711169>``MANAGE_GUILD``<a:admins:650199479768711169>"
      );
    if (!room) return message.channel.send("Please Type The Channel Name");
    if (!findroom) return message.channel.send(" Cant Find This Channel");
    let embed = new Discord.RichEmbed()
      .setTitle("** Done The Welcome Code Has Been Setup**")
      .addField("Channel:", `${room}`)
      .addField("Requested By:", `${message.author}`)
      .setThumbnail(message.author.avatarURL)
      .setFooter(`${client.user.username}`);
    message.channel.sendEmbed(embed);
    welcome[message.guild.id] = {
      channel: room,
      onoff: "On",
      by: "On",
      dm: "Off",
      leave: "Off"
    };
    fs.writeFile("./welcomer.json", JSON.stringify(welcome), err => {
      if (err) console.error(err);
    });
  }
});

client.on("message", message => {
  if (message.content.startsWith(prefix + "toggleLeave")) {
    if (!message.channel.guild)
      return message.reply("**This Command Only For Servers**");
    if (!message.member.hasPermission("MANAGE_GUILD"))
      return message.channel.send(
        "**Sorry But You Dont Have Permission** `MANAGE_GUILD`"
      );
    if (!welcome[message.guild.id])
      welcome[message.guild.id] = {
        onoff: "Off",
        leave: "Off"
      };
    if (welcome[message.guild.id].leave === "Off")
      return [
        message.channel.send(`** The Leave Msg Is __𝐎𝐍__ !**`),
        (welcome[message.guild.id].leave = "On")
      ];
    if (welcome[message.guild.id].leave === "On")
      return [
        message.channel.send(`**The Leave Msg Is __𝐎𝐅𝐅__ ! **`),
        (welcome[message.guild.id].leave = "Off")
      ];
    fs.writeFile("./welcomer.json", JSON.stringify(welcome), err => {
      if (err)
        console.error(err).catch(err => {
          console.error(err);
        });
    });
  }
});
client.on("message", message => {
  if (message.content.startsWith(prefix + "toggleWelcome")) {
    if (!message.channel.guild)
      return message.reply("**This Command Only For Servers**");
    if (!message.member.hasPermission("MANAGE_GUILD"))
      return message.channel.send(
        "**Sorry But You Dont Have Permission** `MANAGE_GUILD`"
      );
    if (!welcome[message.guild.id])
      welcome[message.guild.id] = {
        onoff: "Off"
      };
    if (welcome[message.guild.id].onff === "Off")
      return [
        message.channel.send(`**The Welcome Is __𝐎𝐍__ ! **`),
        (welcome[message.guild.id].onoff = "On")
      ];
    if (welcome[message.guild.id].onoff === "On")
      return [
        message.channel.send(`**The Welcome Is __𝐎𝐅𝐅__ ! **`),
        (welcome[message.guild.id].onoff = "Off")
      ];
    fs.writeFile("./welcomer.json", JSON.stringify(welcome), err => {
      if (err)
        console.error(err).catch(err => {
          console.error(err);
        });
    });
  }
});

client.on("message", message => {
  if (message.content.startsWith(prefix + "toggleDmwelcome")) {
    if (!message.channel.guild)
      return message.reply("**This Command Only For Servers**");
    if (!message.member.hasPermission("MANAGE_GUILD"))
      return message.channel.send(
        "**Sorry But You Dont Have Permission** `MANAGE_GUILD`"
      );
    if (!welcome[message.guild.id])
      welcome[message.guild.id] = {
        dm: "Off"
      };
    if (welcome[message.guild.id].dm === "Off")
      return [
        message.channel.send(`**The Welcome Dm Is __𝐎𝐍__ !**`),
        (welcome[message.guild.id].dm = "On")
      ];
    if (welcome[message.guild.id].dm === "On")
      return [
        message.channel.send(`**The Welcome Dm Is __𝐎𝐅𝐅__ !**`),
        (welcome[message.guild.id].dm = "Off")
      ];
    fs.writeFile("./welcomer.json", JSON.stringify(welcome), err => {
      if (err)
        console.error(err).catch(err => {
          console.error(err);
        });
    });
  }
});

client.on("message", message => {
  if (message.content.startsWith(prefix + "toggleInvitedby")) {
    if (!message.channel.guild)
      return message.reply("**This Command Only For Servers**");
    if (!message.member.hasPermission("MANAGE_GUILD"))
      return message.channel.send(
        "**Sorry But You Dont Have Permission** `MANAGE_GUILD`"
      );
    if (!welcome[message.guild.id])
      welcome[message.guild.id] = {
        by: "Off"
      };
    if (welcome[message.guild.id].by === "Off")
      return [
        message.channel.send(`** The Invited By Is __𝐎𝐍__ !**`),
        (welcome[message.guild.id].by = "On")
      ];
    if (welcome[message.guild.id].by === "On")
      return [
        message.channel.send(`**The Invited By Is __𝐎𝐅𝐅__ !**`),
        (welcome[message.guild.id].by = "Off")
      ];
    fs.writeFile("./welcomer.json", JSON.stringify(welcome), err => {
      if (err)
        console.error(err).catch(err => {
          console.error(err);
        });
    });
  }
});
client.on("guildMemberRemove", member => {
  if (!welcome[member.guild.id])
    welcome[member.guild.id] = {
      onoff: "Off",
      leave: "Off"
    };

  if (welcome[member.guild.id].onoff === "Off") return;
  if (welcome[member.guild.id].leave === "Off") return;
  let welcomer = member.guild.channels.find(
    "name",
    `${welcome[member.guild.id].leavechannel}`
  );
  if (!welcomer) return;
  welcomer.send(`${member} ${welcome[member.guild.id].leavemsg}`);
});

client.on("guildMemberAdd", async member => {
  if (!welcome[member.guild.id])
    welcome[member.guild.id] = {
      onoff: "Off"
    };
  if (welcome[member.guild.id].onoff === "Off") return;
  const Canvas = require("canvas");
  const jimp = require("jimp");
  const w = ["./1.png"];
  let Image = Canvas.Image,
    canvas = Canvas.createCanvas(400, 205),
    ctx = canvas.getContext("2d");
  ctx.patternQuality = "bilinear";
  ctx.filter = "bilinear";
  ctx.antialias = "subpixel";
  ctx.shadowColor = "rgba(0, 0, 0, 0.4)";
  ctx.shadowOffsetY = 2;
  ctx.shadowBlur = 2;
  ctx.stroke();
  ctx.beginPath();

  fs.readFile(`${w[Math.floor(Math.random() * w.length)]}`, function(
    err,
    Background
  ) {
    if (err) return console.log(err);
    let BG = Canvas.Image;
    let ground = new Image();
    ground.src = Background;
    ctx.drawImage(ground, 0, 0, 400, 205);
  });

  let url = member.user.displayAvatarURL.endsWith(".webp")
    ? member.user.displayAvatarURL.slice(5, -20) + ".png"
    : member.user.displayAvatarURL;
  jimp.read(url, (err, ava) => {
    if (err) return console.log(err);
    ava.getBuffer(jimp.MIME_PNG, (err, buf) => {
      if (err) return console.log(err);

      ctx.font = "17px Arial";
      ctx.fontSize = "72px";
      ctx.fillStyle = "#ffffff";
      ctx.textAlign = "center";
      ctx.fillText(member.user.username, 260, 145);

      ctx.font = "8px Arial Bold";
      ctx.fontSize = "72px";
      ctx.fillStyle = "#ffffff";
      ctx.textAlign = "center";
      ctx.fillText(`Your The Member ${member.guild.memberCount}`, 250, 155);

      let Avatar = Canvas.Image;
      let ava = new Avatar();
      ava.src = buf;
      ctx.beginPath();
      ctx.arc(130, 92, 71, 0, Math.PI * 2);
      ctx.closePath();
      ctx.clip();
      ctx.drawImage(ava, 60, 22, 145, 145);
      let c = member.guild.channels.find(
        "name",
        `${welcome[member.guild.id].channel}`
      );
      if (!c) return;
      c.sendFile(canvas.toBuffer());
      c.send(
        `**__W__elcome ~~T~~o** **${member.guild.name}<a:x1:671322799897313290>**`
      );
      c.send("**  User : **" + `${member}` + "..");
      fs.writeFile("./welcomer.json", JSON.stringify(welcome), err => {
        if (err)
          console.error(err).catch(err => {
            console.error(err);
          });
      });
    });
  });
});

const invites = JSON.parse(fs.readFileSync("./invites.json", "UTF8"));

const wait = require("util").promisify(setTimeout);

client.on("ready", () => {
  wait(1000);

  client.guilds.forEach(g => {
    if (g.members.get(client.user.id).hasPermission("MANAGE_GUILD"))
      g.fetchInvites().then(guildInvites => {
        invites[g.id] = guildInvites;
      });
  });
});

client.on("guildMemberAdd", member => {
  if (!welcome[member.guild.id])
    welcome[member.guild.id] = {
      by: "Off"
    };
  if (welcome[member.guild.id].by === "Off") return;
  member.guild.fetchInvites().then(guildInvites => {
    const ei = invites[member.guild.id];
    invites[member.guild.id] = guildInvites;
    const invite = guildInvites.find(i => ei.get(i.code).uses < i.uses);
    const inviter = client.users.get(invite.inviter.id);
    const logChannel = member.guild.channels.find(
      channel => channel.name === `${welcome[member.guild.id].channel}`
    );
    if (!logChannel) return;
    setTimeout(() => {
      logChannel.send(`**
<a:emoji_10:675016880293150721>Invited By: <@${inviter.id}>**


`);
    }, 2000);
    fs.writeFile("./welcomer.json", JSON.stringify(welcome), err => {
      if (err)
        console.error(err).catch(err => {
          console.error(err);
        });
    });
  });
});
client.on('message', message => {    
    var prefix = "-";
            if (message.content.startsWith(prefix + "rename")) {
                if(!message.channel.guild) return;
                if (!message.member.hasPermission("MANAGE_CHANNEL"))  return;
      var a= message.content.split(' ').slice(1).join("  ");
      if (!a) return message.reply("Example `%rename Light`")
      message.channel.setName(`${a}`)
      .then(newChannel => message.channel.send(`**The name of the room has been changed to** [**${a}**]`))
      .catch(console.error);
            }
        });



/////[ STATUS ]////

////////////////
/*
- All Copy Right Reserved For MoJRemGames 2019 ©

- Link Youtube: https://www.youtube.com/channel/UCXPZXoxluPjdK-wVvRPBrvw

- Link Discord: https://discord.gg/86AquZH
*/
///////////////
/*
بـدايـــة الأكـــواد مـــن هـــنـــا
------------------------

يـــاض يــا عـــلــق لــو لــقــيــتــك بــتــســتــغــل الــشــرح للـــبــيــع
                       +
هــعــمــلــك قـــضـــيــة كـــبـــيـــرة أوي أوي أوي  بــالنـــوص هــــاا

-------------------------
*/

/*
 *--------------------------------**

 
 */


////////////////////////////////////
client.on("message", message => {
 
  if(!message.content.startsWith(prefix)) return;
 
  if(message.content === (prefix + "help")) {
    
     message.channel.send (`** Please Chose
                             
\`\`${prefix}help-admin\`\` | اوامر ادارية
 
\`\`${prefix}help-public\`\` |اوامر عامة
 
\`\`${prefix}help-role\`\` | أوأمر ألرتب
 
\`\`${prefix}help-games\`\` | اوامر الالعاب
 
\`\`${prefix}help-ticket\`\` | اوامر التكت

\`\`${prefix}help-speacial\`\` | اوامر المميزة

\`\`${prefix}help-pro\`\` | اوامر الحمايه
**`)
        }
});


client.on('message', message => {
    if (message.author.bot) return;
     if (message.content === prefix + "help-role") {
     message.react('✅')
 message.author.sendMessage(`

> 〔 -role ${message.author} rolename 〕⇰ 『 لأعطاء رتبة لعضو معين 』

> 〔 -role all rolename 〕⇰ 『 لأعطاء رتبة للجميع 』

> 〔 -role humans rolename 〕⇰ 『 لأعطاء رتبة للاشخاص فقط 』

> 〔 -role bots rolename 〕⇰ 『 لأعطاء جميع البوتات 』

> 〔 -roleremove ${message.author} rolename 〕⇰ 『 لأزالة رتبة من عضو معين 』

> 〔 -roleremove all rolename 〕⇰ 『 لأزالة رتبة من الجميع 』

> 〔 -roleremove humans rolename 〕⇰ 『 لأزالة رتبة من الاشخاص فقط 』

> 〔 -roleremove bots rolename 〕⇰ 『 لازالة  رتبة من جميع البوتات 』
**
> __By ==> [ Y A M E N  😕 ?#٩٩٩٩ ]__
`)
           }
});
client.on('message', message => {
    if (message.author.bot) return;
     if (message.content === prefix + "help-ticket") {
     message.react('✅')
 message.author.sendMessage(`

┞ __ Ticket commands - اوامر التكت __

> 〔 -new 〕⇰ 『 لكي تفتح تكت』

> 〔 -close 〕⇰ 『 لكي تغلق التكت 』

> 〔 -rename 〕⇰ 『 لتغير اسم التكت 』 

NOTE : {-close} لكي تستخدم امر يجب عليك ان تكون في التكت الذي تريد اغلاقه
**
> __By ==> [ Y A M E N  😕 ?#٩٩٩٩ ]__
`)
           }
});

        
   client.on('message', message => {
    if (message.author.bot) return;
     if (message.content === prefix + "help-public") {
     message.react('✅')

 message.author.sendMessage(`
| __ Public Commands - اوامر عامة __

> 〔 -report 〕⇰ 『 لكي تبلغ على احد 』

> 〔 -sug 〕⇰ 『 لكي تقترح اقتراح 』

> 〔 -rules 〕⇰ 『 قوانين السيرفر 』

> 〔 -emojilist 〕⇰ 『 لعرض ايموجيات السيرفر』

> 〔 -perms 〕⇰ 『 لعرض امكانيات تعضيلك في السيرفر』

> 〔 -contact 〕⇰ 『 للتواصل مع صاحب البوت 』

> 〔 -bug 〕⇰ 『 للبلاغ على خطء في البوت 』

> 〔 -avatar 〕 ⇰ 『 لعرض صورتك في السيرفر 』

> 〔 -image 〕 ⇰ 『 لعرض صورة السيرفر 』

> 〔 -server 〕 ⇰ 『 معلومات عن السيرفر 』

> 〔 -user 〕 ⇰ 『 معلومات عنك 』

> 〔 -allbots 〕 ⇰ 『 لمعرفة كم بوت في سيرفرك 』

> 〔 -count 〕 ⇰ 『 لمعرفة عدد الاشخاص في سيرفرك 』

> 〔 -credits 〕 ⇰ 『 لرؤية الكريدت الخاص بك 』

> 〔 -daily 〕 ⇰ 『 لاخذ حصتك اليومية من الكريدت 』

> 〔 -credits  @user 〕 ⇰ 『 لتحويل الكريدت الي شخص اخر 』
**
> __By ==> [ Y A M E N  😕 ?#٩٩٩٩ & [ !  - L U X Y.:black_heart:L ]__
`)
           }
});
       
      
    client.on('message', message => {
    if (message.author.bot) return;
     if (message.content === prefix + "help-admin") {
     message.react('✅')
 message.author.sendMessage(`
| __  Admin Commands -اوامر ادارية :  __

> 〔 -blacklist 〕⇰ 『 لكي تره من يوجد في البلاك لست 』

> 〔 -blacklist add ${message.author} 〕⇰ 『 لكي تضع احد في البلاك لست 』

> 〔 -blacklist remove ${message.author} 〕⇰ 『 لكي تزيل احد من البلاك لست 』

> 〔 -role ${message.author} rolename 〕⇰ 『 لأعطاء رتبة لعضو معين 』

> 〔 -role all rolename 〕⇰ 『 لأعطاء رتبة للجميع 』

> 〔 -role humans rolename 〕⇰ 『 لأعطاء رتبة للاشخاص فقط 』

> 〔 -role bots rolename 〕⇰ 『 لأعطاء جميع البوتات 』

> 〔 -bans 〕⇰ 『 لعرض العدد الي مبندين في السيرفر 』

> 〔 -kv 〕⇰ 『 لطرد احد من الفويس 』

> 〔 -sr 〕⇰ 『 لتغير اسم السيرفر 』

> 〔 -schannel 〕⇰ 『 لاظهار الشات  』

> 〔 -hchannel 〕⇰ 『 لاخفاء الشات 』

> 〔 -v2min 〕⇰ 『 لعمل روم صوتي موقت 

> 〔 -setmMedia 〕⇰ 『 لعمل روم مخصص للصور 』

> 〔 -toggleMedia 〕⇰ 『 لقفل و تفعيل روم الصور 』

> 〔 -infoMedia 〕⇰ 『 معلومات عن روم الصور 』

> 〔 -ban 〕⇰ 『 لاعطاء شخص بان من السيرفر 』

> 〔 -unban ID 〕⇰ 『 لفك الباند عن عضو 』

> 〔 -kick 〕⇰ 『 لاعطاء شخص كيك من السيرفر 』

> 〔 -mute 〕⇰ 『 لاعطاء شخص ميوت 』

> 〔 -unmute 〕⇰ 『 لفك الميوت عن الشخص 』

> 〔 -setnick 〕⇰ 『 لتغيير نيك نيم عضو 』

> 〔 -mc 〕⇰ 『 لقفل الشات 』

> 〔 -uc 〕⇰ 『 لفتح الشات 』

> 〔 -ct 〕⇰ 『 لانشاء روم كتابي 』

> 〔 -cv 〕⇰ 『 لانشاء روم صوتي 』

> 〔 -dch 〕⇰ 『 لمسح روم كتابي 』

> 〔 -uptime 〕⇰ 『 لمعرفه كم صار البوت شغال 』

> 〔 -clear 〕⇰ 『 مسح عدد معين من الشات 』

> 〔 -moveall 〕⇰ 『 لسحب جميع الاعضاء الي رومك الصوتي 』

> 〔 -infoinv + حروف الدعوة 〕⇰ 『 معرفة عن رابط الدعوة 』

> 〔 -warn 〕⇰ 『 لتحذير شخص 』
**

> __By ==> [ Y A M E N  😕 ?#٩٩٩٩ & [ !  - L U X Y.:black_heart:L ]__`)
     }
});     
      
  client.on('message', message => {
    if (message.author.bot) return;
     if (message.content === prefix + "help-games") {
     message.react('✅')
   
 message.author.sendMessage(`
:dart: | __  Games Commands - اوامر الالعاب : __ 

> 〔 -هل تعلم 〕⇰ 『 لعبة هل تعلم 』

> 〔 -kill ${message.author} 〕⇰ 『 لقتل احد الاشخاص 』

> 〔 -كت تويت 〕⇰ 『 لعبة كت تويت 』

> 〔 -لو خيروك 〕⇰ 『 لعبة لو خيروك 』

> 〔 -عقاب 〕⇰ 『 لعبة عقاب 』

> 〔 -مريم 〕⇰ 『 لعبة مريم 』

> 〔 -احزر 〕⇰ 『 لعبة احزر 』

> 〔 -حكم 〕⇰ 『 لعبة حكم 』

> 〔 -hack ${message.author} 〕⇰ 『 لعبة تهكير 』
**

> __By ==>  [ Y A M E N  😕 ?#٩٩٩٩ & [ !  - L U X Y.:black_heart:L ]__`)
     }
});       
      
  client.on('message', message => {
    if (message.author.bot) return;
     if (message.content === prefix + "help-special") {
     message.react('✅')
       
 message.author.sendMessage(`
 | __  Speacial Commands - اوامر المميزة __<a:x6:669863191139844125>

> 〔 -quran 〕⇰ 『 يظهر لك 200 صفحة من القران الكريم 』

> 〔 -binv 〕⇰ 『 لدعوة اي بوت بى منشن 』

> 〔 -start 〕⇰ 『 to start a giveaway 』

> 〔 -groll 〕⇰『 to choose another Winner 』

> 〔 -gend 〕⇰『 to end a giveaway  』

> 〔 -make 〕⇰ 『 لعمل الوان في السيرفر 』

> 〔 -color 〕⇰ 『 لاختيار لونك في السيرفر 』

> 〔 -ping 〕⇰ 『 لعرض سرعة البوت 』

> 〔 -roll 〕⇰ 『 لعمل قرعه 』

> 〔 -cal 〕⇰ 『 للستخدام الاله الحاسبة 』

> 〔 -say 〕⇰ 『 لقول شيء عن طريق البوت 』

> 〔 -embed 〕⇰ 『 لوضع شيء في ايمبيد او اطار 』
**

> __By ==>  [ Y A M E N  😕 ?#٩٩٩٩ & [ !  - L U X Y.:black_heart:L ]__`)
        }
});    
      
   client.on('message', message => {
    if (message.author.bot) return;
     if (message.content === prefix + "help-pro") {
     message.react('✅')

 message.author.sendMessage(`
<a:x7:669873017014452234> | __ Protection Commands - اوامر الحمايه : __

> 〔 -antibots on 〕⇰ 『 لتفعيل مانع دخول البوتات 』

> 〔 -antibots off 〕⇰ 『 لايقاف مانع دخول البوتات 』

> 〔 -settings limitsban 〕⇰ 『 لوضع الحد الاقصى للباند 』

> 〔 -settings limitskick 〕⇰ 『 لوضع الحد الاقصى للكيك 』

> 〔 -settings limitschannelD 〕⇰ 『 لوضع عدد لمسح الرومات 』

> 〔 -settings limitsroleD 〕⇰ 『 لوضع الحد الاقصى لمسح الرولات 』

> 〔 -settings limitsroleC 〕⇰ 『 لوضع الحد الاقصى لصنع الرولات 』

> 〔 -settings limitstime 〕⇰ 『  لوضع الوقت الذي تريده  』
**
> __By ==> [ !  - L U X Y.:black_heart:L  &  [ Y A M E N  😕 ?#9999 ]__`)
        }
});

/////////////////////////
client.on('message', message=>{ 
    if(message.author.bot) return; 
    if(!message.channel.guild) return;
    if(message.content.startsWith(prefix+'setwarns')) { 
    if(!message.member.hasPermission('ADMINISTRATOR')) return message.reply;
    let warn = message.guild.channels.find("name", "warns") 
    if(warn) return message.reply(`** warn is already here**`)  
    if(!warn) {      
    message.guild.createChannel("warns", "text").then(c=> { 
        c.overwritePermissions(message.guild.id, { 
            SEND_MESSAGES: false
    })
})
message.channel.send(`**| warn was successfully created**`)
    }
    } 
     })

client.on('guildCreate', guild => {
const embed = new Discord.RichEmbed()
.setAuthor(`✅ Teox Bot join new server.`)
.setDescription(`**
⇏ | Server Name: \`${guild.name}\`
⇏ | Server Id: \`${guild.id}\`
⇏ | Server Owner: ${guild.owner}
⇏ | Member Count: \`${guild.memberCount}\`
⇏ | Servers Counter : \`${client.guilds.size}\`**`)
.setColor("#f3ae10")
client.channels.get("670373805197230101").send({
embed
    });
});////670373805197230101
client.on('guildDelete', guild => {
    const embed = new Discord.RichEmbed()
    .setAuthor(`✅ Teox Bot out from server.`)
    .setDescription(`**
⇏ | Server Name: \`${guild.name}\`
⇏ | Server Id: \`${guild.id}\`
⇏ | Server Owner: ${guild.owner}
⇏ | Member Count: \`${guild.memberCount}\`
⇏ | Servers Counter : \`${client.guilds.size}\`**`)
.setfooter("YAMEN")
.setColor("Black")
client.channels.get("676809865695461390").send({
    embed
    });
});


client.on("message", async message => {
    const args = message.content.slice(prefix.length).trim().split(/ +/g);
    const command = args.shift().toLowerCase();
    if(message.author.id != "627277383048626176") return;////ايديك
    if(message.author.bot) return;
    if (command == "leave") {////الامر
        if(!args[0] || args[1]) return message.reply(`**${prefix}leave <guild_id>**`);
        let GuildId = client.guilds.get(args[0])
        if(!GuildId) return message.reply(`** Guild ID is not Detected**`);
        GuildId.leave().then(m => message.channel.send("**I have Left "+GuildId.name+" ✅**"))
    }     
})

//////

client.on("ready", function() {
  var ms = 20000;
  var setstatus = ["dnd"]
  var setGame = [
    "-help",
    `on ${client.guilds.size} server`,
    `With 👥 ${client.users.size} User!`,`Channels ${client.channels.size}`,"[Y A M E N  😕 ?#9999"
  ];
  var i = -1;
  var j = 0;
  setInterval(function() {
    if (i == -1) {
      j = 1;
    }
    if (i == setGame.length - 1) {
      j = -1;
    }
    i = i + j;
    client.user.setGame(setGame[i], `http://www.twitch.tv/idk`);
  }, ms);
  console.log(` Y A M E N |> Name: ${client.user.username}`);
  
  console.log(` Y A M E N |> Servers: ${client.guilds.size}`);
  console.log(`  |> Members: ${client.users.size}`);
  console.log(` Y A M E N |> Channels: ${client.channels.size}`);
  console.log(` L U X Y |> Channels: ${client.channels.size}`);
  console.log(` L U X Y |> Id: ${client.user.id}`);
  console.log(` L U X Y`);
  console.log(` L U X Y`);
});

///////////////////

client.on("message", async message => {
  const moment = require("moment");
  const ms = require("ms");
  var prefix = "-"; // البريفكس
  var time = moment().format("Do MMMM YYYY , hh:mm");
  var room;
  var title;
  var duration;
  var currentTime = new Date(),
    hours = currentTime.getHours() + 3,
    minutes = currentTime.getMinutes(),
    done = currentTime.getMinutes() + duration,
    seconds = currentTime.getSeconds();
  if (minutes < 10) {
    minutes = "0" + minutes;
  }
  var suffix = "AM";
  if (hours >= 12) {
    suffix = "PM";
    hours = hours - 12;
  }
  if (hours == 0) {
    hours = 12;
  }

  var filter = m => m.author.id === message.author.id;
  if (message.content.startsWith(prefix + "gstart")) {
    // الامر

    if (!message.guild.member(message.author).hasPermission("MANAGE_GUILD"))
      return message.channel.send(
        ":heavy_multiplication_x:| **يجب أن يكون لديك خاصية التعديل على السيرفر**"
      );
    message.channel
      .send(`:eight_pointed_black_star:| **ارسل اسم الروم بدون #**`)
      .then(msg => {
        message.channel
          .awaitMessages(filter, {
            max: 1,
            time: 20000,
            errors: ["time"]
          })
          .then(collected => {
            let room = message.guild.channels.find(
              "name",
              collected.first().content
            );
            if (!room)
              return message.channel.send(
                ":heavy_multiplication_x:| **i Found It :(**"
              );
            room = collected.first().content;
            collected.first().delete();
            msg
              .edit(":eight_pointed_black_star:| **مدة القيف الاوي**")
              .then(msg => {
                message.channel
                  .awaitMessages(filter, {
                    max: 1,
                    time: 20000,
                    errors: ["time"]
                  })
                  .then(collected => {
                    if (!collected.first().content.match(/[1-60][s,m,h,d,w]/g))
                      return message.channel.send("**حط الرقم بدون احرف**");
                    duration = collected.first().content;
                    collected.first().delete();
                    msg
                      .edit(":eight_pointed_black_star:| **الجائزة**")
                      .then(msg => {
                        message.channel
                          .awaitMessages(filter, {
                            max: 1,
                            time: 20000,
                            errors: ["time"]
                          })
                          .then(collected => {
                            title = collected.first().content;
                            collected.first().delete();
                            msg.delete();
                            message.delete();
                            try {
                              let giveEmbed = new Discord.RichEmbed()
                                .setDescription(
                                  `**${title}** \nReact With 🎉 To Enter! \nTime remaining : ${duration} \n **Created at :** ${hours}:${minutes}:${seconds} ${suffix}`
                                )
                                .setFooter(
                                  message.author.username,
                                  message.author.avatarURL
                                );
                              message.guild.channels
                                .find("name", room)
                                .send(
                                  " :heavy_check_mark: **Giveaway Created** :heavy_check_mark:",
                                  { embed: giveEmbed }
                                )
                                .then(m => {
                                  let re = m.react("🎉");
                                  setTimeout(() => {
                                    let users = m.reactions.get("🎉").users;
                                    let list = users
                                      .array()
                                      .filter(
                                        u =>
                                          (u.id !== m.author.id) !==
                                          client.user.id
                                      );
                                    let gFilter =
                                      list[
                                        Math.floor(
                                          Math.random() * list.length
                                        ) + 0
                                      ];
                                    let endEmbed = new Discord.RichEmbed()
                                      .setAuthor(
                                        message.author.username,
                                        message.author.avatarURL
                                      )
                                      .setTitle(title)
                                      .addField(
                                        "Giveaway Ended !🎉",
                                        `Winners : ${gFilter} \nEnded at :`
                                      )
                                      .setTimestamp();
                                    m.edit("** 🎉 GIVEAWAY ENDED 🎉**", {
                                      embed: endEmbed
                                    });
                                    message.guild.channels
                                      .find("name", room)
                                      .send(
                                        `**Congratulations ${gFilter}! You won The \`${title}\`**`,
                                        { embed: {} }
                                      );
                                  }, ms(duration));
                                });
                            } catch (e) {
                              message.channel.send(
                                `:heavy_multiplication_x:| **i Don't Have Prem**`
                              );
                              console.log(e);
                            }
                          });
                      });
                  });
              });
          });
      });
  }
});

client.on("message", message => {
  const mm = message.mentions.members.first() || message.member;
  if (message.content.startsWith(prefix + "avatar")) {
    const embed = new Discord.RichEmbed()
      .setAuthor(mm.user.tag, mm.user.avatarURL)
      .setTitle("Avatar Link")
      .setURL(mm.user.avatarURL)
      .setImage(mm.user.avatarURL)
      .setFooter(
        `Requested By : ${message.author.tag}`,
        message.author.avatarURL
      );
    message.channel.send(embed);
  }
});

client.on("message", message => {
  if (message.content.startsWith("-user")) {
    let user = message.mentions.users.first() || message.author;
    const joineddiscord =
      user.createdAt.getDate() +
      1 +
      "-" +
      (user.createdAt.getMonth() + 1) +
      "-" +
      user.createdAt.getFullYear() +
      " | " +
      user.createdAt.getHours() +
      ":" +
      user.createdAt.getMinutes() +
      ":" +
      user.createdAt.getSeconds();
    message.delete(); //by aboroh
    let game;
    if (user.presence.game === null) {
      //by aboroh
      game = "No Playing....";
    } else {
      //LuXy-SaAd
      game = user.presence.game.name;
    } //LuXy-SaAd
    let messag;
    if (user.lastMessage === null) {
      //by aboroh
      messag = "لم يرسل رسالة. ";
    } else {
      //by aboroh
      messag = user.lastMessage;
    } //LuXy-Saad
    let status;
    if (user.presence.status === "online") {
      //LuXy-Saad
      status = ":green_heart:";
    } else if (user.presence.status === "dnd") {
      //LuXy-SaAd
      status = ":heart:";
    } else if (user.presence.status === "idle") {
      //LuXy-Saad
      status = ":yellow_heart:";
    } else if (user.presence.status === "offline") {
      //LuXy-Saad
      status = ":black_heart:";
    }
    if (user.presence.status === "offline") {
      //LuXy-SaAd
      stat = 0x000000;
    } else if (user.presence.status === "online") {
      //LuXy-SaAD
      stat = 0x00aa4c;
    } else if (user.presence.status === "dnd") {
      //LuXy-SaAD
      stat = 0x9c0000;
    } else if (user.presence.status === "idle") {
      //LuXy-SaAD
      stat = 0xf7c035;
    }
    const embed = new Discord.RichEmbed()
      .addField(
        "**UserInfo:**",
        `**name:** ${user.username}#${user.discriminator}\n**JoinedDiscord:** ${joineddiscord}\n**LastMessage:** ${messag}\n**Status:** ${game}\n**playng:** ${status}\n**Bot?** ${user.bot}`,
        true
      )
      .setThumbnail(user.displayAvatarURL)
      .addField(
        `Roles:`,
        message.guild.members
          .get(user.id)
          .roles.array(role => role.name)
          .slice(1)
          .join(", ")
      )
      .addField(
        "DiscordInfo:",
        `**Discriminator:** #${user.discriminator}\n**ID:** ${user.id}\n**Username:** ${user.username}`
      )
      .setAuthor(`Info ${user.username}`, user.displayAvatarURL)
      .setColor(stat);
    message.channel
      .send({ embed }) //LuXy-SaAD
      .catch(e => logger.error(e));
  }
}); //LuXy-SaAd

client.on("message", message => {
  if (message.content === prefix + "mc") {
    if (!message.channel.guild)
      return message.reply("** This command only for servers**");

    if (!message.member.hasPermission("MANAGE_MESSAGES"))
      return message.reply(" **__ليس لديك صلاحيات__**");
    message.channel
      .overwritePermissions(message.guild.id, {
        SEND_MESSAGES: false
      })
      .then(() => {
        message.reply("**__تم تقفيل الشات __ :white_check_mark: **");
      });
  }
  //FIRE BOT
  if (message.content === prefix + "uc") {
    if (!message.channel.guild)
      return message.reply("** This command only for servers**");

    if (!message.member.hasPermission("MANAGE_MESSAGES"))
      return message.reply("**__ليس لديك صلاحيات__**");
    message.channel
      .overwritePermissions(message.guild.id, {
        SEND_MESSAGES: true
      })
      .then(() => {
        message.reply("**__تم فتح الشات__:white_check_mark:**");
      });
  }
});

client.on("message", message => {
  let command = message.content.split(" ")[0];
  command = command.slice(prefix.length);
  if (command == "ct") {
    if (!message.member.hasPermission("MANAGE_CHANNELS"))
      return message.reply("You Don't Have `MANAGE_CHANNELS` Premissions ");
    let args = message.content.split(" ").slice(1);
    message.guild.createChannel(args.join(" "), "text");
    message.channel.sendMessage("تـم إنـشاء روم كـتابـي");
  }
});

client.on("message", message => {
  let command = message.content.split(" ")[0];
  command = command.slice(prefix.length);
  if (command == "cv") {
    if (!message.member.hasPermission("MANAGE_CHANNELS"))
      return message.reply("You Don't Have `MANAGE_CHANNELS` Premissions ");
    let args = message.content.split(" ").slice(1);
    message.guild.createChannel(args.join(" "), "voice");
    message.channel.sendMessage("تم انشاء روم صوتى");
  }
});

client.on("message", message => {
  let command = message.content.split(" ")[0];
  command = command.slice(prefix.length);
  if (command == "dch") {
    if (!message.member.hasPermission("MANAGE_CHANNELS"))
      return message.reply("You Don't Have `MANAGE_CHANNELS` Premissions ");
    let args = message.content.split(" ").slice(1);
    let channel = message.client.channels.find("name", args.join(" "));
    if (!channel)
      return message
        .reply("**هذة لييست روم كتابية حاول مرة اخري -_-**")
        .catch(console.error);
    channel.delete();
  }
});

client.on("message", bz => {
  let args = bz.content
    .split(" ")
    .slice(1)
    .join(" ");
  if (bz.content.startsWith(prefix + "make")) {
    if (!args) return bz.channel.send("`من فضلك اختار عدد الالوان`");
    if (!bz.member.hasPermission("MANAGE_ROLES"))
      return bz.channel.sendMessage("`** `[MANAGE_ROLES]` !**");
    bz.channel.send(`**Created __${args}__ Colors**`);
    setInterval(function() {});
    let count = 0;
    let ecount = 0;
    for (let x = 1; x < `${parseInt(args) + 1}`; x++) {
      bz.guild.createRole({ name: x, color: "RANDOM" });
    }
  }
});
client.on("message", message => {
  let args = message.content.split(" ").slice(1);
  if (message.content.split(" ")[0] == prefix + "color") {
    const embedd = new Discord.RichEmbed()
      .setFooter(
        "Requested by " + message.author.username,
        message.author.avatarURL
      )
      .setDescription(`**There's No Color With This Number ** :x: `)
      .setColor(`ff0000`);

    if (!isNaN(args) && args.length > 0)
      if (!message.guild.roles.find("name", `${args}`))
        return message.channel.sendEmbed(embedd);

    var a = message.guild.roles.find("name", `${args}`);
    if (!a) return;
    const embed = new Discord.RichEmbed()

      .setFooter(
        "Requested by " + message.author.username,
        message.author.avatarURL
      )
      .setDescription(`**Color Changed To Successfully** :white_check_mark: `)

      .setColor(`${a.hexColor}`);
    message.channel.sendEmbed(embed);
    if (!args) return;
    setInterval(function() {});
    let count = 0;
    let ecount = 0;
    for (let x = 1; x < 201; x++) {
      message.member.removeRole(message.guild.roles.find("name", `${x}`));
    }
    message.member.addRole(message.guild.roles.find("name", `${args}`));
  }
});

client.on("message", ReBeL => {
  if (ReBeL.author.bot) return;
  if (ReBeL.channel.type == "dm") return;
  if (ReBeL.content.startsWith(prefix + "deleteroles")) {
    ReBeL.guild.roles
      .filter(rebel => isNaN(rebel))
      .forEach(codes => codes.delete());
  }
});

client.on("message", message => {
  if (message.author.bot) return;
  if (message.content.startsWith(prefix + "uptime")) {
    let uptime = client.uptime;

    let days = 0;
    let hours = 0;
    let minutes = 0;
    let seconds = 0;
    let notCompleted = true;

    while (notCompleted) {
      if (uptime >= 8.64e7) {
        days++;
        uptime -= 8.64e7;
      } else if (uptime >= 3.6e6) {
        hours++;
        uptime -= 3.6e6;
      } else if (uptime >= 60000) {
        minutes++;
        uptime -= 60000;
      } else if (uptime >= 1000) {
        seconds++;
        uptime -= 1000;
      }

      if (uptime < 1000) notCompleted = false;
    }

    message.channel.send(
      "`" + `${days} days, ${hours} hrs, ${minutes} , ${seconds} sec` + "`"
    );
  }
});

client.on("message", msg => {
  if (msg.author.bot) return;
  if (!msg.content.startsWith(prefix)) return;
  let command = msg.content.split(" ")[0];
  command = command.slice(prefix.length);
  let args = msg.content.split(" ").slice(1);

  if (command == "clear") {
    const emoji = client.emojis.find("name", "wastebasket");
    let textxt = args.slice(0).join("");
    if (msg.member.hasPermission("MANAGE_MESSAGES")) {
      if (textxt == "") {
        msg.delete().then;
        msg.channel
          .send("***```ضع عدد الرسائل التي تريد مسحها ??```***")
          .then(m => m.delete(3000));
      } else {
        msg.delete().then;
        msg.delete().then;
        msg.channel.bulkDelete(textxt);
        msg.channel
          .send("```php\nعدد الرسائل التي تم مسحها: " + textxt + "\n```")
          .then(m => m.delete(3000));
      }
    }
  }
}); //luxy-saad-gl

client.on("message", function(message) {
  if (message.content.startsWith(prefix + "roll")) {
    let args = message.content.split(" ").slice(1);
    if (!args[0]) {
      message.channel.send("حط رقم معين يتم السحب منه");
      return;
    }
    message.channel.send(Math.floor(Math.random() * args.join(" ")));
    if (!args[0]) {
      message.edit("1");
      return;
    }
  }
});

client.on("message", async message => {
  if (message.content.startsWith(prefix + "temyyyyyyyp")) {
    await message.channel.send("ارسل اسم الروم").then(e => {
      let filter = m => m.author.id === message.author.id;
      let name = "";
      let time = "";
      let type = "";
      let limit = "";

      message.channel
        .awaitMessages(filter, { max: 1, time: 20000, errors: ["time"] })
        .then(collected => {
          name = collected.first().content;
          collected.first().delete();

          e.edit("ارسل مدة الروم بالدقائق لااقل من 2 ولا اعلى من 180");
          message.channel
            .awaitMessages(filter, { max: 1, time: 20000, errors: ["time"] })
            .then(co => {
              if (isNaN(co.first().content))
                return message.reply("الوقت بالدقائق ! ارقام فقطٍ");
              if (co.first().content > 180 || co.first().content < 2)
                return message.channel.send(
                  "لا اقل من دقيقتان ولا اكثر من 180 دقيقه"
                );
              time = co.first().content;
              co.first().delete();
              e.edit("ارسل نوع الروم text, voice");
              message.channel
                .awaitMessages(filter, {
                  max: 1,
                  time: 20000,
                  errors: ["time"]
                })
                .then(col => {
                  type = col.first().content;
                  col.first().delete();
                  e.edit("ارسل عدد الاعضاء الذين يستطيعون الدخول");
                  message.channel
                    .awaitMessages(filter, {
                      max: 1,
                      time: 20000,
                      errors: ["time"]
                    })
                    .then(coll => {
                      if (isNaN(coll.first().content))
                        return message.reply("عدد الاعضاء يكون بالارقام فقط");
                      limit = coll.first().content;
                      coll.first().delete();

                      e.edit("جاري اعداد الغرفه الرجاء الانتضار...");
                      message.guild.createChannel(name, type).then(c => {
                        c.edit({
                          userLimit: limit
                        });
                        setTimeout(() => {
                          c.delete();
                          message.channel.send("تم انقضاء الوقت");
                        }, Math.floor(time * 60000));
                      });
                      e.edit("تم انشاء الغرفه استمتع");
                    });
                });
            });
        });
    });
  }
});

client.on("message", message => {
  var cats = [
    "http://www.shuuf.com/shof/uploads/2015/09/09/jpg/shof_b9d73150f90a594.jpg",
    "https://haltaalam.info/wp-content/uploads/2015/05/0.208.png",
    "https://haltaalam.info/wp-content/uploads/2015/05/266.png",
    "https://haltaalam.info/wp-content/uploads/2015/05/250.png",
    "https://haltaalam.info/wp-content/uploads/2017/02/0.2517.png",
    "https://pbs.twimg.com/media/CP0mi02UAAA3U2z.png",
    "http://www.shuuf.com/shof/uploads/2015/08/31/jpg/shof_3b74fa7295ec445.jpg",
    "http://www.shuuf.com/shof/uploads/2015/08/22/jpg/shof_fa3be6ab68fb415.jpg",
    "https://pbs.twimg.com/media/CSWPvmRUcAAeZbt.png",
    "https://pbs.twimg.com/media/B18VworIcAIMGsE.png"
  ];
  var args = message.content.split(" ").slice(1);
  if (message.content.startsWith(prefix + "هل تعلم")) {
    var cat = new Discord.RichEmbed().setImage(
      cats[Math.floor(Math.random() * cats.length)]
    );
    message.channel.sendEmbed(cat);
  }
});

client.on("message", msg => {
  if (msg.content.startsWith(prefix + "cal")) {
    let args = msg.content.split(" ").slice(1);
    const question = args.join(" ");
    if (args.length < 1) {
      msg.reply("Specify a equation, please.");
    } else {
      let answer;
      try {
        answer = math.eval(question);
      } catch (err) {
        msg.reply(`Error: ${err}`);
      }

      const embed = new Discord.RichEmbed()
        .addField("**Input**: ", `**${question}**`, true)
        .addField("**Output**: ", `**${answer}**`, true);
      msg.channel.send(embed).catch(console.error);
    }
  }
});

var spee = {};
var fox = "-";
let pointsfox = {};
const foxt = [
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055751447773195/bandicam_2019-07-16_14-38-25-841.jpg",
    answers: ["البرازيل"]
  },
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055755080302593/bandicam_2019-07-17_17-14-28-589.jpg",
    answers: ["بلجيكا"]
  },
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055760180576276/bandicam_2019-07-17_17-15-04-686.jpg",
    answers: ["فرنسا"]
  },
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055761467965452/bandicam_2019-07-17_17-15-42-926.jpg",
    answers: ["كرواتيا"]
  },
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055764542390287/bandicam_2019-07-17_17-16-28-291.jpg",
    answers: ["برتغال"]
  },
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055766576889863/bandicam_2019-07-17_17-16-42-901.jpg",
    answers: ["سنغال"]
  },
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055769399525394/bandicam_2019-07-17_17-16-57-102.jpg",
    answers: ["سعودية"]
  },
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055772377350165/bandicam_2019-07-17_17-17-17-663.jpg",
    answers: ["المانيا"]
  },
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055773421862913/bandicam_2019-07-17_17-17-37-828.jpg",
    answers: ["المكسيك"]
  },
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055773761732619/bandicam_2019-07-17_17-17-52-326.jpg",
    answers: ["ارغواي"]
  },
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055830451683359/bandicam_2019-07-17_17-18-00-272.jpg",
    answers: ["صربيا"]
  },
  {
    type:
      "https://cdn.discordapp.com/attachments/576512197275156502/601055832704155658/bandicam_2019-07-17_17-18-20-074.jpg",
    answers: ["مصر"]
  }
];

client.on("message", foxm => {
  if (!pointsfox[foxm.author.id])
    pointsfox[foxm.author.id] = {
      ///LuXy-SaAD
      points: 0
    };
  if (!foxm.guild) return;
  let id = foxm.author.id;
  if (spee[id] && new Date().getTime() - spee[id] < 15 * 1000) {
    ///LuXy-SaAD
    let r = new Date().getTime() - spee[id];
    r = 15 * 1000 - r;
    foxm.channel
      .send(`**Sorry, Please Wait ${pretty(r, { verbose: true })}...**`)
      .then(m => m.delete(5000));
    return;
  }
  if (foxm.content == fox + "احزر") {
    try {
    } catch (e) {
      ///LuXy-SaAD
    }

    if (!foxm.channel.guild)
      return foxm
        .reply("**هذا الأمر للسيرفرات لا تستعملة بالخاص لا تكررة بعد تمام**")
        .then(m => m.delete(3000)); ///By KillerFox and MEDSPORT

    const foxitem = foxt[Math.floor(Math.random() * foxt.length)];
    const foxfilter = response => {
      return foxitem.answers.some(
        answer => answer.toLowerCase() === response.content.toLowerCase()
      );
    };
    foxm.channel.send("**بدات اللعبة**").then(msg => {
      const embeda7zr = new Discord.RichEmbed()
        .setColor("RANDOM")
        .setAuthor(`اكتب اجابة صحيحة لديك 15 ثانية`)
        .setImage(`${foxitem.type}`)
        .setFooter(`${foxm.author.tag}`, foxm.author.avatarURL); ///By KillerFox and MEDSPORT

      foxm.channel.send(embeda7zr).then(() => {
        foxm.channel
          .awaitMessages(foxfilter, {
            maxMatches: 1,
            time: 15000,
            errors: ["time"]
          })
          .then(collected => {
            const foxyembed = new Discord.RichEmbed()
              .setColor("RANDOM")
              .setDescription("** احسنت حصلت علئ نقطة**") ///By KillerFox and MEDSPORT
              .setFooter(`${collected.first().author}`);
            foxm.channel.sendEmbed(foxyembed);
            let won = collected.first().author;
            pointsfox[won.id].points++; ///By KillerFox and MEDSPORT
          })
          .catch(collected => {
            foxm.channel.send(`:x: |**خلص الوقت لا تستسلم**`);
          });
      });
    });
    spee[id] = new Date().getTime();
  }
});

const zead = [
  "*** انا اسمي مريم ***",
  "*** مرحباَ ماهو اسمك ؟ ***",
  "*** اهلا بك ! انا تائهه في هذا المكان  ***",
  "*** هل تود مساعدتي ؟ ***",
  "*** لماذا هل انت قاسي القلب ؟ ***",
  "*** انني اشفق عليك يجب ان تطهر روحك وتحب الخير للجميع ***",
  "*** ابتعد عني قليل انني متعبة ***",
  "*** هل انت نادم على ماقلت ؟ ***",
  "*** هل تود مساعدتي ؟ ***",
  "*** واو اشكرك انك شخصاَ رائع ! ***",
  "*** ابحث معي عن منزلي لقد كان قريباَ من هنا ***",
  "*** ولاكن عندما حل الليل لم اعد ارى اي شيء ***",
  "*** مذا تظن اين يوجد ؟ يمين او يسار ***",
  "*** هيا اذاَ ***",
  "*** اود ان اسئلك سؤال ونحن في الطريق ***",
  "*** هل تراني فتاة لطيفة ام مخيفة ***",
  "*** اشكرك !  ***",
  "*** لقد وصلنا الى المنزل شكراَ جزيلَ انتطرني ثواني وسوف اعود ***",
  "*** هل انت جاهز ؟ ***",
  "*** لقد اخبرت والدي عنك وهم متحمسين لرؤيتك ***",
  "*** هل تود ان تراهم الان ***",
  "*** انا لست الحوت الازرق كما يدعون ***",
  "*** انا لست كاذبة صدقني***",
  "*** لماذا ارى في عينيك الخوف ؟ ***",
  "*** انا مجرد فتاة لطيفة تحب اللعب مع الجميع ***",
  "*** اعرف كل شيء يحدث اسمع ذالك بالراديو ***",
  "*** سمعت ان البشر يقتلون من اجل المال فقط ***",
  "*** لماذا لم تدخل الغرفة ؟ ***",
  "*** ههههههههههههههههههه انت الان مسجون في هذه الغرفة ***",
  "*** لن تخرج حتى اعود لك بعد قليل ***",
  "*** المفتاح معك ! اكتب .مريم  ***",
  "*** مفتاح احمر , هل حصلت عليه ؟ ***",
  "*** ان لم تحصل عليه , اكتب .مريم مرة اخرى ***",
  "*** مفتاح اسود . هل حصلت عليه ؟ ***",
  "*** اين تريد ان تختبئ بسرعة قبل ان تعود ***",
  "*** لقد عادت من جديد الى المنزل ***",
  "*** لا تصدر اي صوت ! ***",
  "*** مريم : لقد عدت ***",
  "*** مريم : يا ايها المخادع اين انت ***",
  "*** مريم : اعلم انك هنا في المنزل ***",
  "*** مريم : ماذا تريد ان تسمع ***",
  "*** احد ما خرج من المنزل ***",
  "*** انتظر الجزء الثاني عندما يوصل البوت 100 سيرفر , ساعدني في نشر البوت وادخل هذا السيرفر  ***"
];
client.on("message", message => {
  if (message.content.startsWith("-مريم")) {
    var mariam = new Discord.RichEmbed()
      .setTitle("لعبة مريم ..")
      .setColor("RANDOM")
      .setDescription(`${zead[Math.floor(Math.random() * zead.length)]}`)
      .setImage(
        "https://www.npa-ar.com/wp-content/uploads/2017/08/%D9%84%D8%B9%D8%A8%D8%A9-%D9%85%D8%B1%D9%8A%D9%85-300x200.jpg"
      );
    message.channel.sendEmbed(mariam);
  }
});

var Za7f = [
  "**صورة وجهك او رجلك او خشمك او يدك**.",
  "**اصدر اي صوت يطلبه منك الاعبين**.",
  "**سكر خشمك و قول كلمة من اختيار الاعبين الي معك**.",
  "**روح الى اي قروب عندك في الواتس اب و اكتب اي شيء يطلبه منك الاعبين  الحد الاقصى 3 رسائل**.",
  "**قول نكتة اذا و لازم احد الاعبين يضحك اذا محد ضحك يعطونك ميوت الى ان يجي دورك مرة ثانية**.",
  "**سمعنا صوتك و غن اي اغنية من اختيار الاعبين الي معك**.",
  "**ذي المرة لك لا تعيدها**.",
  "**ارمي جوالك على الارض بقوة و اذا انكسر صور الجوال و ارسله في الشات العام**.",
  "**صور اي شيء يطلبه منك الاعبين**.",
  "**اتصل على ابوك و قول له انك رحت مع بنت و احين هي حامل....**.",
  "**سكر خشمك و قول كلمة من اختيار الاعبين الي معك**.",
  "**سو مشهد تمثيلي عن مصرية بتولد**.",
  "**اعطي اي احد جنبك كف اذا مافيه احد جنبك اعطي نفسك و نبي نسمع صوت الكف**.",
  "**ذي المرة لك لا تعيدها**.",
  "**تعطي اي شخص 5 الاف كرديت**.",
  "**ارمي جوالك على الارض بقوة و اذا انكسر صور الجوال و ارسله في الشات العام**.",
  "**روح عند اي احد بالخاص و قول له انك تحبه و الخ**.",
  "**اكتب في الشات اي شيء يطلبه منك الاعبين في الخاص**.",
  "**قول نكتة اذا و لازم احد الاعبين يضحك اذا محد ضحك يعطونك ميوت الى ان يجي دورك مرة ثانية**.",
  "**سامحتك خلاص مافيه عقاب لك :slight_smile:**.",
  "**اتصل على احد من اخوياك  خوياتك , و اطلب منهم مبلغ على اساس انك صدمت بسيارتك**.",
  "**غير اسمك الى اسم من اختيار الاعبين الي معك**.",
  "**اتصل على امك و قول لها انك تحبها :heart:**.",
  "**لا يوجد سؤال لك سامحتك :slight_smile:**.",
  "**قل لواحد ماتعرفه عطني كف**.",
  "**منشن الجميع وقل انا اكرهكم**.",
  "**اتصل لاخوك و قول له انك سويت حادث و الخ....**.",
  "**روح المطبخ و اكسر صحن او كوب**.",
  "**اعطي اي احد جنبك كف اذا مافيه احد جنبك اعطي نفسك و نبي نسمع صوت الكف**.",
  "**قول لاي بنت موجود في الروم كلمة حلوه**.",
  "**تكلم باللغة الانجليزية الين يجي دورك مرة ثانية لازم تتكلم اذا ما تكلمت تنفذ عقاب ثاني**.",
  "**لا تتكلم ولا كلمة الين يجي دورك مرة ثانية و اذا تكلمت يجيك باند لمدة يوم كامل من الس??رفر**.",
  "**قول قصيدة **.",
  "**تكلم باللهجة السودانية الين يجي دورك مرة ثانية**.",
  "**اتصل على احد من اخوياك  خوياتك , و اطلب منهم مبلغ على اساس انك صدمت بسيارتك**.",
  "**اول واحد تشوفه عطه كف**.",
  "**سو مشهد تمثيلي عن اي شيء يطلبه منك الاعبين**.",
  "**سامحتك خلاص مافيه عقاب لك :slight_smile:**.",
  "**اتصل على ابوك و قول له انك رحت مع بنت و احين هي حامل....**.",
  "**روح اكل ملح + ليمون اذا مافيه اكل اي شيء من اختيار الي معك**.",
  "**تاخذ عقابين**.",
  "**قول اسم امك افتخر بأسم امك**.",
  "**ارمي اي شيء قدامك على اي احد موجود او على نفسك**.",
  "**اذا انت ولد اكسر اغلى او احسن عطور عندك اذا انتي بنت اكسري الروج حقك او الميك اب حقك**.",
  "**اذهب الى واحد ماتعرفه وقل له انا كيوت وابي بوسه**.",
  "**تتصل على الوالده  و تقول لها خطفت شخص**.",
  "** تتصل على الوالده  و تقول لها تزوجت با سر**.",
  "**????تصل على الوالده  و تقول لها  احب وحده**.",
  "**تتصل على شرطي تقول له عندكم مطافي**.",
  "**خلاص سامحتك**.",
  "** تصيح في الشارع انا  مجنوون**.",
  "** تروح عند شخص تقول له احبك**."
];

client.on("message", message => {
  if (message.content.startsWith("-عقاب")) {
    if (!message.channel.guild)
      return message.reply("** This command only for servers**");
    var embed = new Discord.RichEmbed()
      .setColor("RANDOM")
      .setThumbnail(message.author.avatarURL)
      .addField(
        "Flash Bot",
        `${Za7f[Math.floor(Math.random() * Za7f.length)]}`
      );
    message.channel.sendEmbed(embed);
    console.log("[38ab] Send By: " + message.author.username);
  }
});

client.on("ready", () => {
  wait(1000);

  client.guilds.forEach(g => {
    g.fetchInvites().then(guildInvites => {
      invites[g.id] = guildInvites;
    });
  });
}); //ينطبق علي اللي فوق برضو تمم

client.on("message", async message => {
  let messageArray = message.content.split(" ");
  let args = messageArray.slice(1);
  if (message.content.startsWith(prefix + "infoinv")) {
    if (!args) return message.reply("**حدد اسم دعوة**");
    message.guild.fetchInvites().then(i => {
      let inv = i.get(args[0]);
      if (!inv) return message.reply(`**لم اقدر على ايجاد ${args}**`);
      var iNv = new Discord.RichEmbed()
        .setAuthor(message.author.username, message.author.avatarURL)
        .setThumbnail(message.author.avatarURL)
        .addField("# - صاحب الدعوة", inv.inviter, true)
        .addField("# - روم الدعوة", inv.channel, true)
        .addField(
          "# - تاريخ انتهاء الدعوة",
          moment(inv.expiresAt).format("YYYY/M/DD:h"),
          true
        )
        .addField(
          "# - تم انشاء الدعوة",
          moment(inv.createdAt).format("YYYY/M/DD:h"),
          true
        )
        .addField(
          "# - مدة الدعوة",
          moment(inv.maxAge).format("DD **ساعة** h **يوم**"),
          true
        )
        .addField("# - الاستخدامات", inv.uses || inv.maxUses, true);
      message.channel.send(iNv);
    });
  }
});

client.on("message", async message => {
  if (message.content.includes("discord.gg")) {
    if (message.member.hasPermission("MANAGE_GUILD")) return;
    if (!message.channel.guild) return;
    message.delete();
    var command = message.content.split(" ")[0];
    let muterole = message.guild.roles.find(`name`, "muted");
    if (!muterole) {
      try {
        muterole = await message.guild.createRole({
          name: "muted",
          color: "#000000",
          permissions: []
        });
        message.guild.channels.forEach(async (channel, id) => {
          await channel.overwritePermissions(muterole, {
            SEND_MESSAGES: false,
            ADD_REACTIONS: false
          });
        });
      } catch (e) {
        console.log(e.stack);
      }
    }
    if (!message.channel.guild)
      return message.reply("** This command only for servers**");
    message.member.addRole(muterole);
    const embed500 = new Discord.RichEmbed()
      .setTitle("Muted Ads")
      .addField(
        `**  You Have Been Muted **`,
        `**Reason : Sharing Another Discord Link**`
      )
      .setColor("c91616")
      .setThumbnail(`${message.author.avatarURL}`)
      .setAuthor(message.author.username, message.author.avatarURL)
      .setFooter(`${message.guild.name} `);
    message.channel.send(embed500);
    message.author.send(
      "` انت معاقب ميوت شاتي بسبب نشر سرفرات ان كان عن طريق الخطا من فضلك تكلم مع الادارة `"
    );
  }
});

client.on("message", message => {
  if (message.content.startsWith(prefix + "moveall")) {
    if (!message.member.hasPermission("MOVE_MEMBERS"))
      return message.channel.send("**لايوجد لديك صلاحية سحب الأعضاء**");
    if (!message.guild.member(client.user).hasPermission("MOVE_MEMBERS"))
      return message.reply("**لايوجد لدي صلاحية السحب**");
    if (message.member.voiceChannel == null)
      return message.channel.send(`**الرجاء الدخول لروم صوتي**`);
    var author = message.member.voiceChannelID;
    var m = message.guild.members.filter(m => m.voiceChannel);
    message.guild.members
      .filter(m => m.voiceChannel)
      .forEach(m => {
        m.setVoiceChannel(author);
      });
    message.channel.send(`**تم سحب جميع الأعضاء الي الروم الصوتي حقك.**`);
  }
});

client.on("message", async message => {
  const ms = require("ms");
  if (message.author.omar) return;
  if (!message.content.startsWith(prefix)) return;
  if (!message.channel.guild)
    return message.channel
      .send("<a:x1:669825119904071691> **-** **This command only for servers**")
      .then(m => m.delete(5000));
  if (!message.member.hasPermission("MANAGE_ROLES")) return;
  if (!message.guild.member(message.author).hasPermission("MANAGE_ROLES"))
    return message.channel.send(
      "<a:x1:669825119904071691> **-** **You Don't Have ` MANAGE_ROLES ` Permission**"
    );
  if (!message.guild.member(client.user).hasPermission("MANAGE_ROLES"))
    return message.channel
      .send(
        "<a:x1:669825119904071691> **-** **I Don't Have ` MANAGE_ROLES ` Permission**"
      )
      .then(msg => msg.delete(6000));
  var command = message.content.split(" ")[0];
  command = command.slice(prefix.length);
  var args = message.content.split(" ").slice(1);
  if (command == "mute") {
    let tomute = message.guild.member(
      message.mentions.users.first() || message.guild.members.get(args[0])
    );
    let embed = new Discord.RichEmbed().setImage(
      "https://5.top4top.net/p_14102aq7q1.png"
    );
    if (!tomute) return message.channel.sendEmbed(embed);
    if (tomute.hasPermission("MANAGE_MESSAGES"))
      return message.channel.send(
        "<a:x1:669825119904071691> **-** **Sorry I Don't Have ` MANAGE_MESSAGE ` Permission"
      );
    let muterole = message.guild.roles.find(`name`, "muted");
    //start of create role
    if (!muterole) {
      try {
        muterole = await message.guild.createRole({
          name: "muted",
          color: "#000000",
          permissions: []
        });
        message.guild.channels.forEach(async (channel, id) => {
          await channel.overwritePermissions(muterole, {
            SEND_MESSAGES: false,
            ADD_REACTIONS: false
          });
        });
      } catch (e) {
        console.log(e.stack);
      }
    }
    //end of create role
    let mutetime = args[1];
    if (!mutetime)
      return message.channel.send(
        "<a:x1:669825119904071691>  This Time Is Incorrect"
      );

    await tomute.addRole(muterole.id);
    message.channel.send(
      "<a:x2:669825119492767745> **-** **has been muted !** :zipper_mouth:"
    );
    setTimeout(function() {
      tomute.removeRole(muterole.id);
      message.channel.send(
        `<@${tomute.id}> **انقضى الوقت وتم فك الميوت عن الشخص**:white_check_mark: `
      );
    }, ms(mutetime));
  }
  if (command === `unmute`) {
    if (!message.member.hasPermission("MANAGE_ROLES"))
      return message.channel
        .sendMessage(
          "<a:x1:669825119904071691> **-** **You Don't Have Permission For Unmute This User."
        )
        .then(m => m.delete(5000));
    if (!message.guild.member(client.user).hasPermission("MANAGE_ROLES"))
      return message
        .reply(
          "<a:x1:669825119904071691> **-** **I Don't Have `MANAGE_ROLES` Permission**"
        )
        .then(msg => msg.delete(6000));

    let toMute =
      message.guild.member(message.mentions.users.first()) ||
      message.guild.members.get(args[0]);
    if (!toMute)
      return message.channel.sendMessage(
        "<a:x1:669825119904071691> **-** **I can't find this member**"
      );

    let role = message.guild.roles.find(r => r.name === "muted");

    if (!role || !toMute.roles.has(role.id))
      return message.channel.sendMessage(
        "<a:x1:669825119904071691 **-** **This user not muted**"
      );

    await toMute.removeRole(role);
    message.channel.sendMessage(
      "<a:x2:669825119492767745> **-** **Done unmuted.**"
    );

    return;
  }
});

client.on("message", message => {
  if (message.author.bot) return;

  if (!message.content.startsWith(prefix)) return;

  let command = message.content.split(" ")[0];
  command = command.slice(prefix.length);

  let args = message.content.split(" ").slice(1);

  // +say
  if (command === "say") {
    if (!message.channel.guild)
      return message.channel
        .send("**هذا الأمر فقط للسيرفرات**")
        .then(m => m.delete(5000));
    if (!message.member.hasPermission("ADMINISTRATOR"))
      return message.channel.send("**للأسف لا تمتلك صلاحية** `ADMINISTRATOR`");
    message.delete();
    message.channel.sendMessage(args.join(" "));
  }

  if (command == "embed") {
    if (!message.channel.guild)
      return message.channel
        .send("**هذا الأمر فقط للسيرفرات**")
        .then(m => m.delete(5000));
    if (!message.member.hasPermission("MANAGE_MESSAGES"))
      return message.channel.send(
        "**للأسف لا تمتلك صلاحية** `MANAGE_MESSAGES`"
      );
    let say = new Discord.RichEmbed()
      .setDescription(args.join("  "))
      .setColor(0x23b2d6);
    message.channel.sendEmbed(say);
    message.delete();
  }
});

client.on("message", message => {
  if (!message.channel.guild) return;
  if (message.author.bot) return;
  if (message.content === prefix + "image") {
    const embed = new Discord.RichEmbed()

      .setTitle(`This is  ** ${message.guild.name} **  Photo !`)
      .setAuthor(message.author.username, message.guild.iconrURL)
      .setColor(0x164fe3)
      .setImage(message.guild.iconURL)
      .setURL(message.guild.iconrURL)
      .setTimestamp();

    message.channel.send({ embed });
  }
});

client.on("message", message => {
  if (!message.channel.guild) return;
  if (message.content.startsWith(prefix + "move")) {
    if (message.member.hasPermission("MOVE_MEMBERS")) {
      if (message.mentions.users.size === 0) {
        return message.channel.send(
          "``لاستخدام الأمر اكتب هذه الأمر : " + prefix + "move @user``"
        );
      }
      if (message.member.voiceChannel != null) {
        if (message.mentions.members.first().voiceChannel != null) {
          var authorchannel = message.member.voiceChannelID;
          var usermentioned = message.mentions.members.first().id;
          var embed = new Discord.RichEmbed()
            .setTitle("Succes!")
            .setColor("#000000")
            .setDescription(
              `لقد قمت بسحب <@${usermentioned}> الى الروم الصوتي الخاص بك? `
            );
          var embed = new Discord.RichEmbed()
            .setTitle(`You are Moved in ${message.guild.name}`)
            .setColor("RANDOM")
            .setDescription(
              `**<@${message.author.id}> Moved You To His Channel!\nServer --> ${message.guild.name}**`
            );
          message.guild.members
            .get(usermentioned)
            .setVoiceChannel(authorchannel)
            .then(m => message.channel.send(embed));
          message.guild.members.get(usermentioned).send(embed);
        } else {
          message.channel.send(
            "``لا تستطيع سحب " +
              message.mentions.members.first() +
              " `يجب ان يكون هذه العضو في روم صوتي`"
          );
        }
      } else {
        message.channel.send(
          "**``يجب ان تكون في روم صوتي لكي تقوم بسحب العضو أليك``**"
        );
      }
    } else {
      message.react("?");
    }
  }
});

client.on("message", message => {
  if (!message.channel.guild) return;
  if (message.content == prefix + "allbots") {
    if (message.author.bot) return;
    let i = 1;
    const botssize = message.guild.members
      .filter(m => m.user.bot)
      .map(m => `${i++} - <@${m.id}>`);
    const embed = new Discord.RichEmbed()
      .setAuthor(message.author.tag, message.author.avatarURL)
      .setDescription(
        `**Found ${
          message.guild.members.filter(m => m.user.bot).size
        } bots in this Server**
${botssize.join("\n")}`
      )
      .setFooter(client.user.username, client.user.avatarURL)
      .setTimestamp();
    message.channel.send(embed);
  }
});

client.on("message", function(msg) {
  const prefix = "-";
  if (msg.content == prefix + "server") {
    let embed = new Discord.RichEmbed()
      .setColor("RANDOM")
      .setThumbnail(msg.guild.iconURL)
      .setTitle(`Showing Details Of  **${msg.guild.name}**`)
      .addField("🌐** نوع السيرفر**", `[** __${msg.guild.region}__ **]`, true)
      .addField("🏅** __الرتب__**", `[** __${msg.guild.roles.size}__ **]`, true)
      .addField(
        "🔴**__ عدد الاعضاء__**",
        `[** __${msg.guild.memberCount}__ **]`,
        true
      )
      .addField(
        "🔵**__ عدد الاعضاء الاونلاين__**",
        `[** __${
          msg.guild.members.filter(m => m.presence.status == "online").size
        }__ **]`,
        true
      )
      .addField(
        "📝**__ الرومات الكتابية__**",
        `[** __${msg.guild.channels.filter(m => m.type === "text").size}__** ]`,
        true
      )
      .addField(
        "🎤**__ رومات الصوت__**",
        `[** __${
          msg.guild.channels.filter(m => m.type === "voice").size
        }__ **]`,
        true
      )
      .addField("👑**__ الأونـر__**", `**${msg.guild.owner}**`, true)
      .addField("🆔**__ ايدي السيرفر__**", `**${msg.guild.id}**`, true)
      .addField(
        "📅**__ تم عمل السيرفر في__**",
        msg.guild.createdAt.toLocaleString()
      );
    msg.channel.send({ embed: embed });
  }
});

client.on("message", message => {
  if (message.content == prefix + "bot") {
    message.channel.send({
      embed: new Discord.RichEmbed()
        .setAuthor(client.user.username, client.user.avatarURL)
        .setThumbnail(client.user.avatarURL)
        .setColor("RANDOM")
        .setTitle("``INFO Bot`` ")
        .addField(
          "``My Ping``",
          [`${Date.now() - message.createdTimestamp}` + "MS"],
          true
        )
        .addField(
          "``RAM Usage``",
          `[${(process.memoryUsage().rss / 1048576).toFixed()}MB]`,
          true
        )
        .addField("``servers``", [client.guilds.size], true)
        .addField("``channels``", `[ ${client.channels.size} ]`, true)
        .addField("``Users``", `[ ${client.users.size} ]`, true)
        .addField("``My Name``", `[ ${client.user.tag} ]`, true)
        .addField("``My ID``", `[ ${client.user.id} ]`, true)
        .addField("``My Prefix``", `[ - ]`, true)
        .addField("``My Language``", `[ Java Script ]`, true)
        .setFooter("By | ! - L U X Y")
    });
  }
});

client.on("message", message => {
  if (!message.channel.guild) return;
  if (message.content == "-count")
    message.reply(`**${message.guild.memberCount}**`);
});

client.on("message", async message => {
  if (message.content == prefix + "invite") {
    let oi = message.mentions.users.first()
      ? message.mentions.users.first().id
      : message.author.id;
    let Tag = message.mentions.users.first()
      ? message.mentions.users.first().tag
      : message.author.tag;
    let Username = message.mentions.users.first()
      ? message.mentions.users.first().username
      : message.author.username;
    let Avatar = message.mentions.users.first()
      ? message.mentions.users.first().avatarURL
      : message.author.avatarURL;

    message.guild.fetchInvites().then(invs => {
      let member = client.guilds.get(message.guild.id).members.get(oi);
      let personalInvites = invs.filter(i => i.inviter.id === oi);
      let urll = invs.filter(i => i.inviter.id === oi);
      let link = urll.reduce(
        (p, v) =>
          v.url + ` , Total de membros recrutados no convite: ${v.uses}.\n` + p,
        `\nServidor: ${message.guild.name} \n `
      );
      let inviteCount = personalInvites.reduce((p, v) => v.uses + p, 0);
      let inviteCode = personalInvites.reduce((p, v) => v.code);
      let possibleInvites = [["Total de membros recrutados:"]];
      possibleInvites.push([inviteCount, inviteCode]);
      let user = message.mentions.users.first() || message.author;
      let mem = message.guild.member(user);
      let millisJoined = new Date().getTime() - mem.joinedAt.getTime();
      let daysJoined = millisJoined / 1000 / 60 / 60 / 24;

      var inviteInfo = new Discord.RichEmbed()
        .setTitle(`:incoming_envelope: **[INVITE INFO]** ${Username}`)
        .setThumbnail(client.user.avatarURL)
        .addField("**الدعوات**", `**➥** [ شخص **${Number(inviteCount)}** ]`)
        .addField(
          "**تم الانضمام للسيرفر من**",
          `**➥** [ يوم **${daysJoined.toFixed(0)}** ]`
        )
        .addField(
          "**رابط دعوة الانضمام**",
          `**➥** [ **https://discord.gg/${inviteCode || "Zm2U6we"}** ]`
        )
        .setColor("RANDOM")
        .setTimestamp()
        .setFooter(Tag, Avatar);

      message.channel.send(inviteInfo);
    });
  }
});

//Funny Commands!!

//////////////

var Enmap = require("enmap");
client.antibots = new Enmap({ name: "antibot" });
var antibots = client.antibots;
var julian = client;
julian.on("message", codes => {
  var prefix = "-";
  if (codes.content == prefix + "antibots on") {
    if (
      codes.author.bot ||
      !codes.channel.guild ||
      codes.author.id != codes.guild.ownerID
    )
      return;
    antibots.set(`${codes.guild.id}`, {
      onoff: "On"
    });

    codes.channel.send("AntiBots Join ON <a:x2:669825119492767745>");
  }
  if (codes.content == prefix + "antibots off") {
    if (
      codes.author.bot ||
      !codes.channel.guild ||
      codes.author.id != codes.guild.ownerID
    )
      return;
    antibots.set(`${codes.guild.id}`, {
      onoff: "Off"
    });
    codes.channel.send("AntiBots Join OFF <a:x2:669825119492767745>");
  }
});

julian.on("guildMemberAdd", member => {
  if (!antibots.get(`${member.guild.id}`)) {
    antibots.set(`${member.guild.id}`, {
      onoff: "Off"
    });
  }
  if (antibots.get(`${member.guild.id}`).onoff == "Off") return;
  if (member.user.bot) return member.kick();
});

client.on("messageDelete", message => {
  if (message.channel.type === "dm") return;
  if (!message.guild.member(client.user).hasPermission("EMBED_LINKS")) return;
  if (!message.guild.member(client.user).hasPermission("MANAGE_MESSAGES"))
    return;
  var logChannel = message.guild.channels.find(c => c.name === "log");
  if (!logChannel) return;
  message.guild.fetchAuditLogs().then(logs => {
    var by = logs.entries.first().executor.id;
    let msg = `\`\`\`${message}\`\`\``;
    if (msg == "```") return;
    let messageDelete = new Discord.RichEmbed()
      .setColor("#36393e")
      .setDescription(
        `**:wastebasket: Message Deleted, sent by <@${message.author.id}> In : <#${message.channel.id}>**\n${msg}`
      )
      .setTimestamp();
    logChannel.send(messageDelete);
  });
});
client.on("messageUpdate", (oldMessage, newMessage) => {
  if (!oldMessage.channel.type === "dm") return;
  if (oldMessage.author.bot) return;
  if (!oldMessage.guild.member(client.user).hasPermission("EMBED_LINKS"))
    return;
  if (!oldMessage.guild.member(client.user).hasPermission("MANAGE_MESSAGES"))
    return;
  var logChannel = oldMessage.guild.channels.find(c => c.name === "log");
  if (!logChannel) return;
  let omsg = `\`\`\`${oldMessage}\`\`\``;
  let nmsg = `\`\`\`${newMessage}\`\`\``;
  if (omsg == nmsg) return;
  let messageUpdate = new Discord.RichEmbed()
    .setColor("#36393e")
    .addField(`**OLD**`, `${omsg}`)
    .addField(`**NEW**`, `${nmsg}`)
    .setDescription(
      `**:warning: Message edited,** sent by <@${oldMessage.author.id}> In : <#${oldMessage.channel.id}>`
    )
    .setTimestamp();
  logChannel.send(messageUpdate);
});
client.on("roleCreate", role => {
  if (!role.guild.member(client.user).hasPermission("EMBED_LINKS")) return;
  if (!role.guild.member(client.user).hasPermission("VIEW_AUDIT_LOG")) return;
  var log = role.guild.channels.find(c => c.name === "log");
  if (!log) return;
  role.guild.fetchAuditLogs().then(logs => {
    var userID = logs.entries.first().executor.id;
    let roleCreate = new Discord.RichEmbed()
      .setThumbnail(
        `https://cdn.discordapp.com/attachments/584630360017469461/588033107635208193/563111847692337174.png`
      )
      .setDescription(
        `**:fleur_de_lis: New Role has been created,\nRole : \`${role.name}\` :id: ${role.id}\nby : <@${userID}>**`
      )
      .setColor("#36393e")
      .setTimestamp();
    log.send(roleCreate);
  });
});
client.on("roleDelete", role => {
  if (!role.guild.member(client.user).hasPermission("EMBED_LINKS")) return;
  if (!role.guild.member(client.user).hasPermission("VIEW_AUDIT_LOG")) return;
  var log = role.guild.channels.find(c => c.name === "log");
  if (!log) return;
  role.guild.fetchAuditLogs().then(logs => {
    var userID = logs.entries.first().executor.id;
    let roleDelete = new Discord.RichEmbed()
      .setDescription(
        `**:fleur_de_lis: Role has been deleted,\nRole : \`${role.name}\` :id: ${role.id}\nby : <@${userID}>**`
      )
      .setColor("#36393e")
      .setThumbnail(
        `https://cdn.discordapp.com/attachments/584630360017469461/588033109178712074/563111850162520077.png`
      )
      .setTimestamp()
      .setFooter(role.guild.name, role.guild.iconURL);
    log.send(roleDelete);
  });
});
///////////////
client.on("roleUpdate", (oldRole, newRole) => {
  if (!oldRole.guild.member(client.user).hasPermission("VIEW_AUDIT_LOG"))
    return;
  var log = oldRole.guild.channels.find(c => c.name === "log");
  if (!log) return;
  oldRole.guild.fetchAuditLogs().then(logs => {
    var userID = logs.entries.first().executor.id;
    if (oldRole.mystery) return;
    let roleUpdate = new Discord.RichEmbed()
      .setColor("#36393e")
      .setAuthor(
        oldRole.guild.name,
        `https://cdn.discordapp.com/icons/${oldRole.guild.id}/${oldRole.guild.icon}.png?size=1024`
      )
      .setDescription(`**${newRole} role has been updated by <@${userID}>**`)
      .setTimestamp()
      .setFooter(oldRole.guild.name);
    if (oldRole.name !== newRole.name)
      roleUpdate.addField("**Old name**", `${oldRole.name}`, true);
    if (oldRole.name !== newRole.name)
      roleUpdate.addField("**New name**", `${newRole.name}`, true);
    if (oldRole.hexColor !== newRole.hexColor)
      roleUpdate.addField("**Old color**", `${oldRole.hexColor}`, true);
    if (oldRole.hexColor !== newRole.hexColor)
      roleUpdate.addField("**New color**", `${newRole.hexColor}`, true);
    if (oldRole.permissions !== newRole.permissions) {
      roleUpdate.addField("**Old prems**", oldRole.permissions, true);
      roleUpdate.addField("**New prems**", oldRole.permissions, true);
    }
    log.send(roleUpdate);
  });
});
client.on("channelCreate", channel => {
  if (!channel.guild) return;
  if (!channel.guild.member(client.user).hasPermission("VIEW_AUDIT_LOG"))
    return;
  var log = channel.guild.channels.find(c => c.name === "log");
  if (!log) return;
  channel.guild.fetchAuditLogs().then(logs => {
    var by = logs.entries.first().executor.id;
    var userAvatar = logs.entries.first().executor.avatarURL;
    let channelCreate = new Discord.RichEmbed()
      .setAuthor(
        channel.guild.name,
        `https://cdn.discordapp.com/icons/${channel.guild.id}/${channel.guild.icon}.png?size=1024`
      )
      .setDescription(
        `**\`${channel.name}\` Channel has been created..\n\nType: \`${channel.type}\`\n\nby <@${by}>**`
      )
      .setColor("#36393e")
      .setTimestamp()
      .setFooter(
        channel.guild.name,
        `https://cdn.discordapp.com/icons/${channel.guild.id}/${channel.guild.icon}.png?size=1024`
      );

    log.send(channelCreate);
  });
});
client.on("channelDelete", channel => {
  if (!channel.guild) return;
  if (!channel.guild.member(client.user).hasPermission("EMBED_LINKS")) return;
  if (!channel.guild.member(client.user).hasPermission("VIEW_AUDIT_LOG"))
    return;
  var log = channel.guild.channels.find(c => c.name === "log");
  if (!log) return;
  channel.guild.fetchAuditLogs().then(logs => {
    var by = logs.entries.first().executor.id;
    var userAvatar = logs.entries.first().executor.avatarURL;
    let channelDelete = new Discord.RichEmbed()
      .setAuthor(
        channel.guild.name,
        `https://cdn.discordapp.com/icons/${channel.guild.id}/${channel.guild.icon}.png?size=1024`
      )
      .setDescription(
        `**\`${channel.name}\` Channel has been Deleted..\n\nType: ${channel.type}\n\nby <@${by}>**`
      )
      .setColor("#36393e")
      .setTimestamp()
      .setFooter(
        channel.guild.name,
        `https://cdn.discordapp.com/icons/${channel.guild.id}/${channel.guild.icon}.png?size=1024`
      );

    log.send(channelDelete);
  });
});

////
client.on("emojiCreate", emoji => {
  var log = emoji.guild.channels.find(c => c.name === "log");
  if (!log) return;
  emoji.guild.fetchAuditLogs().then(logs => {
    var by = logs.entries.first().executor.id;

    let ee = new Discord.RichEmbed()
      .setColor("#36393e")
      .setThumbnail(`https://cdn.discordapp.com/emojis/${emoji.id}.png`)
      .setDescription(
        `**{ ${emoji} } has been added to the emoji list\n:id: \`${emoji.id}\`\n\nby <@${by}>**`
      )
      .setTimestamp()
      .setFooter(
        emoji.guild.name,
        `https://cdn.discordapp.com/icons/${emoji.guild.id}/${emoji.guild.icon}.png?size=1024`
      );
    log.send(ee);
  });
});
client.on("emojiDelete", emoji => {
  var log = emoji.guild.channels.find(c => c.name === "log");
  if (!log) return;
  emoji.guild.fetchAuditLogs().then(logs => {
    var by = logs.entries.first().executor.id;

    let ee = new Discord.RichEmbed()
      .setColor("#36393e")
      .setThumbnail(`https://cdn.discordapp.com/emojis/${emoji.id}.png`)
      .setDescription(
        `**{ ${emoji} } has been removed from the emoji list\n:id: \`${emoji.id}\`\n\nby <@${by}>**`
      )
      .setTimestamp()
      .setFooter(
        emoji.guild.name,
        `https://cdn.discordapp.com/icons/${emoji.guild.id}/${emoji.guild.icon}.png?size=1024`
      );
    log.send(ee);
  });
});
//////
client.on("emojiUpdate", (oldEmoji, newEmoji) => {
  var log = oldEmoji.guild.channels.find(c => c.name === "log");
  if (!log) return;
  oldEmoji.guild.fetchAuditLogs().then(logs => {
    var by = logs.entries.first().executor.id;
    let emojiUpdate = new Discord.RichEmbed()
      .setColor("#36393e")
      .setThumbnail(`https://cdn.discordapp.com/emojis/${oldEmoji.id}.png`)
      .setDescription(
        `**{ ${oldEmoji} } Name has been updated!\n\nOLD: \`${oldEmoji.name}\`\n\nNEW: \`${newEmoji.name}\`\n:id: \`${oldEmoji.id}\`\n\nby <@${by}>**`
      )
      .setFooter(
        oldEmoji.guild.name,
        `https://cdn.discordapp.com/icons/${oldEmoji.guild.id}/${oldEmoji.guild.icon}.png?size=1024`
      )
      .setTimestamp();
    log.send(emojiUpdate);
  });
});
client.on("guildBanAdd", (guild, user) => {
  if (!guild.member(client.user).hasPermission("VIEW_AUDIT_LOG")) return;
  var log = guild.channels.find(c => c.name === "log");
  if (!log) return;
  guild.fetchAuditLogs().then(logs => {
    var by = logs.entries.first().executor.id;
    let banInfo = new Discord.RichEmbed()
      .setThumbnail(`${user.avatarURL}`)
      .setColor("#36393e")
      .setDescription(
        `**:airplane: User Banned,\n\nUser : <@${user.id}> :id: ${user.id}\n\nBy : <@${by}>.**`
      )
      .setTimestamp()
      .setFooter(guild.name, guild.iconURL);
    log.send(banInfo);
  });
});
client.on("guildBanRemove", (guild, user) => {
  if (!guild.member(client.user).hasPermission("EMBED_LINKS")) return;
  if (!guild.member(client.user).hasPermission("VIEW_AUDIT_LOG")) return;

  var logChannel = guild.channels.find(c => c.name === "log");
  if (!logChannel) return;

  guild.fetchAuditLogs().then(logs => {
    var userID = logs.entries.first().executor.id;
    var userAvatar = logs.entries.first().executor.avatarURL;

    let unBanInfo = new Discord.RichEmbed()
      .setThumbnail(`${user.avatarURL}`)
      .setColor("#36393e")
      .setDescription(
        `**:airplane_arriving: User UnBanned,\n\nUser : <@${user.id}> :id: ${user.id}\n\nBy : <@${userID}>.**`
      )
      .setTimestamp()
      .setFooter(guild.name, guild.iconURL);

    logChannel.send(unBanInfo);
  });
});
client.on("guildUpdate", (oldGuild, newGuild) => {
  if (!oldGuild.member(client.user).hasPermission("VIEW_AUDIT_LOG")) return;

  var log = newGuild.channels.find(c => c.name === "log");
  if (!log) return;
  oldGuild.fetchAuditLogs().then(logs => {
    var by = logs.entries.first().executor.id;
    let guild = new Discord.RichEmbed()
      .setAuthor(
        newGuild.name,
        `https://cdn.discordapp.com/icons/${newGuild.id}/${newGuild.icon}.png?size=1024`
      )
      .setDescription(`**Guild Has Been Updated by <@${by}>**`)
      .setTimestamp();
    if (oldGuild.name !== newGuild.name) {
      guild.addField("**Old name**", oldGuild.name, true);
      guild.addField("**New name**", newGuild.name, true);
    }
    if (oldGuild.region !== newGuild.region) {
      guild.addField("**Old Region**", oldGuild.region, true);
      guild.addField("**New Region**", newGuild.region, true);
    }
    if (oldGuild.verificationLevel !== newGuild.verificationLevel) {
      guild.addField(
        "**Old verification level**",
        oldGuild.verificationLevel,
        true
      );
      guild.addField(
        "**New verification level**",
        newGuild.verificationLevel,
        true
      );
    }
    if (oldGuild.iconURL !== newGuild.iconURL) {
      guild.addField("**Changing the server photo to:**", `** **`);
      guild.setImage(
        `https://cdn.discordapp.com/icons/${newGuild.id}/${newGuild.icon}.png?size=1024`
      );
    }
    if (oldGuild.afkChannel !== newGuild.afkChannel) {
      guild.addField("**Old Afk Channel**", oldGuild.afkChannel, true);
      guild.addField("**New Afk Channel**", newGuild.afkChannel, true);
    }
    if (oldGuild.systemChannel !== newGuild.systemChannel) {
      guild.addField("**Old System Channel**", oldGuild.systemChannel, true);
      guild.addField("**New System Channel**", newGuild.systemChannel, true);
    }
    if (oldGuild.afkTimeout !== newGuild.afkTimeout) {
      guild.addField("**Old AfkTimeout**", oldGuild.afkTimeout, true);
      guild.addField("**New AfkTimeout**", newGuild.afkTimeout, true);
    }
    log.send(guild);
  });
});
client.on("guildMemberUpdate", (oldMember, newMember) => {
  var log = oldMember.guild.channels.find(c => c.name === "log");
  if (!log) return;
  oldMember.guild.fetchAuditLogs().then(logs => {
    var by = logs.entries.first().executor.id;
    let member = new Discord.RichEmbed()
      .setAuthor(
        oldMember.guild.name,
        `https://cdn.discordapp.com/icons/${newMember.guild.id}/${newMember.guild.icon}.png?size=1024`
      )
      .setDescription(`**${newMember} has been updated by <@${by}>**`)
      .setFooter(
        oldMember.guild.name,
        `https://cdn.discordapp.com/icons/${newMember.guild.id}/${newMember.guild.icon}.png?size=1024`
      )
      .setTimestamp();
    if (oldMember.nickname !== newMember.nickname) {
      member.addField("**Old nickname**", oldMember.nickname, true);
      member.addField("**New nickname**", newMember.nickname, true);
    }
    if (oldMember.roles.size < newMember.roles.size) {
      let role = newMember.roles
        .filter(r => !oldMember.roles.has(r.id))
        .first();
      member.addField("**Changed roles**", `**${role} ✅**`);
    }
    if (oldMember.roles.size > newMember.roles.size) {
      let role = oldMember.roles
        .filter(r => !newMember.roles.has(r.id))
        .first();
      member.addField("**Changed roles**", `**${role} ⛔**`);
    }
    log.send(member);
  });
});
client.on("guildMemberAdd", member => {
  var logChannel = member.guild.channels.find(c => c.name === "log");
  if (!logChannel) return;

  let newMember = new Discord.RichEmbed()
    .setThumbnail(member.user.avatarURL)
    .setColor("#36393e")
    .setDescription(
      `**<@${
        member.user.id
      }> has joined the server :large_orange_diamond:\n\n:timer: account created:\n\`${Days(
        member.user.createdAt
      )}\`.**`
    )
    .setTimestamp();

  logChannel.send(newMember);
});
function Days(date) {
  let now = new Date();
  let diff = now.getTime() - date.getTime();
  let days = Math.floor(diff / 86400000);
  return days + (days == 1 ? " day" : " days") + " ago";
}
client.on("guildMemberRemove", member => {
  var logChannel = member.guild.channels.find(c => c.name === "log");
  if (!logChannel) return;

  let leaveMember = new Discord.RichEmbed()
    .setThumbnail(member.user.avatarURL)
    .setColor("#36393e")
    .setDescription(
      `**<@${member.user.id}> has left the server :large_blue_diamond:**`
    )
    .setTimestamp();

  logChannel.send(leaveMember);
});

client.on("message", async message => {
  var room;
  var title;
  var duration;
  var gMembers;
  var filter = m => m.author.id === message.author.id;
  if (message.content.startsWith(prefix + "giveaway")) {
    //return message.channel.send('<a:rj:601337828122558468>| **هذا الامر معطل حاليا.. ``حاول في وقت لاحق``**');
    if (!message.guild.member(message.author).hasPermission("MANAGE_GUILD"))
      return message.channel.send(
        "<a:x1:669825119904071691>| **يجب أن يكون لديك خاصية التعديل على السيرفر**"
      );
    message.channel.send(` **من فضلك اكتب اسم الروم**`).then(msgg => {
      message.channel
        .awaitMessages(filter, {
          max: 1,
          time: 20000,
          errors: ["time"]
        })
        .then(collected => {
          let room = message.guild.channels.find(
            "name",
            collected.first().content
          );
          if (!room)
            return message.channel.send(
              "<a:x1:669825119904071691> | **لم اقدر على ايجاد الروم المطلوب**"
            );
          room = collected.first().content;
          collected.first().delete();
          msgg
            .edit("**اكتب مدة القيف اواي بالدقائق , مثال : 60**")
            .then(msg => {
              message.channel
                .awaitMessages(filter, {
                  max: 1,
                  time: 20000,
                  errors: ["time"]
                })
                .then(collected => {
                  if (isNaN(collected.first().content))
                    return message.channel.send(
                      "<a:x1:669825119904071691 | **يجب عليك ان تحدد وقت زمني صحيح.. ``يجب عليك اعادة كتابة الامر``**"
                    );
                  duration = collected.first().content * 60000;
                  collected.first().delete();
                  msgg
                    .edit("**واخيرا اكتب على ماذا تريد القيف اواي**")
                    .then(msg => {
                      message.channel
                        .awaitMessages(filter, {
                          max: 1,
                          time: 20000,
                          errors: ["time"]
                        })
                        .then(collected => {
                          title = collected.first().content;
                          collected.first().delete();
                          try {
                            let giveEmbed = new Discord.RichEmbed()
                              .setAuthor(
                                message.guild.name,
                                message.guild.iconURL
                              )
                              .setTitle(title)
                              .setDescription(
                                `المدة : ${duration / 60000} دقائق`
                              )
                              .setFooter(
                                message.author.username,
                                message.author.avatarURL
                              );
                            message.guild.channels
                              .find("name", room)
                              .send(giveEmbed)
                              .then(m => {
                                let re = m.react("🎉");
                                setTimeout(() => {
                                  let users = m.reactions.get("🎉").users;
                                  let list = users
                                    .array()
                                    .filter(u => u.id !== m.author.id);
                                  let gFilter =
                                    list[
                                      Math.floor(Math.random() * list.length) +
                                        0
                                    ];
                                  if (users.size === 1)
                                    gFilter = "**لم يتم التحديد**";
                                  let endEmbed = new Discord.RichEmbed()
                                    .setAuthor(
                                      message.author.username,
                                      message.author.avatarURL
                                    )
                                    .setTitle(title)
                                    .addField(
                                      "انتهى القيف اواي !",
                                      `الفائز: هو : ${gFilter}`
                                    )
                                    .setFooter(
                                      message.guild.name,
                                      message.guild.iconURL
                                    );
                                  m.edit(endEmbed);
                                }, duration);
                              });
                            msgg.edit(
                              `<a:x2:669825119492767745> | **تم اعداد القيف اواي**`
                            );
                          } catch (e) {
                            msgg.edit(
                              `<a:x1:669825119904071691> | **لم اقدر على اعداد القيف اواي بسبب نقص الخصائص**`
                            );
                            console.log(e);
                          }
                        });
                    });
                });
            });
        });
    });
  }
});

client.on("guildCreate", guild => {
  let channel = client.channels.get(
    guild.channels
      .filter(
        c =>
          c.permissionsFor(client.user).has("SEND_MESSAGES") &&
          c.type === "text"
      )
      .map(r => r.id)[0]
  );

  channel.send("**لمعرفة الاوامر الخاصه بالبوت اكتب** ``-help``");
}); //LuXy-SaAD

//games
const cuttweet = [
  "كت تويت ‏| تخيّل لو أنك سترسم شيء وحيد فيصبح حقيقة، ماذا سترسم؟",
  "كت تويت | أكثر شيء يُسكِت الطفل برأيك؟",
  "كت تويت | الحرية لـ ... ؟",
  "كت تويت | قناة الكرتون المفضلة في طفولتك؟",
  "كت تويت ‏| كلمة للصُداع؟",
  "كت تويت ‏| ما الشيء الذي يُفارقك؟",
  "كت تويت | موقف مميز فعلته مع شخص ولا يزال يذكره لك؟",
  "كت تويت ‏| أيهما ينتصر، الكبرياء أم الحب؟",
  "كت تويت | بعد ١٠ سنين ايش بتكون ؟",
  "كت تويت ‏| مِن أغرب وأجمل الأسماء التي مرت عليك؟",
  "‏كت تويت | عمرك شلت مصيبة عن شخص برغبتك ؟",
  "كت تويت | أكثر سؤال وجِّه إليك مؤخرًا؟",
  "‏كت تويت | ما هو الشيء الذي يجعلك تشعر بالخوف؟",
  "‏كت تويت | وش يفسد الصداقة؟",
  "‏كت تويت | شخص لاترفض له طلبا ؟",
  "‏كت تويت | كم مره خسرت شخص تحبه؟.",
  "‏كت تويت | كيف تتعامل مع الاشخاص السلبيين ؟",
  "‏كت تويت | كلمة تشعر بالخجل اذا قيلت لك؟",
  "‏كت تويت | جسمك اكبر من عٌمرك او العكسّ ؟!",
  "‏كت تويت |أقوى كذبة مشت عليك ؟",
  "‏كت تويت | تتأثر بدموع شخص يبكي قدامك قبل تعرف السبب ؟",
  "كت تويت | هل حدث وضحيت من أجل شخصٍ أحببت؟",
  "‏كت تويت | أكثر تطبيق تستخدمه مؤخرًا؟",
  "‏كت تويت | ‏اكثر شي يرضيك اذا زعلت بدون تفكير ؟",
  "‏كت تويت | وش محتاج عشان تكون مبسوط ؟",
  "‏كت تويت | مطلبك الوحيد الحين ؟",
  "‏كت تويت | هل حدث وشعرت بأنك ارتكبت أحد الذنوب أثناء الصيام؟"
];

client.on("message", message => {
  if (message.content.startsWith("-كت تويت")) {
    if (!message.channel.guild)
      return message.reply("** This command only for servers**");
    var embed = new Discord.RichEmbed()
      .setColor("RANDOM")
      .setThumbnail(message.author.avatarURL)
      .addField(
        "test33",
        `${cuttweet[Math.floor(Math.random() * cuttweet.length)]}`
      );
    message.channel.sendEmbed(embed);
    console.log("[id] Send By: " + message.author.username);
  }
});
//games2
const secre = [
  "**لو خيروك بين العيش وحدك في جزيرة كبيرة منعزلة مع أكبر درجات الرفاهية وبين العيش في مكان قديم ولكن مع أصدقائك المقربين**.",
  "**لو خيروك بين فقدان ذاكرتك والعيش مع أصدقائك وأقربائك أو بقاء ذاكرتك ولكن العيش وحيد**.",
  "**للو خيروك بين تناول الخضار والفاكهة طوال حياتك أو تناول اللحوم**.",
  "**لو خيروك بين رؤية الأشباح فقط أو سماع صوتها فقط**.",
  "**لو خيروك بين القدرة على سماع أفكار الناس أو القدرة على العودة في الزمن للخلف**.",
  "**لو خيروك بين القدرة على الاختفاء أو القدرة على الطيران**.",
  "**لو خيروك بين أن تعيش 5 دقائق في الماضي أو أن تعيشها في المستقبل**.",
  "**لو خيروك بين 5 ملايين دولار أو 5 ملايين لحظة سعادة حقيقيةا**.",
  "**لو خيروك بين الاعتذار عن خطأ اقترفته أو أن يقدم لك شخص أخطأ في حقق اعتذار**.",
  "**لو خيروك بين الحقد أو المسامحة**.",
  "**لو خيروك بين إنقاذ نفسك أو إنقاذ شخص وقد يعرضك ذلك للأذى**.",
  "**لو خيروك بين أن تعيش في القرن الرابع عشر أو القرن الحالي**.",
  "**لو خيروك بين امتلاك سرعة الفهد أو دهاء الثعلب**.",
  "**لو خيروك بين أن تحصل على درجة كاملة في كامل اختباراتك القادمة والسابقة أو أن تسافر إلى بلد تحبه**.",
  "**لو خيروك بين العيش بجانب الجبال والحدائق والأشجار أو العيش بجانب البحر**.",
  "**لو خيروك بين تحقيق 3 أمنيات (لا تتعلق بأشخاص) أو اختيار 3 أشخاص للعيش معهم طوال حياتك**.",
  "**لو خيروك بين النوم في غابة مظلمة أو على ظهر سفينة في يوم عاصف**.",
  "**لو خيروك بين المال أو الجمال**.",
  "**لو خيروك بين المال أو الذكاء**.",
  "**لو خيروك بين المال أو الصحة**.",
  "**لو خيروك بين الجمال أو الذكاء**.",
  "**لو خيروك بين الذكاء أو الصحة**.",
  "**لو خيروك بين إرسال رسالة صوتية لأمك مدة دقيقة كاملة لا تحتوي إلا على صراخك وخوفك، أو كسر بيضة نيئة على رأسك**."
];

client.on("message", message => {
  if (message.content.startsWith("-لو خيروك")) {
    if (!message.channel.guild)
      return message.reply("** This command only for servers**");
    var embed = new Discord.RichEmbed()
      .setColor("RANDOM")

      .setThumbnail(message.author.avatarURL)
      .addField(
        "Flash Bot",
        `${secre[Math.floor(Math.random() * secre.length)]}`
      );
    message.channel.sendEmbed(embed);
    console.log("[id] Send By: " + message.author.username);
  }
});
//3aga2eb

client.on("message", message => {
  if (message.author.bot) return;
  if (!message.guild) return message.reply("**This Command Just In Servers**");
  if (message.content === prefix + "top-servers") {
    const top = client.guilds
      .sort((a, b) => a.memberCount - b.memberCount)
      .array()
      .reverse();
    message.channel.sendMessage(
      `**⇏ Top 15 Servers: **\n~~-------------------------------------------~~\n1. **${top[0].name}**: ${top[0].memberCount} \n2. **${top[1].name}**: ${top[1].memberCount}.\n3. **${top[2].name}**: ${top[2].memberCount}.\n4. **${top[3].name}**: ${top[3].memberCount}.\n5. **${top[4].name}**: ${top[4].memberCount}.\n6. **${top[5].name}**: ${top[5].memberCount}.\n7. **${top[6].name}**: ${top[6].memberCount}.\n8. **${top[7].name}**: ${top[7].memberCount}.\n9. **${top[8].name}**: ${top[8].memberCount}.\n10. **${top[9].name}**: ${top[9].memberCount} .\n11. **${top[10].name}**: ${top[10].memberCount} .\n12. **${top[11].name}**: ${top[11].memberCount} .\n13. **${top[12].name}**: ${top[12].memberCount} .\n14. **${top[13].name}**: ${top[13].memberCount} .\n15. **${top[14].name}**: ${top[14].memberCount} .\n~~-------------------------------------------~~`
    );
  }
});

client.on("message", message => {
  let command = message.content.split(" ")[0];
  if (command == prefix + "unban") {
    if (!message.member.hasPermission("BAN_MEMBERS")) return;
    let args = message.content   

      .split(" ")
      .slice(1)
      .join(" ");
    if (args == "all") {
      message.guild.fetchBans().then(zg => {
        zg.forEach(Saad => {
          message.guild.unban(Saad);
        });
      });
      return message.channel.send("**✅ Unbanned all members **");
    }
    if (!args) return message.channel.send("**Please Type the member ID**");
    message.guild
      .unban(args)
      .then(m => {
        message.channel.send(
          `<a:x2:669825119492767745> **-** **Done Unbanned ${m.username}**`
        );
      })
      .catch(stry => {
        message.channel.send(
          `<a:x1:669825119904071691> **-** **I can't find \`${args}\` in the ban list**`
        );
      });
  }
});

client.on("message", message => {
  if (message.content.startsWith(prefix + "لقب")) {
    if (
      message.author.bot ||
      message.channel.type == "dm" ||
      !message.member.hasPermission("MANAGE_NICKNAMES") ||
      !message.guild.member(client.user).hasPermission("MANAGE_NICKNAMES")
    )
      return;
    var user = message.mentions.members.first();
    var args = message.content.split(" ").slice(2);
    var nick = args.join(" ");
    if (!user || !args)
      return message.channel.send(
        `**• | Usage:** ${prefix}setnick \`\`@Name\`\` nickname`
      );
    if (
      message.guild.member(user.user).highestRole.position >=
      message.guild.member(client.user).highestRole.position
    )
      return message.channel.send(
        `⛔ | I cant change **${user.user.username}**'s nickname because his role highest than my role!`
      );
    message.guild
      .member(user.user)
      .setNickname(`${nick}`)
      .then(() => {
        message.channel.send(
          `Successfully changed **${user.user.username}** nickname to **${nick}**`
        );
      })
      .catch(console.error);
  }
});

client.on("message", message => {
  if (message.author.x5bz) return;
  if (!message.content.startsWith(prefix)) return;

  let command = message.content.split(" ")[0];
  command = command.slice(prefix.length);

  let args = message.content.split(" ").slice(1);

  if (command == "ban") {
    if (!message.channel.guild)
      return message.reply("** This command only for servers**");

    if (!message.guild.member(message.author).hasPermission("BAN_MEMBERS"))
      return message.reply("**You Don't Have ` BAN_MEMBERS ` Permission**");
    if (!message.guild.member(client.user).hasPermission("BAN_MEMBERS"))
      return message.reply("**I Don't Have ` BAN_MEMBERS ` Permission**");
    let user = message.mentions.users.first();
    let reason = message.content
      .split(" ")
      .slice(2)
      .join(" ");
    /*let b5bzlog = client.channels.find("name", "5bz-log");
     
      if(!b5bzlog) return message.reply("I've detected that this server doesn't have a 5bz-log text channel.");*/
    if (message.mentions.users.size < 1) return message.reply("**منشن شخص**");
    if (!reason) return message.reply("**اكتب سبب الطرد**");
    if (!message.guild.member(user).bannable)
      return message.reply(
        "**لايمكنني طرد شخص اعلى من رتبتي يرجه اعطاء البوت رتبه عالي**"
      );

    message.guild.member(user).ban(7, user);

    const banembed = new Discord.RichEmbed()
      .setAuthor(`BANNED!`, user.displayAvatarURL)
      .setColor("RANDOM")
      .setTimestamp()
      .addField("**User:**", "**[ " + `${user.tag}` + " ]**")
      .addField("**By:**", "**[ " + `${message.author.tag}` + " ]**")
      .addField("**Reason:**", "**[ " + `${reason}` + " ]**");
    message.channel.send({
      embed: banembed
    });
  }
});

client.on('message', message => {
  if (message.author.codes) return;
  if (!message.content.startsWith(prefix)) return;

  var command = message.content.split(" ")[0];
  command = command.slice(prefix.length);

var args = message.content.split(" ").slice(1);

  if (command == "kick") {
               if(!message.channel.guild) return message.reply('** This command only for servers**');
         
  if(!message.guild.member(message.author).hasPermission("KICK_MEMBERS")) return message.reply("**You don't have have permesions.**");
  if(!message.guild.member(client.user).hasPermission("KICK_MEMBERS")) return message.reply("**I Don't Have ` KICK_MEMBERS ` Permission**");
  let user = message.mentions.users.first();
  
  if (message.mentions.users.size < 1) return message.reply("**Mention the user**");
  if (!message.guild.member(user)
  .bannable) return message.reply("**You have to be higher than the person you want to ban**");


  message.guild.member(user).kick(7, user);

message.channel.send(`**✅ ${user.tag} kicked from the server ! ✈ **  `)

}
});
client.on('message',  async  message  =>  {
    var  user  =  message.mentions.users.first();
    var  reason  =  message.content.split(' ').slice(2).join(' ');
if(message.content.startsWith(prefix  +  'warn'))  {
    if(!message.member.hasPermission('MUTE_MEMBERS')) return message.channel.send('**Sorry But You Dont Have Permission** `MUTE_MEMBERS`' );
    if(!user)  return  message.channel.send("**Mention The Target**")
    if(!reason)  return  message.channel.send("** Type The Reason**")

    message.channel.send(`**__${user} Has Been Warned __**`)

 
}})
///////////////////

const credits = JSON.parse(fs.readFileSync("./creditsCode.json", "utf8"));
const coolDown = new Set();

client.on("message", message => {
  const args = message.content.split(" ");
  const credits = require("./creditsCode.json");
  const path = "./creditsCode.json";
  const mention =
    message.mentions.users.first() ||
    client.users.get(args[1]) ||
    message.author;
  const mentionn = message.mentions.users.first() || client.users.get(args[1]);
  const author = message.author.id;
  const balance = args[2];
  const daily = Math.floor(Math.random() * 350) + 10;

  if (!credits[author]) credits[author] = { credits: 50 };
  if (!credits[mention.id]) credits[mention.id] = { credits: 50 };
  fs.writeFile(path, JSON.stringify(credits, null, 5), function(err) {
    if (err) console.log(err);
  });

  if (message.content.startsWith(prefix + "credit")) {
    if (args[0] !== `${prefix}credit` && args[0] !== `${prefix}credits`) return;

    if (args[2]) {
      if (isNaN(args[2]) || args[2] < 0)
        return message.channel.send(
          `:interrobang: **| ${message.author.username}, type the credit you need to transfer! **`
        );
      if (mention.bot)
        return message.channel.send(
          `**:heavy_multiplication_x:| ${
            message.content.split(" ")[1]
          } لم يتم العثور على**`
        );
      if (mention.id === message.author.id)
        return message.channel.send(
          "**:heavy_multiplication_x:| لا يمكنك تحويل كردت لنفسك**"
        );
      if (credits[author].credits < balance)
        return message.channel.send(
          `** :thinking: | ${message.author.username}, Your balance is not enough for that!**`
        );
      var one = Math.floor(Math.random() * 9) + 1;
      var two = Math.floor(Math.random() * 9) + 1;
      var three = Math.floor(Math.random() * 9) + 1;
      var four = Math.floor(Math.random() * 9) + 1;

      var number = `${one}${two}${three}${four}`;

      message.channel
        .send(`**:heavy_dollar_sign:| \`${number}\`, أكتب الرقم للأستمرار**`)
        .then(m => {
          message.channel
            .awaitMessages(m => m.author.id === message.author.id, {
              max: 1,
              time: 10000
            })
            .then(c => {
              if (c.first().content === number) {
                m.delete();
                message.channel.send(
                  `**:moneybag: | ${message.author.username}, has transferred \`${balance}\` to ${mention}**`
                );
                credits[author].credits += -balance;
                credits[mention.id].credits += +balance;
                fs.writeFile(path, JSON.stringify(credits, null, 5), function(
                  err
                ) {
                  if (err) console.log(err);
                });
              } else if (c.first().content !== number) {
                m.delete();
                message.channel.send(
                  `** :money_with_wings: | تم الغاء الإرسال**`
                );
              }
            });
        });
    }
    if (!args[2]) {
      if (mention.bot)
        return message.channel.send(
          `:interrobang:**| ${message.author.username}, I can't find** ${
            message.content.split(" ")[1]
          }**!**`
        );
      message.channel.send(
        `**${mention.username}, your :credit_card: balance is** \`$${credits[mention.id].credits}\`**.** `
      );
    }
  }
  if (args[0].toLowerCase() === `${prefix}daily`) {
    if (credits[message.author.id].daily != moment().format("L")) {
      credits[message.author.id].daily = moment().format("L");

      let ammount = (300, 500, 100, 200, 120, 150, 350, 320, 220, 250);
      credits[author].credits += ammount;

      message.channel.send(
        `**:atm: | ${message.author.username}, you received your :yen: ${ammount} daily credits!**`
      );
      fs.writeFile("./creditsCode.json", JSON.stringify(credits), function(e) {
        if (e) throw e;
      });
    } else {
      message.channel.send(
        `:stopwatch: : **Please cool down  ${moment()
          .endOf("day")
          .fromNow()}**`
      );
    }
  }
}); //LuXy

client.on("message", message => {
  if (message.author.bot) return;
  if (message.content.startsWith(prefix + "ping")) {
    message.channel.send("pong | :ping_pong: ").then(msg => {
      var PinG = `${Date.now() - msg.createdTimestamp}`;
      var ApL = `${Math.round(client.ping)}`;
      msg.edit(
        `\`\`\`javascript\nTime taken: ${PinG} ms.\nDiscord API: ${ApL} ms.\`\`\``
      );
    });
  }
});

///////////////////
const adminprefix = "^";
client.on("message", message => {
  var argresult = message.content
    .split(` `)
    .slice(1)
    .join(" ");
  if (!devs.includes(message.author.id)) return;
  if (message.content.startsWith(adminprefix + "setgame")) {
    client.user.setGame(argresult);
    message.channel.sendMessage(
      `**${argresult} تم تغيير بلاينق البوت إلى <a:x2:669825119492767745> **`
    );
  } else if (message.content.startsWith(adminprefix + "setname")) {
    client.user.setUsername(argresult).then;
    message.channel.sendMessage(
      `**${argresult}** : <a:x2:669825119492767745> تم تغيير أسم البوت إلى `
    );
    return message.reply(
      "**لا يمكنك تغيير الاسم يجب عليك الانتظآر لمدة ساعتين <a:x7:669873017014452234> . **"
    );
  } else if (message.content.startsWith(adminprefix + "setavatar")) {
    client.user.setAvatar(argresult);
    message.channel.sendMessage(`**${argresult}** : تم تغير صورة البوت`);
  } else if (message.content.startsWith(adminprefix + "setT")) {
    client.user.setGame(argresult, "https://www.twitch.tv/idk");
    message.channel.sendMessage(`**تم تغيير تويتش البوت إلى  ${argresult}**`);
  }
});

client.on("message", msg => {
  // itzZa1D - Codes Team.
  if (msg.content.startsWith(`<@${client.user.id}>`))
    var botmention = new Discord.RichEmbed() // itzZa1D - Codes Team.
      .setColor("#36393e") // itzZa1D - Codes Team.
      .setDescription(
        `Hey Im **yamen ! 
 \`\`\`Public Prefix : ${prefix}

My owner : [ Y A M E N 😕 ?

My ID : ${client.user.id}\`\`\`**`
      )
      .addField("• **__Help Command__**", `\`${prefix}help\``, true) // itzZa1D - Codes Team.
      .addField(
        "• **__Bot Link__**",
        `[Invite Link](https://discordapp.com/api/oauth2/authorize?client_id=${client.user.id}&permissions=8&scope=bot)`,
        true
      )
      .addField(
        "• **__Support Server__**",
        `[Support Server](https://discord.gg/vmdQfRZ)`,
        true
      )
      .setFooter("Reqused By : " + msg.author.username, msg.author.avatarURL) // itzZa1D - Codes Team.
      .setTimestamp(); // itzZa1D - Codes Team.
  msg.channel.send(botmention);
}); // itzZa1D - Codes Team.///hey
////=======================================================
let anti = JSON.parse(fs.readFileSync("./antigreff.json", "UTF8"));
let config = JSON.parse(fs.readFileSync("./config.json", "UTF8"));
client.on("message", message => {
  if (!message.channel.guild) return;
  let user = anti[message.guild.id + message.author.id];
  let num = message.content
    .split(" ")
    .slice(2)
    .join(" ");
  if (!anti[message.guild.id + message.author.id])
    anti[message.guild.id + message.author.id] = {
      actions: 0
    };
  if (!config[message.guild.id])
    config[message.guild.id] = {
      banLimit: 3,
      chaDelLimit: 3,
      roleDelLimit: 3,
      kickLimits: 3,
      roleCrLimits: 3,
      time: 30
    };
  if (message.content.startsWith(prefix + "settings limits")) {
    if (!message.member.hasPermission("MANAGE_GUILD")) return;
    if (message.content.startsWith(prefix + "settings limitsban")) {
      if (!num) return message.channel.send("**⇏ | أرسل رقم ! **");
      if (isNaN(num)) return message.channel.send("**⇏ | أرقام فقط ! **");
      config[message.guild.id].banLimit = num;
      message.channel.send(
        `**⇏ | تم التغيير اِلي <a:x4:669851082733912064> : ${config[message.guild.id].banLimit} **`
      );
    }
    if (message.content.startsWith(prefix + "settings limitskick")) {
      if (!num) return message.channel.send("**⇏ | أرسل رقم ! **");
      if (isNaN(num)) return message.channel.send("**⇏ | أرقام فقط ! **");
      config[message.guild.id].kickLimits = num;
      message.channel.send(
        `**⇏ | تم التغيير اِلي <a:x4:669851082733912064> : ${config[message.guild.id].kickLimits}**`
      );
    }
    if (message.content.startsWith(prefix + "settings limitsroleD")) {
      if (!num) return message.channel.send("**⇏ | أرسل رقم ! **");
      if (isNaN(num)) return message.channel.send("**⇏ | أرقام فقط ! **");
      config[message.guild.id].roleDelLimit = num;
      message.channel.send(
        `**⇏ | تم التغيير اِلي <a:x4:669851082733912064> : ${config[message.guild.id].roleDelLimit}**`
      );
    }
    if (message.content.startsWith(prefix + "settings limitsroleC")) {
      if (!num) return message.channel.send("**⇏ | أرسل رقم ! **");
      if (isNaN(num)) return message.channel.send("**⇏ | أرقام فقط ! **");
      config[message.guild.id].roleCrLimits = num;
      message.channel.send(
        `**⇏ | تم التغيير اِلي <a:x4:669851082733912064> : ${config[message.guild.id].roleCrLimits}**`
      );
    }
    if (message.cطontent.startsWith(prefix + "settings limitschannelD")) {
      if (!num) return message.channel.send("**⇏ | أرسل رقم ! **");
      if (isNaN(num)) return message.channel.send("**⇏ | أرقام فقط ! **");
      config[message.guild.id].chaDelLimit = num;
      message.channel.send(
        `**⇏ | تم التغيير اِلي <a:x4:669851082733912064> : ${config[message.guild.id].chaDelLimit}**`
      );
    }
    if (message.content.startsWith(prefix + "settings limitstime")) {
      if (!num) return message.channel.send("**⇏ | أرسل رقم ! **");
      if (isNaN(num)) return message.channel.send("**⇏ | أرقام فقط ! **");
      config[message.guild.id].time = num;
      message.channel.send(
        `**⇏ | تم التغيير اِلي <a:x4:669851082733912064> : ${config[message.guild.id].time}**`
      );
    }
    fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(e) {
      if (e) throw e;
    });
    fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(
      e
    ) {
      if (e) throw e;
    });
  }
});
client.on("channelDelete", async channel => {
  const entry1 = await channel.guild
    .fetchAuditLogs({
      type: "CHANNEL_DELETE"
    })
    .then(audit => audit.entries.first());
  console.log(entry1.executor.username);
  const entry = entry1.executor;
  if (!config[channel.guild.id])
    config[channel.guild.id] = {
      banLimit: 3,
      chaDelLimit: 3,
      roleDelLimit: 3,
      kickLimits: 3,
      roleCrLimits: 3
    };
  if (!anti[channel.guild.id + entry.id]) {
    anti[channel.guild.id + entry.id] = {
      actions: 1
    };
    setTimeout(() => {
      anti[channel.guild.id + entry.id].actions = "0";
    }, config[channel.guild.id].time * 1000);
  } else {
    anti[channel.guild.id + entry.id].actions = Math.floor(
      anti[channel.guild.id + entry.id].actions + 1
    );
    console.log("TETS");
    setTimeout(() => {
      anti[channel.guild.id + entry.id].actions = "0";
    }, config[channel.guild.id].time * 1000);
    if (
      anti[channel.guild.id + entry.id].actions >=
      config[channel.guild.id].chaDelLimit
    ) {
      channel.guild.members
        .get(entry.id)
        .ban()
        .catch(e =>
          channel.guild.owner.send(
            `**⇏ | ${entry.username} قام بمسح الكثير من الرومات **`
          )
        );
      anti[channel.guild.id + entry.id].actions = "0";
      fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(
        e
      ) {
        if (e) throw e;
      });
      fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(
        e
      ) {
        if (e) throw e;
      });
    }
  }

  fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(e) {
    if (e) throw e;
  });
  fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(e) {
    if (e) throw e;
  });
});

client.on("roleDelete", async channel => {
  const entry1 = await channel.guild
    .fetchAuditLogs({
      type: "ROLE_DELETE"
    })
    .then(audit => audit.entries.first());
  console.log(entry1.executor.username);
  const entry = entry1.executor;
  if (!config[channel.guild.id])
    config[channel.guild.id] = {
      banLimit: 3,
      chaDelLimit: 3,
      roleDelLimit: 3,
      kickLimits: 3,
      roleCrLimits: 3
    };
  if (!anti[channel.guild.id + entry.id]) {
    anti[channel.guild.id + entry.id] = {
      actions: 1
    };
    setTimeout(() => {
      anti[channel.guild.id + entry.id].actions = "0";
    }, config[channel.guild.id].time * 1000);
  } else {
    anti[channel.guild.id + entry.id].actions = Math.floor(
      anti[channel.guild.id + entry.id].actions + 1
    );
    console.log("TETS");
    setTimeout(() => {
      anti[channel.guild.id + entry.id].actions = "0";
    }, config[channel.guild.id].time * 1000);
    if (
      anti[channel.guild.id + entry.id].actions >=
      config[channel.guild.id].roleDelLimit
    ) {
      channel.guild.members
        .get(entry.id)
        .ban()
        .catch(e =>
          channel.guild.owner.send(
            `**⇏ | ${entry.username} قام بمسح الكثير من الرتب **`
          )
        );
      anti[channel.guild.id + entry.id].actions = "0";
      fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(
        e
      ) {
        if (e) throw e;
      });
      fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(
        e
      ) {
        if (e) throw e;
      });
    }
  }

  fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(e) {
    if (e) throw e;
  });
  fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(e) {
    if (e) throw e;
  });
});

client.on("roleCreate", async channel => {
  const entry1 = await channel.guild
    .fetchAuditLogs({
      type: "ROLE_CREATE"
    })
    .then(audit => audit.entries.first());
  console.log(entry1.executor.username);
  const entry = entry1.executor;
  if (!config[channel.guild.id])
    config[channel.guild.id] = {
      banLimit: 3,
      chaDelLimit: 3,
      roleDelLimit: 3,
      kickLimits: 3,
      roleCrLimits: 3
    };
  if (!anti[channel.guild.id + entry.id]) {
    anti[channel.guild.id + entry.id] = {
      actions: 1
    };
    setTimeout(() => {
      anti[channel.guild.id + entry.id].actions = "0";
    }, config[channel.guild.id].time * 1000);
  } else {
    anti[channel.guild.id + entry.id].actions = Math.floor(
      anti[channel.guild.id + entry.id].actions + 1
    );
    console.log("TETS");
    setTimeout(() => {
      anti[channel.guild.id + entry.id].actions = "0";
    }, config[channel.guild.id].time * 1000);
    if (
      anti[channel.guild.id + entry.id].actions >=
      config[channel.guild.id].roleCrLimits
    ) {
      channel.guild.members
        .get(entry.id)
        .ban()
        .catch(e =>
          channel.guild.owner.send(
            `**⇏ | ${entry.username} قام بأنشاء الكثير من الرتب **`
          )
        );
      anti[channel.guild.id + entry.id].actions = "0";
      fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(
        e
      ) {
        if (e) throw e;
      });
      fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(
        e
      ) {
        if (e) throw e;
      });
    }
  }

  fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(e) {
    if (e) throw e;
  });
  fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(e) {
    if (e) throw e;
  });
});

client.on("guildBanAdd", async (guild, user) => {
  const entry1 = await channel.guild
    .fetchAuditLogs({
      type: "MEMBER_BAN_ADD"
    })
    .then(audit => audit.entries.first());
  console.log(entry1.executor.username);
  const entry = entry1.executor;
  if (!config[guild.id])
    config[guild.id] = {
      banLimit: 3,
      chaDelLimit: 3,
      roleDelLimit: 3,
      kickLimits: 3,
      roleCrLimits: 3
    };
  if (!anti[guild.id + entry.id]) {
    anti[guild.id + entry.id] = {
      actions: 1
    };
    setTimeout(() => {
      anti[guild.id + entry.id].actions = "0";
    }, config[guild.id].time * 1000);
  } else {
    anti[guild.id + entry.id].actions = Math.floor(
      anti[guild.id + entry.id].actions + 1
    );
    console.log("TETS");
    setTimeout(() => {
      anti[guild.id + entry.id].actions = "0";
    }, config[guild.id].time * 1000);
    if (anti[guild.id + entry.id].actions >= config[guild.id].banLimit) {
      channel.members
        .get(entry.id)
        .ban()
        .catch(e =>
          channel.owner.send(`**⇏ | ${entry.username} حاول حظر جميع الأعضاء **`)
        );
      anti[guild.id + entry.id].actions = "0";
      fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(
        e
      ) {
        if (e) throw e;
      });
      fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(
        e
      ) {
        if (e) throw e;
      });
    }
  }

  fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(e) {
    if (e) throw e;
  });
  fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(e) {
    if (e) throw e;
  });
});

client.on("guildKickAdd", async (guild, user) => {
  const entry1 = await channel
    .fetchAuditLogs({
      type: "MEMBER_KICK"
    })
    .then(audit => audit.entries.first());
  console.log(entry1.executor.username);
  const entry = entry1.executor;
  if (!config[guild.id])
    config[guild.id] = {
      banLimit: 3,
      chaDelLimit: 3,
      roleDelLimit: 3,
      kickLimits: 3,
      roleCrLimits: 3
    };
  if (!anti[guild.id + entry.id]) {
    anti[guild.id + entry.id] = {
      actions: 1
    };
    setTimeout(() => {
      anti[guild.id + entry.id].actions = "0";
    }, config[guild.id].time * 1000);
  } else {
    anti[guild.id + entry.id].actions = Math.floor(
      anti[guild.id + entry.id].actions + 1
    );
    console.log("TETS");
    setTimeout(() => {
      anti[guild.id + entry.id].actions = "0";
    }, config[guild.id].time * 1000);
    if (anti[guild.id + entry.id].actions >= config[guild.id].banLimit) {
      channel.members
        .get(entry.id)
        .ban()
        .catch(e =>
          channel.owner.send(`**⇏ | ${entry.username} حاول حظر جميع الأعضاء **`)
        );
      anti[guild.id + entry.id].actions = "0";
      fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(
        e
      ) {
        if (e) throw e;
      });
      fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(
        e
      ) {
        if (e) throw e;
      });
    }
  }

  fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(e) {
    if (e) throw e;
  });
  fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(e) {
    if (e) throw e;
  });
});

client.on("guildMemberRemove", async member => {
  const entry1 = await member.guild
    .fetchAuditLogs()
    .then(audit => audit.entries.first());
  if (entry1.action === "MEMBER_KICK") {
    const entry2 = await member.guild
      .fetchAuditLogs({
        type: "MEMBER_KICK"
      })
      .then(audit => audit.entries.first());
    const entry = entry2.executor;
    if (!config[member.guild.id])
      config[guild.id] = {
        banLimit: 3,
        chaDelLimit: 3,
        roleDelLimit: 3,
        kickLimits: 3,
        roleCrLimits: 3
      };
    if (!anti[member.guild.id + entry.id]) {
      anti[member.guild.id + entry.id] = {
        actions: 1
      };
      setTimeout(() => {
        anti[member.guild.id + entry.id].actions = "0";
      }, config[member.guild.id].time * 1000);
    } else {
      anti[member.guild.id + entry.id].actions = Math.floor(
        anti[member.guild.id + entry.id].actions + 1
      );
      console.log("TETS");
      setTimeout(() => {
        anti[member.guild.id + entry.id].actions = "0";
      }, config[member.guild.id].time * 1000);
      if (
        anti[member.guild.id + entry.id].actions >=
        config[member.guild.id].kickLimits
      ) {
        member.members
          .get(entry.id)
          .ban()
          .catch(e =>
            member.owner.send(
              `**⇏ | ${entry.username} حاول حظر جميع الأعضاء **`
            )
          );
        anti[member.guild.id + entry.id].actions = "0";
        fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(
          e
        ) {
          if (e) throw e;
        });
        fs.writeFile(
          "./antigreff.json",
          JSON.stringify(anti, null, 2),
          function(e) {
            if (e) throw e;
          }
        );
      }
    }

    fs.writeFile("./config.json", JSON.stringify(config, null, 2), function(e) {
      if (e) throw e;
    });
    fs.writeFile("./antigreff.json", JSON.stringify(anti, null, 2), function(
      e
    ) {
      if (e) throw e;
    });
  }
});
///Uploaded By L U X

/////////////////////

/////////////////
//gstart
client.on("ready", async () => {
  await dbg.defer;
  await console.log(`Logged in as [ ${client.user.username} ]!`);
  client.guilds.forEach(async g => {
    g.channels
      .filter(
        c =>
          c.type == "text" &&
          c.permissionsFor(client.user.id).has("VIEW_CHANNEL")
      )
      .forEach(async c => {
        let fetched = await c.fetchMessages();
        if (fetched.size == 0) return;
        let mess = await fetched.filter(
          r =>
            r.author.id === client.user.id && r.content == `**🎉 GIVEAWAY 🎉**`
        );
        if (mess.size == 0) return;
        mess.forEach(m => {
          if (!m) return;
          if (!dbg.get(`giveaway.${g.id}.${c.id}.${m.id}.time`)) return;
          let time2 = dbg.get(`giveaway.${g.id}.${c.id}.${m.id}.time`).gtime;
          let text2 = dbg.get(`giveaway.${g.id}.${c.id}.${m.id}.time`).gtext;
          let win2 = dbg.get(`giveaway.${g.id}.${c.id}.${m.id}.time`).gwin;
          if (time2 === null || time2 === undefined) return;
          let embed = new RichEmbed()
            .setColor("BLUE")
            .setAuthor(`${text2}`, g.iconURL)
            .setDescription(
              `React with 🎉 to enter!\nTime remaining: ${cd(
                new Date().getTime(),
                time2
              )}`
            )
            .setFooter(`Ends at`, client.user.avatarURL)
            .setTimestamp(time2);
          let embed2 = new RichEmbed()
            .setColor("RED")
            .setAuthor(text2, g.iconURL)
            .setFooter(`Ended at`);
          let ttimer = setInterval(async () => {
            if (!m || m.content == `🎉 **GIVEAWAY ENDED** 🎉`) return;
            let ttt = [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10];
            if (ttt.includes(moment().diff(time2, "seconds")))
              return m.edit(
                `🎉 **GIVEAWAY** 🎉`,
                embed
                  .setColor("#ffb800")
                  .setDescription(
                    `**Last chance to enter!!!**\nReact with 🎉\nTime remaining: ${cd(
                      new Date().getTime(),
                      time2
                    )}`
                  )
              );
            m.edit(
              `🎉 **GIVEAWAY** 🎉`,
              embed.setDescription(
                `React with 🎉 to enter!\nTime remaining: ${cd(
                  new Date().getTime(),
                  time2
                )}`
              )
            );
            if (moment().isAfter(time2)) {
              m.reactions
                .filter(a => a.emoji.name == "🎉")
                .map(r =>
                  r.fetchUsers().then(u => {
                    let rusers = u
                      .filter(user => !user.bot)
                      .random(parseInt(win2));
                    m.edit(
                      `${g} GIVEAWAY ENDED ${g}`,
                      embed2
                        .setTimestamp()
                        .setDescription(`Winners:\n${rusers || "No winners"}`)
                    );
                    if (
                      m.reactions
                        .filter(a => a.emoji.name == "🎉")
                        .map(reaction => reaction.count)[0] <= 1
                    ) {
                      return m.channel.send(`No winners :rolling_eyes:`);
                    } else {
                      m.channel.send(
                        `Congratulations ${rusers}! You won the **${text2}**`
                      );
                    }
                    dbg.delete(`giveaway.${g.id}.${c.id}.${m.id}.time`);
                    clearInterval(ttimer);
                    return;
                  })
                );
            }
          }, 5000);
        });
      });
  });
});
//client.on('error', console.error);
//client.on('warn', warn => console.warn(`[WARN] - ${warn}`));
process.on("unhandledRejection", (reason, promise) => {
  console.log("Unhandled Rejection at:", reason.stack || reason);
});
client.on("message", async message => {
  //let g = client.guilds
  //  .get("606910399811420175")
  //    .emojis.find(r => r.name === "start");
  if (message.author.bot || message.channel.type == "dm") return undefined;
  let args = message.content.split(" ");
  let timer;
  if (args[0] == `${prefix}start`) {
    if (
      message.member.hasPermission("MANAGE_GUILD") ||
      message.member.roles.find(r => r.name == "GIVEAWAYS")
    ) {
      if (!args[1] || !args[2] || !args[3])
        return message.channel.send(
          `**Usage:** **\`${prefix}start [Time] [Winners] [Giveaway Prize]\n\`** **Example:** **\`${prefix}start 4h 1 Nitro\`**`
        );
      if (!message.guild.member(client.user).hasPermission("EMBED_LINKS"))
        return message.channel.send(`I don't have **Embed Links** permission.`);
      if (ms(args[1]) === undefined)
        return message.channel.send(`Please use a proper time format.`);
      if (isNaN(args[2]))
        return message.channel.send(`Winners must be number!`);
      if (args[2] < 1 || args[2] > 10)
        return message.channel.send(`Winners must be bettwen 1 and 10.`);
      let timega = ms(args[1]) / 1000;
      let time = Date.now() + totime.fromSeconds(timega).ms();
      if (timega < 5)
        return message.channel.send(
          `Giveaway time can't be less than 5 seconds.`
        );
      let timespan = cd(new Date().getTime(), time);
      let rusers;
      let embed = new RichEmbed()
        .setColor("BLUE")
        .setAuthor(`${args.slice(3).join(" ")}`)
        .setDescription(`React with 🎉 to enter!\nTime remaining: ${timespan}`)
        .setFooter(`Ends at`, client.user.avatarURL)
        .setTimestamp(time);
      let embed2 = new RichEmbed()
        .setColor("RED")
        .setAuthor(args.slice(3).join(" "))
        .setFooter(`Ended at`);
      let msg = await message.channel
        .send(`**🎉 GIVEAWAY 🎉**`, embed)
        .catch(err => message.channel.send(`Error: \`${err}\``));
      dbg.set(
        `giveaway.${message.guild.id}.${message.channel.id}.${msg.id}.time`,
        {
          gtime: time,
          gid: msg.id,
          gtext: args.slice(3).join(" "),
          gwin: args[2]
        }
      );
      await msg.react("🎉");
      timer = setInterval(() => {
        if (!msg || msg.content == `**🎉 GIVEAWAY ENDED 🎉**`) return;
        let ttt = [-2, -3, -4, -5, -6, -7, -8, -9, -10];
        if (ttt.includes(moment().diff(time, "seconds")))
          return msg.edit(
            `**🎉 GIVEAWAY 🎉**`,
            embed
              .setColor("#ffb800")
              .setDescription(
                `**Last chance to enter!!!**\nReact with 🎉\nTime remaining: ${cd(
                  new Date().getTime(),
                  time
                )}`
              )
          );
        msg.edit(
          `**🎉 GIVEAWAY 🎉**`,
          embed.setDescription(
            `React with 🎉 to enter!\nTime remaining: ${cd(
              new Date().getTime(),
              time
            )}`
          )
        );
        rusers = msg.reactions
          .filter(a => a.emoji.name == "🎉")
          .map(reaction =>
            reaction.users.filter(u => !u.bot).random(parseInt(args[2]))
          )[0];
        if (moment().isAfter(time)) {
          msg.edit(
            `** GIVEAWAY ENDED 🎉**`,
            embed2
              .setTimestamp()
              .setDescription(`Winners:\n${rusers || "No winners"}`)
          );
          if (
            msg.reactions
              .filter(a => a.emoji.name == "🎉")
              .map(reaction => reaction.count)[0] <= 1
          ) {
            return message.channel.send(``);
          } else {
            msg.channel.send(
              `Congratulations ${rusers}! You won the **${args
                .slice(3)
                .join(" ")}**`
            );
          }
          clearInterval(timer);
          return;
        }
      }, 5000);
    } else return undefined;
  } else if (args[0] == `${prefix}groll`) {
    if (
      message.member.hasPermission("MANAGE_GUILD") ||
      message.member.roles.find(r => r.name == "GIVEAWAYS")
    ) {
      if (!args[1])
        return message.channel.send(
          `**Usage:** **\`${prefix}groll [giveaway message id]\`**`
        );
      if (isNaN(args[1])) return message.channel.send(`Thats not a message ID`);
      message.channel
        .fetchMessage(args[1])
        .then(async m => {
          if (m.author.id != client.user.id)
            return message.channel.send(`This is not a giveaway message.`);
          if (!m.content.startsWith(`**🎉 GIVEAWAY**`))
            return message.channel.send(`This is not a giveaway message.`);
          if (m.content != `**🎉 GIVEAWAY ENDED 🎉**`)
            return message.channel.send(`The giveaway is not ended.`);
          if (m.reactions.size < 1)
            return message.channel.send(
              `I can't find reactions in this message.`
            );
          if (
            m.reactions
              .filter(a => a.emoji.name == "🎉")
              .map(reaction => reaction.count)[0] <= 1
          )
            return message.channel.send(``);
          m.reactions
            .filter(a => a.emoji.name == "🎉")
            .map(r =>
              r.fetchUsers().then(async u => {
                let rusers = u.filter(user => !user.bot).random();
                await message.channel.send(`The new winner is: ${rusers}`);
              })
            );
        })
        .catch(err =>
          message.channel.send(`I can't find this message in the channel.`)
        );
    } else return undefined;
  } else if (args[0] == `${prefix}gend`) {
    if (
      message.member.hasPermission("MANAGE_GUILD") ||
      message.member.roles.find(r => r.name == "GIVEAWAYS")
    ) {
      if (!args[1])
        return message.channel.send(
          `**Usage:** **\`${prefix}gend [giveaway message id]\`**`
        );
      if (isNaN(args[1])) return message.channel.send(`Thats not a message ID`);
      message.channel
        .fetchMessage(args[1])
        .then(async m => {
          if (m.author.id != client.user.id)
            return message.channel.send(`This is not a giveaway message.`);
          if (!m.content.startsWith(`**🎉 GIVEAWAY**`))
            return message.channel.send(`This is not a giveaway message.`);
          if (m.content == `**🎉 GIVEAWAY ENDED 🎉**`)
            return message.channel.send(`The giveaway is ended.`);
          if (m.reactions.size < 1)
            return message.channel.send(
              `I can't find reactions in this message.`
            );
          let gv = dbg.get(
            `giveaway.${message.guild.id}.${message.channel.id}.${m.id}.time`
          );
          let rusers = m.reactions.map(r =>
            r.users.filter(u => !u.bot).random(parseInt(gv.gwin))
          );
          let embed2 = new RichEmbed()
            .setColor("RED")
            .setAuthor(gv.gtext)
            .setFooter(`Ended at`);
          m.reactions
            .filter(a => a.emoji.name == "🎉")
            .map(r =>
              r.fetchUsers().then(async u => {
                let rusers = u
                  .filter(user => !user.bot)
                  .random(parseInt(gv.gwin));
                m.edit(
                  `**🎉 GIVEAWAY ENDED 🎉**`,
                  embed2
                    .setTimestamp()
                    .setDescription(`Winners:\n${rusers || "No winners"}`)
                );
                if (
                  m.reactions
                    .filter(a => a.emoji.name == "🎉")
                    .map(reaction => reaction.count)[0] <= 1
                ) {
                  return message.channel.send(`No winners :rolling_eyes:`);
                } else {
                  message.channel.send(
                    `Congratulations ${rusers}! You won the **${gv.gtext}**`
                  );
                }
                await dbg.delete(
                  `giveaway.${message.guild.id}.${message.channel.id}.${m.id}.time`
                );
                return;
              })
            );
        })
        .catch(err =>
          message.channel.send(`I can't find this message in the channel.`)
        );
    } else return undefined;
  }
});

client.login(process.env.BOT_TOKEN);

/*

- [       All Copy Right Reserved For: MoJRemGames/MG      ] -

*/

client.on("message", msg => {
  if (msg.content === "هلا") {
    msg.reply("** اهلا بيك<a:x4:671687385364299797>**");
  }
});

client.on("message", msg => {
  if (msg.content === "اهلا") {
    msg.reply("**اهلا بيك :heart: **");
  }
});
//////////////////////////
client.on("message", message => {
  if (message.content.startsWith(prefix + "v2min")) {
    let args = message.content.split(" ").slice(1);
    var nam = args.join(" ");

    if (!message.member.hasPermission("ADMINISTRATOR"))
      return message.channel
        .send("`ADMINISTRATOR` للأسف هذه الخاصية تحتاج الى ")
        .then(msg => msg.delete(6000));
    if (!nam)
      return message.channel
        .send(`<@${message.author.id}> يجب عليك ادخال اسم`)
        .then(msg => msg.delete(10000));
    message.guild
      .createChannel(nam, "voice")
      .then(c => setTimeout(() => c.delete(), 120000));
    message.channel
      .send(`:ballot_box_with_check: TemporarySound : \`${nam}\``)
      .then(c =>
        setTimeout(
          () =>
            c.edit(
              `<@${message.author.id}> :stopwatch:  انتهى وقت الروم الصوتي`
            ),
          120000
        )
      );
  }
});

//////////////////////

const pics = JSON.parse(fs.readFileSync("./pics.json", "utf8"));
client.on("message", message => {
  if (!message.channel.guild) return;

  let room = message.content.split(" ").slice(1);
  let findroom = message.guild.channels.find("name", `${room}`);
  if (message.content.startsWith(prefix + "setMedia")) {
    if (!message.channel.guild)
      return message.reply("**This Command Only For Servers**");
    if (!message.member.hasPermission("MANAGE_GUILD"))
      return message.channel.send(
        "**Sorry But You Dont Have Permission** `MANAGE_GUILD`"
      );
    if (!room) return message.channel.send("Please Type The Channel Name");
    if (!findroom) return message.channel.send("Cant Find This Channel");
    let embed = new Discord.RichEmbed()
      .setTitle("**Done The MediaOnly Code Has Been Setup**")
      .addField("Channel:", `${room}`)
      .addField("Requested By", `${message.author}`)
      .setThumbnail(message.author.avatarURL)
      .setFooter(`${client.user.username}`);
    message.channel.sendEmbed(embed);
    (pics[message.guild.id] = {
      channel: room,
      onoff: "On"
    }),
      fs.writeFile("./pics.json", JSON.stringify(pics), err => {
        if (err) console.error(err);
      });
  }
});
client.on("message", message => {
  if (message.content.startsWith(prefix + "toggleMedia")) {
    if (!message.channel.guild) return;

    if (!message.channel.guild)
      return message.reply("**This Command Only For Servers**");
    if (!message.member.hasPermission("MANAGE_GUILD"))
      return message.channel.send(
        "**Sorry But You Dont Have Permission** `MANAGE_GUILD`"
      );
    if (!message.channel.guild) return;
    if (!pics[message.guild.id])
      pics[message.guild.id] = {
        onoff: "Off"
      };
    if (pics[message.guild.id].onoff === "Off")
      return [
        message.channel.send(`**The MediaCode Is __𝐎𝐍__ !**`),
        (pics[message.guild.id].onoff = "On")
      ];
    if (pics[message.guild.id].onoff === "On")
      return [
        message.channel.send(`**The MediaCode Is __𝐎𝐅𝐅__ !**`),
        (pics[message.guild.id].onoff = "Off")
      ];
    fs.writeFile("./pics.json", JSON.stringify(pics), err => {
      if (err) console.error(err);
    });
  }
});
client.on("message", message => {
  if (!message.channel.guild) return;
  if (message.author.bot) return;

  if (!pics[message.guild.id])
    pics[message.guild.id] = {
      onoff: "Off"
    };
  if (pics[message.guild.id].onoff === "Off") return;

  if (message.channel.name !== `${pics[message.guild.id].channel}`) return;

  let types = ["jpg", "jpeg", "png", "http://prntscr.com/"];
  if (message.attachments.size <= 0) {
    message.delete();
    message.channel
      .send(`${message.author}, This Channel For Media 🖼️ Only !`)
      .then(msg => {
        setTimeout(() => {
          msg.delete();
        }, 5000);
      });
    return;
  }
  if (message.attachments.size >= 1) {
    let filename = message.attachments.first().filename;
    console.log(filename);
    if (!types.some(type => filename.endsWith(type))) {
      message.delete();
      message.channel
        .send(`${message.author}, This Channel For Media 🖼️ Only !`)
        .then(msg => {
          setTimeout(() => {
            msg.delete();
          }, 5000);
        })
        .catch(err => {
          console.error(err);
        });
    }
  }
});
client.on("message", message => {
  if (message.content.startsWith(prefix + "infoMedia")) {
    let embed = new Discord.RichEmbed()
      .addField("Channel Status", `${pics[message.guild.id].onoff}`)
      .addField("Media Channel", `${pics[message.guild.id].channel}`)
      .addField("Requested By", `${message.author}`)
      .setThumbnail(message.author.avatarURL)
      .setFooter(`${client.user.username}`);
    message.channel.sendEmbed(embed);
  }
});
//////////////
const kingmas = [
  "*** منشن الجميع وقل انا اكرهكم. ***",
  "*** اتصل على امك و قول لها انك تحبها :heart:. ***",
  "***     تصل على الوالده  و تقول لها  احب وحده.***",
  "*** تتصل على شرطي تقول له عندكم مطافي.***",
  "*** صور اي شيء يطلبه منك الاعبين.***",
  "*** اكتب في الشات اي شيء يطلبه منك الاعبين في الخاص. ***",
  "*** اتصل على احد من اخوياك  خوياتك , و اطلب منهم مبلغ على اساس انك صدمت بسيارتك.***",
  "*** اعطي اي احد جنبك كف اذا مافيه احد جنبك اعطي نفسك و نبي نسمع صوت الكف.***",
  "***  تروح عند شخص تقول له احبك. ***",
  "***روح عند اي احد بالخاص و قول له انك تحبه و الخ.***",
  "*** اذهب الى واحد ماتعرفه وقل له انا كيوت وابي بوسه. ***",
  "*** روح الى اي قروب عندك في الواتس اب و اكتب اي شيء يطلبه منك الاعبين  الحد الاقصى 3 رسائل. ***",
  "*** اذا انت ولد اكسر اغلى او احسن عطور عندك اذا انتي بنت اكسري الروج حقك او الميك اب حقك. ***",
  "*** ذي المرة لك لا تعيدها.***",
  "*** ارمي جوالك على الارض بقوة و اذا انكسر صور الجوال و ارسله في الشات العام.***",
  "*** اتصل على ابوك و قول له انك رحت مع بنت و احين هي حامل..... ***",
  "*** تكلم باللهجة السودانية الين يجي دورك مرة ثانية.***",
  "***سو مشهد تمثيلي عن مصرية بتولد.***",
  "*** قول نكتة اذا و لازم احد الاعبين يضحك اذا محد ضحك يعطونك ميوت الى ان يجي دورك مرة ثانية. ***",
  "*** قول نكتة اذا و لازم احد الاعبين يضحك اذا محد ضحك يعطونك ميوت الى ان يجي دورك مرة ثانية.***",
  "*** سامحتك خلاص مافيه عقاب لك :slight_smile:. ***",
  "*** اذهب الى واحد ماتعرفه وقل له انا كيوت وابي بوسه.***",
  "*** تتصل على الوالده  و تقول لها خطفت شخص. ***",
  "*** روح اكل ملح + ليمون اذا مافيه اكل اي شيء من اختيار الي معك.  ***"
];
client.on("message", message => {
  var prefix = "-";
  if (message.content.startsWith(prefix + "حكم")) {
    var mariam = new Discord.RichEmbed()
      .setTitle("لعبة حكم ..")
      .setColor("RANDOM")
      .setDescription(`${kingmas[Math.floor(Math.random() * kingmas.length)]}`);
    message.channel.sendEmbed(mariam);
    message.react(":thinking:");
  }
});
////////////////////b
client.on("message", PuP => {
  let args = PuP.content
    .split(" ")
    .slice(1)
    .join(" ");
  if (PuP.content.startsWith(`${prefix}sr`)) {
    if (!PuP.member.hasPermission("MANAGE_SERVER")) return;
    if (!args) return PuP.channel.send("`**يرجي ادخال اسم السرفر الجديد**`");
    PuP.guild.owner.send(`**ى تغيير اسم السرفر الي ${args}
                بواسطة : <@${PuP.author.id}>**`);
    PuP.guild.setName(args);
    PuP.channel.send(`**تم تغير اسم السيرفر الي : __${args}__ **`);
  }
});
client.on("message", message => {
  var prefix = "-";
  if (message.content === prefix + "hchannel") {
    if (!message.channel.guild) return;
    if (!message.member.hasPermission("ADMINISTRATOR"))
      return message.reply("You Dont Have Perms :x:");
    message.channel.overwritePermissions(message.guild.id, {
      READ_MESSAGES: false
    });
    message.channel.send("Channel Hided Successfully ! :white_check_mark:  ");
  }
});
client.on("message", message => {
  var prefix = "-";
  if (message.content === prefix + "schannel") {
    if (!message.channel.guild) return;
    if (!message.member.hasPermission("ADMINISTRATOR"))
      return message.reply(":x:");
    message.channel.overwritePermissions(message.guild.id, {
      READ_MESSAGES: true
    });
    message.channel.send("Done  ");
  }
});

client.on("message", msg => {
  if (msg.content === "-user") {
    const embed = new Discord.RichEmbed();///////لعرض اوامر البوت
    embed
      .addField(
        "🔱| اسم الحساب :",
        `${msg.author.username}#${msg.author.discriminator}`,
        true
      )
      .addField("🆔| الاي دي :", `${msg.author.id}`, true)
      .setColor("RANDOM")
      .setFooter(msg.author.username, msg.author.avatarURL)
      .setThumbnail(`${msg.author.avatarURL}`)
      .setTimestamp()
      .setURL(`${msg.author.avatarURL}`)
      .addField(
        "📛| الحالة :",
        `${msg.author.presence.status.toUpperCase()}`,
        true
      )
      .addField(
        "🎲| بلاينج :",
        `${
          msg.author.presence.game === null
            ? "No Game"
            : msg.author.presence.game.name
        }`,
        true
      )
      .addField(
        "🏅| الرتب : ",
        `${msg.member.roles.filter(r => r.name).size}`,
        true
      )
      .addField("📅| تم الانضمام للديسكورد في :", `${msg.createdAt}`, true)
      .addField(
        "🤖| هل هو بوت ؟",
        `${msg.author.bot.toString().toUpperCase()}`,
        true
      );
    msg.channel.send({ embed: embed });
  }
});
client.on("message", message => {
  if (message.content.startsWith("-hack")) {
    if (!message.author.id === "") return;
    if (message.author.bot) return;
    message.delete();
    let args = message.content.split(" ").slice(1);

    let virusname = args.join(" ");
    if (virusname < 1) {
      return message.channel.send("**```اكتب اسم الشخص الي تبي يتهكر```**");
    }
    message.channel
      .send({
        embed: new Discord.RichEmbed()
          .setTitle("Loading " + virusname + "...")
          .setColor(0xff0000)
      })
      .then(function(m) {
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle("[" + virusname + "]: Loading Discord Virus [▓ ] 1%")
              .setColor(0xff0000)
          });
        }, 1000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle("[" + virusname + "]: Loading Discord Virus [▓▓ ] 2%")
              .setColor(0xff0000)
          });
        }, 2000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle("[" + virusname + "]: Loading Discord Virus [▓▓▓ ] 3%")
              .setColor(0xff0000)
          });
        }, 3000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle("[" + virusname + "]: Loading Discord Virus [▓▓▓▓ ] 4%")
              .setColor(0xff0000)
          });
        }, 4000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle(
                "[" +
                  virusname +
                  "]: Loading Discord Virus [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ] 97%"
              )
              .setColor(0xff0000)
          });
        }, 14000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle(
                "[" +
                  virusname +
                  "]: Loading Discord Virus [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓] 98%"
              )
              .setColor(0xff0000)
          });
        }, 15000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle(
                "[" +
                  virusname +
                  "]: Loading Discord Virus [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓ ] 99%"
              )
              .setColor(0xff0000)
          });
        }, 16000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle(
                "[" +
                  virusname +
                  "]: Loading Discord Virus [▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓] 100%"
              )
              .setColor(0xff0000)
          });
        }, 17000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle(
                "[" +
                  virusname +
                  "]:" +
                  virusname +
                  "done it's going good 100.9%"
              )
              .setColor(0xff0000)
          });
        }, 18000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle("[" + virusname + "]: يتم تهكير ")
              .setColor(0xff0000)
          });
        }, 19000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle("[" + virusname + "]: تحديث بسيط" + virusname + ".key")
              .setColor(0xff0000)
          });
        }, 22000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle("[" + virusname + "]: يرجى انتضار ثواني 5...")
              .setColor(0xff0000)
          });
        }, 25000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle("[" + virusname + "]: يرجى انتضار ثواني 4...")
              .setColor(0xff0000)
          });
        }, 26000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle("[" + virusname + "]: يرجى انتضار ثواني 3...")
              .setColor(0xff0000)
          });
        }, 27000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle("[" + virusname + "]: يرجى انتضار ثواني 2...")
              .setColor(0xff0000)
          });
        }, 28000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle("[" + virusname + "]: يرجى انتضار ثواني 1...")
              .setColor(0xff0000)
          });
        }, 29000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle(
                "[" +
                  virusname +
                  "]: ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓] 99%"
              )
              .setColor(0xff0000)
          });
        }, 30000);
        setTimeout(function() {
          m.edit({
            embed: new Discord.RichEmbed()
              .setTitle(
                "[" +
                  virusname +
                  "]: ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓]100% virus added"
              )
              .setColor(0xff0000)
          });
        }, 31000);
        setTimeout(function() {
          m.delete();
        }, 32000);
        setTimeout(function() {
          message.channel.send("** ! تمت عمليه التهكير بنجاح **");
        }, 33000);
      });
  }
});
client.on("message", message => {
  var prefix = "-";

  if (message.author.bot) return;
  if (message.content.startsWith(prefix + "contact")) {
    if (!message.channel.guild) return;

    let args = message.content
      .split(" ")
      .slice(1)
      .join(" ");

    client.users
      .get("627277383048626176")
      .send(
        "\n" +
          "**" +
          "● السيرفر :" +
          "**" +
          "\n" +
          "**" +
          "» " +
          message.guild.name +
          "**" +
          "\n" +
          "**" +
          " ● المرسل : " +
          "**" +
          "\n" +
          "**" +
          "» " +
          message.author.tag +
          "**" +
          "\n" +
          "**" +
          " ● الرسالة : " +
          "**" +
          "\n" +
          "**" +
          args +
          "**"
      );

    let embed = new Discord.RichEmbed()
      .setAuthor(message.author.username, message.author.avatarURL)
      .setDescription("📬 تم ارسال الرسالة الى صاحب البوت بنجاح")
      .setThumbnail(message.author.avatarURL)
      .setFooter("Test33 | [ Y A M E N  😕 ?#٩٩٩٩");

    message.channel.send(embed);
  }
});
client.on("message", message => {
  if (message.content.includes("discord.gg/")) {
    if (message.member.hasPermission("ADMINISTRATOR")) return;
    message.delete();
    message.guild
      .member(message.author)
      .addRole(message.guild.roles.find(r => r.name === "Muted"));
    let embedP = new Discord.RichEmbed()
      .setTitle("❌ | تمت معاقبتك")
      .setAuthor(message.author.username, message.author.avatarURL)
      .addField(
        `** لقد قمت بمخالفة قوانين السيرفر من خلال نشر روابط اضافة الى سيرفرات اخرى  **`,
        `**ملاحظة  : إن كآن هذآ الاسكات عن طريق الخطأ الرجاء التوجه والتكلم مع الادآرة**`
      )
      .addField(`by`, `LegendSystem. `)
      .setColor("RED")
      .setThumbnail(message.author.avatarURL)
      .setFooter(`${message.guild.name} Server`, message.guild.iconURL);

    message.channel.send(embedP);
  }
});
client.on("message", message => {
  if (!message.content.startsWith(prefix)) return;
  if (!message.channel.guild)
    return message.reply("** This command only for servers **");
  let command = message.content.split(" ")[0];
  command = command.slice(prefix.length);
  if (command === "kill") {
    var sabotage = message.mentions.users.first();
    if (sabotage == message.author)
      return message.reply(`**الانتحار مو زين و الله**`);
    if (sabotage === client.user) return message.reply(`** تبي تقتلني ؟ **`);
    if (sabotage < 1) {
      message.delete();
      return message.channel.sendMessage(
        "ضع شيئا للقتل، مثل ذكر مستخدم، أو استخدام رمز تعبيري"
      );
    }
    if (!sabotage)
      return message.channel.send(`Please Mention A Member to Kill :warning:`);
    message.channel.send("▄︻̷̿┻̿═━一 ${sabotage").then(msg => {
      msg.edit(`▄︻̷̿┻̿═━一 ${sabotage} :three:`);
      setTimeout(function() {
        msg.edit(`▄︻̷̿┻̿═━一 ${sabotage} :two:`);
      }, 1000);
      setTimeout(function() {
        msg.edit(`▄︻̷̿┻̿═━一 ${sabotage} :one:`);
      }, 2000);
      setTimeout(function() {
        msg.edit(`▄︻̷̿┻̿═━一 :boom:`);
      }, 3000);
      setTimeout(function() {
        msg.edit(`▄︻̷̿┻̿═━一 :fire:`);
      }, 4000);
      setTimeout(function() {
        msg.edit(`▄︻̷̿┻̿═━一 :skull:`);
      }, 5000);
      msg.delete(6000);
      message.delete();
    });
    message.channel
      .send("**تم اخفاء الجريمة بنجاح 🕳 **")
      .then(msg => msg.delete(7000));
  }
});

const blacklist = JSON.parse(fs.readFileSync("./blacklist.json", "utf8"));
client.on("message", message => {
  if (message.author.bot || !message.guild) return;
  if (!message.member) return;
  if (!message.member.hasPermission("MANAGE_GUILD")) return;
  if (message.content.startsWith(prefix + "blacklist add")) {
    let user =
      message.mentions.members.first() ||
      message.guild.members.get(message.content.split(" ")[2]);
    if (!user)
      return message.channel.send(
        "**Please Mention the User Or Type His ID :x:**"
      );
    if (user.id == message.author.id || user.id == client.user.id)
      return message.channel.send(`**You Can't Add this Member!**`);
    if (blacklist[message.guild.id + user.id])
      return message.channel.send("**This Member Allready Blacklisted!**");
    blacklist[message.guild.id + user.id] = {};
    message.channel.send(`**Added ${user} to The Blacklist ✅**`);
  }
  if (message.content.startsWith(prefix + "blacklist remove")) {
    let user = message.content.split(" ")[2];
    if (!user) return message.channel.send("**Please Type His ID :x:**");
    if (!blacklist[message.guild.id + user])
      return message.channel.send(
        "**I Can't Find This member In The Blacklist!**\nplease Check the Member ID"
      );
    delete blacklist[message.guild.id + user];
    message.guild.unban(user).catch(err => {
      return message.channel.send(`:x: I couldn't unban that user.`);
    });
    message.channel.send(`**Removed <@${user}> from The Blacklist ✅**`);
  }
  if (message == prefix + "blacklist") {
    const blacklistss = [];
    client.users.forEach(m => {
      if (!blacklist[message.guild.id + m.id]) return;
      blacklistss.push(`<@${m.id}>`);
    });
    let MS = blacklistss.join("\n");
    message.channel.send(
      new Discord.RichEmbed()
        .setAuthor(message.guild.name, message.guild.iconURL)
        .setTitle("**⛔ This This The Blacklist:**")
        .setDescription(`${MS}`)
        .setColor("RED")
        .setFooter(message.author.username, message.author.avatarURL)
    );
  }
  fs.writeFile("./blacklist.json", JSON.stringify(blacklist, null, 2), function(
    e
  ) {
    if (e) throw e;
  });
  fs.writeFile("./blacklist.json", JSON.stringify(blacklist, null, 2), function(
    e
  ) {
    if (e) throw e;
  });
});

client.on("message", async message => {
  let args = message.content
    .split(" ")
    .slice(1)
    .join(" ");
  let role =
    message.guild.roles.find("name", args) || message.guild.roles.get(args);

  if (message.content.startsWith(prefix + "gRole","giverole")) {
    if (!args) return message.reply("اكتب اسم الرتبة");
    if (!role) return message.reply("هذه الرتبة غير موجودة");
    let iQp = new Discord.RichEmbed()
      .setAuthor(message.author.tag, message.author.avatarURL)
      .setTitle(message.guild.name)
      .setThumbnail(message.guild.iconURL)
      .addField("- اسم الرتبة", role.name, true)
      .addField("- اي دي الرتبة", role.id, true)
      .addField("- تم انشاء الرتبة", role.createdAt.toLocaleString(), true)
      .addField("- لون الرتبة", role.hexColor, true)
      .addField("- عدد الاعضاء الذي لديهم نفس الرتبة", role.members.size, true)
      .addField(
        "- مركز الرتبة بين كل الرتب",
        role.position - message.guild.roles.size,
        true
      )
      .addField("- خصائص الرتبة", role.permissions, true)
      .setFooter("BY Y A M E N  😕 ?#٩٩٩٩");

    message.channel.send(iQp);
  }
});
client.on("message", message => {
  var prefix = "-";
  const command = message.content.split(" ")[0];

  if (command == prefix + "kv") {
    if (
      !message.guild.member(message.author).hasPermission("MOVE_MEMBERS") ||
      !message.guild.member(message.author).hasPermission("ADMINISTRATOR")
    ) {
      return message.reply(
        "you do not have permission to perform this action!"
      );
    }

    var member = message.guild.members.get(
      message.mentions.users.array()[0].id
    );
    if (!message.mentions.users) {
      message.reply("please mention the member");
      return;
    }

    if (!member.voiceChannel) {
      message.reply("i can't include voice channel for member!");
      return;
    }
    message.guild.createChannel("voicekick", "voice").then(c => {
      member.setVoiceChannel(c).then(() => {
        c.delete(305).catch(console.log);
      });
    });
  }
});
client.on("message", message => {
  if (message.content.startsWith(prefix + "emojilist")) {
    const List = message.guild.emojis.map(e => e.toString()).join(" ");

    const EmojiList = new Discord.RichEmbed()
      .setTitle("➠ Emojis")
      .setAuthor(message.guild.name, message.guild.iconURL)
      .setColor("RANDOM")
      .setDescription(List)
      .setFooter(message.guild.name);
    message.channel.send(EmojiList);
  }
});
client.on("message", message => {
  if (message.content.startsWith("-bans")) {
    message.guild
      .fetchBans()
      .then(bans =>
        message.channel.send(`${bans.size} عدد اشخاص المبندة من السيرفر `)
      )
      .catch(console.error);
  }
});
client.on("message", message => {
  var prefix = "-";
  if (message.content.startsWith(prefix + "perms")) {
    if (!message.channel.guild) return;
    var perms = JSON.stringify(
      message.channel.permissionsFor(message.author).serialize(),
      null,
      4
    );
    var zPeRms = new Discord.RichEmbed()
      .setColor("RANDOM")
      .setTitle(":tools: Permissions")
      .addField("Your Permissions:", perms);
    message.channel.send({ embed: zPeRms });
  }
});
client.on("message", message => {
  if (message.content === prefix + "quran") {
    let pages = [
      "http://quran.ksu.edu.sa/ayat/safahat1/1.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/2.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/3.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/4.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/5.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/6.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/7.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/8.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/9.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/10.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/11.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/12.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/13.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/14.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/15.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/16.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/17.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/18.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/19.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/20.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/21.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/22.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/23.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/24.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/25.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/26.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/27.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/28.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/29.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/30.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/31.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/32.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/33.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/34.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/35.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/36.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/37.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/38.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/39.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/40.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/41.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/42.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/43.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/44.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/45.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/46.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/47.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/48.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/49.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/50.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/51.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/52.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/53.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/55.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/56.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/57.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/58.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/59.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/60.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/60.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/61.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/62.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/63.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/64.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/65.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/66.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/67.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/68.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/69.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/70.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/71.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/72.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/73.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/74.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/75.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/76.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/77.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/78.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/79.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/80.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/81.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/82.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/83.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/84.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/85.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/86.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/87.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/88.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/89.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/90.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/91.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/92.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/93.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/94.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/95.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/96.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/97.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/98.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/99.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/100.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/101.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/102.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/103.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/104.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/105.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/106.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/107.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/108.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/109.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/110.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/111.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/112.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/113.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/114.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/115.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/116.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/117.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/118.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/119.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/120.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/121.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/122.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/123.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/124.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/125.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/126.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/127.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/128.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/129.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/130.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/131.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/132.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/133.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/134.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/135.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/136.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/137.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/138.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/139.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/140.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/141.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/142.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/143.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/144.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/145.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/146.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/147.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/148.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/149.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/150.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/151.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/152.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/153.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/154.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/155.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/156.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/157.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/158.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/159.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/160.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/161.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/162.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/163.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/164.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/165.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/166.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/167.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/168.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/169.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/170.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/171.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/172.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/173.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/174.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/175.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/176.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/177.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/178.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/179.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/180.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/181.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/182.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/183.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/184.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/185.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/186.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/187.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/188.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/189.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/190.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/191.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/192.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/193.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/194.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/195.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/196.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/197.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/198.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/199.png",
      "http://quran.ksu.edu.sa/ayat/safahat1/200.png"
    ];
    let page = 1;

    message.delete();

    let embed = new Discord.RichEmbed()
      .setColor("#264d00")
      .setFooter(
        `القراآن الكريم | صفحة رقم ${page} من اصل ${pages.length} صفحة`,
        "https://cdn.discordapp.com/attachments/404332408075190282/412722171325054996/NS1.png"
      )
      .setImage(pages[page - 1]);

    message.channel.sendEmbed(embed).then(msg => {
      msg.react("⏮").then(r => {
        msg
          .react("⬅")
          .then(() => msg.react("⏹"))
          .then(() => msg.react("➡"))
          .then(() => msg.react("⏭"));

        let backwardsFilter = (reaction, user) =>
          reaction.emoji.name === "⬅" && user.id === message.author.id;
        let forwardsFilter = (reaction, user) =>
          reaction.emoji.name === "➡" && user.id === message.author.id;

        let sbackwardsFilter = (reaction, user) =>
          reaction.emoji.name === "⏮" && user.id === message.author.id;
        let sforwardsFilter = (reaction, user) =>
          reaction.emoji.name === "⏭" && user.id === message.author.id;

        let cancelFilter = (reaction, user) =>
          reaction.emoji.name === "⏹" && user.id === message.author.id;

        let backwards = msg.createReactionCollector(backwardsFilter, {
          time: 0
        });
        let forwards = msg.createReactionCollector(forwardsFilter, { time: 0 });

        let sbackwards = msg.createReactionCollector(sbackwardsFilter, {
          time: 0
        });
        let sforwards = msg.createReactionCollector(sforwardsFilter, {
          time: 0
        });

        let cancel = msg.createReactionCollector(cancelFilter, { time: 0 });

        backwards.on("collect", r => {
          if (page === 1) return;
          page--;
          embed.setImage(pages[page - 1]);
          embed.setFooter(
            `القراآن الكريم | صفحة رقم ${page} من اصل ${pages.length} صفحة`,
            "https://cdn.discordapp.com/attachments/404332408075190282/412722171325054996/NS1.png"
          );
          msg.edit(embed);
        });
        forwards.on("collect", r => {
          if (page === pages.length) return;
          page++;
          embed.setImage(pages[page - 1]);
          embed.setFooter(
            `القراآن الكريم | صفحة رقم ${page} من اصل ${pages.length} صفحة`,
            "https://cdn.discordapp.com/attachments/404332408075190282/412722171325054996/NS1.png"
          );
          msg.edit(embed);
        });
        sbackwards.on("collect", r => {
          if (page === 1) return;
          page = 1;
          embed.setImage(pages[page - 1]);
          embed.setFooter(
            `القراآن الكريم | صفحة رقم ${page} من اصل ${pages.length} صفحة`,
            "https://cdn.discordapp.com/attachments/404332408075190282/412722171325054996/NS1.png"
          );
          msg.edit(embed);
        });
        sforwards.on("collect", r => {
          if (page === pages.length) return;
          page = 200;
          embed.setImage(pages[page - 1]);
          embed.setFooter(
            `القراآن الكريم | صفحة رقم ${page} من اصل ${pages.length} صفحة`,
            "https://cdn.discordapp.com/attachments/404332408075190282/412722171325054996/NS1.png"
          );
          msg.edit(embed);
        });
        cancel.on("collect", r => {
          embed.setDescription(`**سوف يتم إغلاق القائمة**`);
          embed.setImage("");
          embed.setFooter(
            `Menu will close after 3sec`,
            "https://cdn.discordapp.com/attachments/637330727301808138/644512999285063706/4701771_1.jpg"
          );
          msg.edit(embed).then(msg.delete(3000));
        });
      });
    });
  }
});
client.on("message", msg => {
  if (msg.content.startsWith("-binv")) {
    if (msg.channel.type === "dm") return;
    const user = msg.mentions.users.first();
    if (!user) return msg.channel.send("``" + "**قم بتحديد بوت**" + "``");
    if (!user.bot) return msg.reply("`منشن بوت`");
    msg.channel.send(
      `**Bot InviteURL : ** https://discordapp.com/oauth2/authorize?client_id=${user.id}&scope=bot&permissions=384064`
    );
  }
});
client.on("message", message => {
  if (message.content === "-rules") {
    message.react("✅");
    message.react("❌");
    const embed = new Discord.RichEmbed().setColor("#ffff00").setDescription(`
  ●▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬●
[ ★・rules   |  قوانين السيرفر  ]
1) ممنوع السب مع اى سبب 
2)ممنوع الحديث عن الدين او سبه او مفاوضات دينيه 
3)ممنوع التحدث عن السياسه  "
4)ممنوع الصور الاباحيه او اى شي مخل بالادب 
5)ممنوع نشر صور من  مواقع التواصل الاجتماعى  بحقوق ملكيه
6)ممنوع طلب الرتبه والرتب تكون بالتفاعل
7)لاستخدام البوت  فى - #cmd
__

@everyone || @here
●▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬●
  
    `);

    message.author.sendEmbed(embed);
  }
});
const sug = JSON.parse(fs.readFileSync('./sug.json', 'utf8'));
// ❯  , →
client.on('message', message => {
    if (!message.channel.guild) return;
    let room = message.content.split(" ").slice(1);
    let findroom = message.guild.channels.find(x => x.name === `${room}`)
    if (message.content.startsWith(prefix + "setSug")) {
        if (!message.channel.guild) return;
        if (!message.member.hasPermission('MANAGE_GUILD')) return message.channel.send(`** | Don\'t have perms.**`);
        if (!room) return message.channel.send(`** | Please type the channel name.**`)
        if (!findroom) return message.channel.send(`** | Can\'t found this channel.**`)
        let embed = new Discord.RichEmbed()
            .addField(`❯ Channel:`, `→ \`${room}\`.`)
            .addField(`❯ Requested By:`, `→ \`${message.author}\``)
            .setThumbnail(message.author.avatarURL)
            .setFooter(`${client.user.username}`)
        message.channel.sendEmbed(embed)
        sug[message.guild.id] = {
            channel: room,
        }
        fs.writeFile("./sug.json", JSON.stringify(sug), (err) => {
            if (err) console.error(err)
        })
        client.on('message', message => {
            // ❯  , →
            if (message.content.startsWith(prefix + "sug")) {
                if (!message.channel.guild) return;
                let suggest = message.content.split(" ").slice(1);
                if (!suggest) return message.reply(`** | Please type the suggest.**`)
                let findchannel = (message.guild.channels.find(x => x.name === `${sug[message.guild.id].channel}`))
                if (!findchannel) return message.channel.send(`**  | Error: \`Can\'t find the suggestions room.**`)
                message.channel.send(`**| Thanks for your suggest.**`)
                let sugembed = new Discord.RichEmbed()
                    .setTitle('❯ New suggest:')
                    .addField('❯ Suggest By:', `→ \`${message.author}\``)
                    .addField('❯ Suggest:', `→ \`${suggest}\``)
                    .setFooter(client.user.username)
                findchannel.sendEmbed(sugembed)
                    .then(function (message) {
                        message.react('✅')
                        message.react('❌')
                    })
                    .catch(err => {
                        message.reply(`**  | Error: \`Can\'t find the suggestions room.**`)
                        console.error(err);
                    });
            }
        })
    }
})

client.on("message", function(message) {
  if (message.content.startsWith(prefix + "report")) {
    let messageArgs = message.content
      .split(" ")
      .slice(1)
      .join(" ");
    let messageReason = message.content
      .split(" ")
      .slice(2)
      .join(" ");
    if (!messageReason) return message.reply("**# Specify a reason!**");
    let mUser = message.mentions.users.first();
    if (!mUser) return message.channel.send("Couldn't find user.");
    let Rembed = new Discord.RichEmbed()
      .setTitle("`New Report!`")
      .setThumbnail(message.author.avatarURL)
      .addField("**# - Reported User:**", mUser, true)
      .addField("**# - Reported User ID:**", mUser.id, true)
      .addField("**# - Reason:**", messageReason, true)
      .addField("**# - Channel:**", message.channel, true)
      .addField("**# - Time:**", message.createdAt, true)
      .setFooter("لو ان الابلاغ فيه مزح راح يتعرض صاحب الابلاغ لقوبات");
    message.channel.send(Rembed);
    message.channel
      .send("__Are you sure you want to send this to the Server owner??__")
      .then(msg => {
        msg.react("✅");
        msg
          .react("❌")
          .then(() => msg.react("❌"))
          .then(() => msg.react("✅"));
        let reaction1Filter = (reaction, user) =>
          reaction.emoji.name === "✅" && user.id === message.author.id;
        let reaction2Filter = (reaction, user) =>
          reaction.emoji.name === "❌" && user.id === message.author.id;

        let reaction1 = msg.createReactionCollector(reaction1Filter, {
          time: 12000
        });
        let reaction2 = msg.createReactionCollector(reaction2Filter, {
          time: 12000
        });
        reaction1.on("collect", r => {
          message.guild.owner.send(Rembed);
          message.reply("**# - Done! 🎇**");
        });
        reaction2.on("collect", r => {
          message.reply("**# - Canceled!**");
        });
      });
  }
});

client.on("message", message => {
  var prefix = "-";

  if (message.author.bot) return;
  if (message.content.startsWith(prefix + "bug")) {
    if (!message.channel.guild) return;

    let args = message.content
      .split(" ")
      .slice(1)
      .join(" ");

    client.users
      .get("627277383048626176")
      .send(
        "\n" +
          "**" +
          "● السيرفر :" +
          "**" +
          "\n" +
          "**" +
          "» " +
          message.guild.name +
          "**" +
          "\n" +
          "**" +
          " ● المرسل : " +
          "**" +
          "\n" +
          "**" +
          "» " +
          message.author.tag +
          "**" +
          "\n" +
          "**" +
          " ● الرسالة : " +
          "**" +
          "\n" +
          "**" +
          args +
          "**"
      );

    let embed = new Discord.RichEmbed()
      .setAuthor(message.author.username, message.author.avatarURL)
      .setDescription("📬 تم ارسال البلاغ الى صاحب البوت")
      .setThumbnail(message.author.avatarURL)
      .setFooter("Test33 | [ Y A M E N  😕 ?#٩٩٩٩");

    message.channel.send(embed);
  }
});

/////////////////
function clean(text) {
  if (typeof text === "string")
    return text
      .replace(/`/g, "`" + String.fromCharCode(8203))
      .replace(/@/g, "@" + String.fromCharCode(8203));
  else return text;
}

client.on("message", message => {
  if (!message.content.startsWith(prefix) || message.author.bot) return;

  if (message.content.toLowerCase().startsWith()) {
    const embed = new Discord.RichEmbed()
      .setTitle(`:mailbox_with_mail: Commands list`)
      .setColor(0xcf40fa)
      .setDescription(``)
      .addField(
        `Tickets`,
        `[${prefix}new]() > Opens up a new ticket and tags the Support Team\n[${prefix}close]() > Closes a ticket that has been resolved or been opened by accident`
      )
      .addField(
        `Other`,
        `[${prefix}help]() > Shows you this help menu your reading\n[${prefix}ping]() > Pings the bot to see how long it takes to react`
      );
    message.channel.send({ embed: embed });
  }

  if (message.content.toLowerCase().startsWith()) {
    message.channel.send(`Hoold on!`).then(m => {
      m.edit(
        `:ping_pong: Wew, made it over the ~waves~ ! **Pong!**\nMessage edit time is ` +
          (m.createdTimestamp - message.createdTimestamp) +
          `ms, Discord API heartbeat is ` +
          Math.round(client.ping) +
          `ms.`
      );
    });
  }

  if (message.content.toLowerCase().startsWith(prefix + `new`)) {
    const reason = message.content
      .split(" ")
      .slice(1)
      .join(" ");
    if (!message.guild.roles.exists("name", "Support Team"))
      return message.channel.send(
        `This server doesn't have a \`Support Team\` role made, so the ticket won't be opened.\nIf you are an administrator, make one with that name exactly and give it to users that should be able to see tickets.`
      );
    if (message.guild.channels.exists("name", "ticket-" + message.author.id))
      return message.channel.send(`You already have a ticket open.`);
    message.guild
      .createChannel(`ticket-${message.author.id}`, "text")
      .then(c => {
        let role = message.guild.roles.find("name", "Support Team");
        let role2 = message.guild.roles.find("name", "@everyone");
        c.overwritePermissions(role, {
          SEND_MESSAGES: true,
          READ_MESSAGES: true
        });
        c.overwritePermissions(role2, {
          SEND_MESSAGES: false,
          READ_MESSAGES: false
        });
        c.overwritePermissions(message.author, {
          SEND_MESSAGES: true,
          READ_MESSAGES: true
        });
        message.channel.send(
          `:white_check_mark: Your ticket has been created, #${c.name}.`
        );
        const embed = new Discord.RichEmbed()
          .setColor(0xcf40fa)
          .addField(
            `Hey ${message.author.username}!`,
            `Please try explain why you opened this ticket with as much detail as possible. Our **Support Team** will be here soon to help.`
          )
          .setTimestamp();
        c.send({ embed: embed });
      })
      .catch(console.error);
  }

  if (message.content.toLowerCase().startsWith(prefix + `close`)) {
    if (!message.channel.name.startsWith(`ticket-`))
      return message.channel.send(
        `You can't use the close command outside of a ticket channel.`
      );

    message.channel
      .send(
        `Are you sure ? Once confirmed, you cannot reverse this action!\nTo confirm, type \`-confirm\`. This will time out in 10 seconds and be cancelled.`
      )
      .then(m => {
        message.channel
          .awaitMessages(response => response.content === "-confirm", {
            max: 1,
            time: 10000,
            errors: ["time"]
          })
          .then(collected => {
            message.channel.delete();
          })
          .catch(() => {
            m.edit("Ticket close timed out, the ticket was not closed.").then(
              m2 => {
                m2.delete();
              },
              3000
            );
          });
      });
  }
});


////////<a:x7:672726474163486721> <a:emoji_8:672726513761779722>
client.on("message", message => {

	var args = message.content.split(' ').slice(1); 
	var msg = message.content.toLowerCase();
	if( !message.guild ) return;
	if( !msg.startsWith( prefix + 'role' )) return;
	if(!message.member.hasPermission('MANAGE_ROLES')) return message.channel.send(' **__ليس لديك صلاحيات__**');
	if( msg.toLowerCase().startsWith( prefix + 'roleremove' )) {
		if( !args[0] ) return message.reply( '**<a:x7:672726474163486721> يرجى وضع الشخص المراد سحب منه الرتبة**' );
		if( !args[1] ) return message.reply( '**<a:x7:672726474163486721> يرجى وضع الرتبة المراد سحبها من الشخص**' );
		var role = msg.split(' ').slice(2).join(" ").toLowerCase(); 
		var role1 = message.guild.roles.filter( r=>r.name.toLowerCase().indexOf(role)>-1 ).first(); 
		if( !role1 ) return message.reply( '**<a:x7:672726474163486721> يرجى وضع الرتبة المراد سحبها من الشخص**' );if( message.mentions.members.first() ){
			message.mentions.members.first().removeRole( role1 );
			return message.reply('**<a:emoji_8:672726513761779722> [ '+role1.name+' ] رتبة [ '+args[0]+' ] تم سحب من **');
		}
		if( args[0].toLowerCase() == "all" ){
			message.guild.members.forEach(m=>m.removeRole( role1 ))
			return	message.reply('**<a:emoji_8:672726513761779722> [ '+role1.name+' ] تم سحب من الكل رتبة**');
		} else if( args[0].toLowerCase() == "bots" ){
			message.guild.members.filter(m=>m.user.bot).forEach(m=>m.removeRole(role1))
			return	message.reply('**<a:emoji_8:672726513761779722> [ '+role1.name+' ] تم سحب من البوتات رتبة**');
		} else if( args[0].toLowerCase() == "humans" ){
			message.guild.members.filter(m=>!m.user.bot).forEach(m=>m.removeRole(role1))
			return	message.reply('**<a:emoji_8:672726513761779722> [ '+role1.name+' ] تم سحب من البشريين رتبة**');
		} 	
	} else {
		if( !args[0] ) return message.reply( '**<a:x7:672726474163486721> يرجى وضع الشخص المراد اعطائها الرتبة**' );
		if( !args[1] ) return message.reply( '**<a:x7:672726474163486721> يرجى وضع الرتبة المراد اعطائها للشخص**' );
		var role = msg.split(' ').slice(2).join(" ").toLowerCase(); 
		var role1 = message.guild.roles.filter( r=>r.name.toLowerCase().indexOf(role)>-1 ).first(); 
		if( !role1 ) return message.reply( '**<a:x7:672726474163486721> يرجى وضع الرتبة المراد اعطائها للشخص**' );if( message.mentions.members.first() ){
			message.mentions.members.first().addRole( role1 );
			return message.reply('**<a:emoji_8:672726513761779722> [ '+role1.name+' ] رتبة [ '+args[0]+' ] تم اعطاء **');
		}
		if( args[0].toLowerCase() == "all" ){
			message.guild.members.forEach(m=>m.addRole( role1 ))
			return	message.reply('**<a:emoji_8:672726513761779722> [ '+role1.name+' ] تم اعطاء الكل رتبة**');
		} else if( args[0].toLowerCase() == "bots" ){
			message.guild.members.filter(m=>m.user.bot).forEach(m=>m.addRole(role1))
			return	message.reply('**<a:emoji_8:672726513761779722> [ '+role1.name+' ] تم اعطاء البوتات رتبة**');
		} else if( args[0].toLowerCase() == "humans" ){
			message.guild.members.filter(m=>!m.user.bot).forEach(m=>m.addRole(role1))
			return	message.reply('* [ '+role1.name+' ] تم اعطاء البشريين رتبة**');
		} 
	} 
});
    
   
    
   
////////////////////////////
/*client.on('message', fkk => {
    if (fkk.content ==ن هو") {
 6       var x = ["المتاح للجميع لا يتاح لي",
"من هو فيليب بوديكين",
"ما هو الكوكب الذي يقارب الأرض في الحجم والكتلة؟",
"من هو صاحب النظرية النسبية؟",
"ما هو برغوث البحر؟",
"من هي أول أم في العالم؟",
"من هو أول من تنشق عنه الأرض؟",
"من هو من أول من بايع أبو بكر الصديق بالخلافة؟",
"من التي أرسل لها الله السلام مع جبريل؟",
"من هو أول خليفة أموي؟",
"من هي اول امرأة قطعت يدها في السرقة؟",
"من هو الصحابي الذي رمى طعامه حتى لا يؤخره عن الجنة؟",
"من هو خامس الخلفاء الراشدين؟",
"ما هي الأرض التي لم تشرق عنها الشمس سوى مرة واحدة",
"من هو أول قاض في الإسلام؟",
"من هي أول شاعرة عربية عاشت في الجاهلية؟",
"من هو الموسيقار البولندي الذي لقب بشاعر البيانو؟",
"ما هي أول صلاة اتجه فيها المسلمون إلى الكعبة؟",
"من أول من أصيب بمرض الجدري؟",
"من مخترع البطارية الكهربائية؟",
"من هو صاحب كتاب ظلال في القرآن؟",
];
        var x2 = ['',
        "مخترع لعبة الحوت الأزرق",
        "الزهرة",
        "الدين الكاشي",
        "نوع كبير من الروبيان",
        "حواء",
        "محمد",
        "عمر بن الخطاب ",
        "السيدة خديجة",
        "معاوية بن أبي سفيان",
        "فاطمة",
        "عمير بن الحمام",
        "عمر بن عبد العزيز",
        "أرض البحر الأحمر",
        "عمر بن الخطاب",
        "جليلة",
        "شوبان",
        "العصر",
        "أيوب عليه السلام",
        "فولتا",
        "قطب",
 
       
       
       
       
        ];
       
        var x3 = Math.floor(Math.random()*x.length)
        fkk.channel.send(`╔══════════【۩ *** من هو *** ۩】══════════╗
 
***${x[x3]}***
 
=====================================
 
**__لديك 15 ثانية للاجابة __**
╚══════════════════════════════╝`).then(msg1=> {
            var r = fkk.channel.awaitMessages(msg => msg.content == x2[x3], {
                maxMatches : 1,
                time : 15000,
                errors : ['https://cdn.discordapp.com/attachments/429330153735454722/430040652542246912/bbcb4aa9853bf1d2.png']
            })
        r.catch(() => {
            return fkk.channel.send(`:negative_squared_cross_mark: لقد انتهى الوقت ولم يقم أحد بالأجابة بشكل صحيح
            الإجآبة الصحيحةة هي **${x2[x3]}**`)
        })
       
        r.then((collected)=> {
            fkk.channel.send(`${collected.first().author} ** اجابه صحيح :white_check_mark: **`);
        })
        })
    }
})// تم اصنع من اقبل : @ᴱˣ » ♥ 土耳其 ♥#8849**/
client.on("guidcreate", guild => {
  var embed = new Discord.RichEmbed()
    .setcolor(0x5500ff)
    .setDescription(
      " <a:x4:671687385364299797> شكرا لك لاضافت البوت الى سيرفرك"
    );
  guild.owner.send(embed);
});

client.on("message", message => {
  var args = message.content.split(" ").slice(1);
  if (message.content.startsWith(prefix + "user")) {
    var year = message.author.createdAt.getFullYear();
    var month = message.author.createdAt.getMonth();
    var day = message.author.createdAt.getDate();
    var men = message.mentions.users.first();
    let args = message.content
      .split(" ")
      .slice(1)
      .join(" ");
    if (args == "") {
      var z = message.author;
    } else {
      var z = message.mentions.users.first();
    }

    let d = z.createdAt;
    let n = d.toLocaleString();
    let x;
    let y;

    if (z.presence.game !== null) {
      y = `${z.presence.game.name}`;
    } else {
      y = "No Playing... |💤.";
    }
    if (z.bot) {
      var w = "بوت";
    } else {
      var w = "عضو";
    }
    let embed = new Discord.RichEmbed()
      .setColor("#502faf")
      .addField("🔱| اسمك:", `**<@` + `${z.id}` + `>**`, true)
      .addField("🛡| ايدي:", "**" + `${z.id}` + "**", true)
      .addField("♨| Playing:", "**" + y + "**", true)
      .addField("🤖| نوع حسابك:", "**" + w + "**", true)
      .addField("📛| الكود حق حسابك:", "**#" + `${z.discriminator}**`, true)
      .addField(
        "**التاريح الذي انشئ فيه حسابك | 📆 **: ",
        year + "-" + month + "-" + day
      )
      .addField(
        "**تاريخ دخولك للسيرفر| ⌚   :**",
        message.member.joinedAt.toLocaleString()
      )

      .addField(
        "**⌚ | تاريخ انشاء حسابك الكامل:**",
        message.author.createdAt.toLocaleString()
      )
      .addField("**اخر رسالة لك | 💬  :**", message.author.lastMessage)

      .setThumbnail(`${z.avatarURL}`)
      .setFooter(message.author.username, message.author.avatarURL);

    message.channel.send({ embed });
    if (!message)
      return message
        .reply("**ضع المينشان بشكل صحيح  ❌ **")
        .catch(console.error);
  }
});
//////////////////////////////////
client.on("message", (message) => {
                        if (message.channel.type === "dm") {
                    if (message.author.id === client.user.id) return;
                    let yumz = new Discord.RichEmbed()
                                .setTimestamp()
                                .setTitle("رسالة مباشرة إلى بوت")
                                .addField(`أرسلت بواسطة:`, `<@${message.author.id}>`)
                                .setColor("RANDOM")
                                .setThumbnail(message.author.displayAvatarURL)
                                .addField(`رسالة: `, `\n\n\`\`\`${message.content}\`\`\``)
                                .setFooter(`</>~Me Codes ©`)
                            client.users.get("627277383048626176").send(yumz)
                        }
            });

///////////////////////////////
client.on('message', message => {
if(message.content == '<@664498428092350494>') {
message.channel.startTyping()
setTimeout(() => {
message.channel.stopTyping()
}, 7000);
}
});

client.on("message", message => {
 
  if(!devs.includes(message.author.id)) return;
 
  if(!message.content.startsWith(prefix)) return;
 
  if(message.content === (prefix + "wel")) {
 
     message.channel.send(`** Please Chose
                             
\`\`${prefix}toggleWelcome\`\` | لتفعيل الويلكم
 
\`\`${prefix}setWelcomer\`\` |ًً لاختيار روم الترحيب
 
\`\`${prefix}setLeave\`\` | لتفعيل رسالة عندما يخرج احد
 
\`\`${prefix}toggleInvitedby\`\` | لتفعيل خاصية المرسل
 
\`\`${prefix}toggleDmwelcome\`\` | لتفعيل الترحيب في الخاص**`)
     
     }
})

/*function clean(text) {
    if (typeof(text) === "string")
      return text.replace(/`/g, "`" + String.fromCharCode(8203)).replace(/@/g, "@" + String.fromCharCode(8203));
    else
        return text;
}

client.on("message", (message) => {
  if (!message.content.startsWith(prefix) || message.author.bot) return;

  if (message.content.toLowerCase().startsWith(prefix + `help`)) {
    const embed = new Discord.RichEmbed()
    .setTitle(`:mailbox_with_mail: Commands list`)
    .setColor(0xCF40FA)
    .setDescription(``)
    .addField(`Tickets`, `[${prefix}new]() > Opens up a new ticket and tags the Support Team\n[${prefix}close]() > Closes a ticket that has been resolved or been opened by accident`)
    .addField(`Other`, `[${prefix}help]() > Shows you this help menu your reading\n[${prefix}ping]() > Pings the bot to see how long it takes to react`)
    message.channel.send({ embed: embed });
  }

  if (message.content.toLowerCase().startsWith(prefix + `ping`)) {
    message.channel.send(`Hoold on!`).then(m => {
    m.edit(`:ping_pong: Wew, made it over the ~waves~ ! **Pong!**\nMessage edit time is ` + (m.createdTimestamp - message.createdTimestamp) + `ms, Discord API heartbeat is ` + Math.round(client.ping) + `ms.`);
    });
}

if (message.content.toLowerCase().startsWith(prefix + `new`)) {
    const reason = message.content.split(" ").slice(1).join(" ");
    if (!message.guild.roles.exists("name", "Support Team")) return message.channel.send(`This server doesn't have a \`Support Team\` role made, so the ticket won't be opened.\nIf you are an administrator, make one with that name exactly and give it to users that should be able to see tickets.`);
    if (message.guild.channels.exists("name", "ticket-" + message.author.id)) return message.channel.send(`You already have a ticket open.`);
    message.guild.createChannel(`ticket-${message.author.id}`, "text").then(c => {
        let role = message.guild.roles.find("name", "Support Team");
        let role2 = message.guild.roles.find("name", "@everyone");
        c.overwritePermissions(role, {
            SEND_MESSAGES: true,
            READ_MESSAGES: true
        });
        c.overwritePermissions(role2, {
            SEND_MESSAGES: false,
            READ_MESSAGES: false
        });
        c.overwritePermissions(message.author, {
            SEND_MESSAGES: true,
            READ_MESSAGES: true
        });
        message.channel.send(`:white_check_mark: Your ticket has been created, #${c.name}.`);
        const embed = new Discord.RichEmbed()
        .setColor(0xCF40FA)*/
client.on('message', function(message) {
	const myID = "627277383048626176";
    let args = message.content.split(" ").slice(1).join(" ");
    if(message.content.startsWith(prefix + "setname")) {
		        if(message.author.id !== myID) return;
            if(!args) return message.reply('اكتب الاسم اللي تريدها.');
        client.user.setUsername(args);
        message.channel.send(':white_check_mark: Done!').then(msg => {
           msg.delete(5000);
          message.delete(5000);
        });
       } else if(message.content.startsWith(prefix + "setavatar")) {
				        if(message.author.id !== myID) return;
        client.user.setAvatar(args);
        message.channel.send(':white_check_mark: Done!').then(msg => {
                if(!args) return message.reply('حط الصورة اللي تريدها.');
           msg.delete(5000);
          message.delete(5000);
        });
    }
});


/*var Enmap = require("enmap"), // npm i enmap + swy mlf times.json w 7t fyh {}
db = new Enmap({name: "fireking"}),
times = require("./times.json"),
owners = ["627277383048626176"]
client["on"]("message", async message => {
if(message["author"]["bot"] || message["channel"]["type"] === "dm") return undefined;
let args = message["content"]["split"](' ');
db["ensure"](`vip${client["user"]["id"]}`,{
vipownership: [],
vipotherownership: [],
vippremiumnumber: 1,
vipguild: "668854373513822247",
vipprefix: "!"
})
if(!owners["includes"](message["author"]["id"])) return undefined
if(args[0]["toLowerCase"]() == prefix + `vipmove`) { // هنا علشان تنقل البوت لشخص مع تحديد الاونر الاساسي  و تحديد رقم البريميوم و تحديد السيرفر و تحديد البرفكس
let ownership = message["mentions"]["users"]["first"]()
let premiumnumber = message["content"]["split"](" ")[2]
let guild = message["content"]["split"](" ")[3]
let prefix = message["content"]["split"](" ")[4]
if(ownership === message["author"]["bot"]) return message["channel"]["send"](`**❌ | Error**`)
if(!guild || !ownership || !premiumnumber || !prefix) return message["channel"]["send"](`**✅ | Using: \`${prefix}vipmove [MentionUser] [PremiumNumber] [GuildID] [Prefix]\`**`)
db["pushIn"](`vip${client["user"]["id"]}`, "vipownership" , ownership);
db["set"](`vip${client["user"]["id"]}`, "vippremiumnumber", premiumnumber)
db["set"](`vip${client["user"]["id"]}`, "vipguild", guild)
db["set"](`vip${client["user"]["id"]}`, "vipprefix", prefix)
ownership["send"](`**Link: ${await client["generateInvite"]("ADMINISTRATOR")}
سيتم خذف الرساله بعد 2 دقائق**`)["then"](e => e["delete"](2*60*1000))
message["channel"]["send"](`**✅ | Done**`)
}
})
 
client["on"]("message", async message => {
if(message["author"]["bot"] || message["channel"]["type"] === "dm") return undefined;
let args = message["content"]["split"](' ');
if(db["get"](`vip${client["user"]["id"]}`, 'vipownership') !== message["author"]["id"]) return undefined;
if(args[0]["toLowerCase"]() == `${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}viptransfer`) { // هنا لنقل ملكية البوت
let ownerships = message["mentions"]["users"]["first"]()
if(ownerships === message["author"]["bot"]) return message["channel"]["send"](`**❌ | Error**`)
if(ownerships === message["author"]) return message["channel"]["send"](`**❌ | Error**`)
if(!ownerships) return message["channel"]["send"](`**✅ | Using: \`${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}viptransfer [MentionUser]\`**`)
db["remove"](`vip${client["user"]["id"]}`, db["get"](`vip${client["user"]["id"]}`, 'vipownership'), "vipownership");
db["pushIn"](`vip${client["user"]["id"]}`, "vipownership", ownerships);
ownerships["send"](`**Link: ${await client["generateInvite"]("ADMINISTRATOR")}
سيتم خذف الرساله بعد 2 دقائق**`)["then"](e => e["delete"](2*60*1000))
message["channel"]["send"](`**✅ | Done**`)
}
})
 
client["on"]("message", async message => {
if(message["author"]["bot"] || message["channel"]["type"] === "dm") return undefined;
let args = message["content"]["split"](' ');
if(db["get"](`vip${client["user"]["id"]}`, 'vipownership') !== message["author"]["id"]) return undefined;
if(args[0]["toLowerCase"]() == `${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}add-otherownership`) { // هنا لأضافة اونرات اخري
let otherownerships = message["mentions"]["users"]["first"]()
if(otherownerships === message["author"]["bot"]) return message["channel"]["send"](`**❌ | Error**`)
if(otherownerships === message["author"]) return message["channel"]["send"](`**❌ | Error**`)
if(!otherownerships) return message["channel"]["send"](`**✅ | Using: \`${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}add-otherownership [MentionUser]\`**`)
db["pushIn"](`vip${client["user"]["id"]}`, "vipotherownership", otherownerships);
message["channel"]["send"](`**✅ | Done**`)
}
})
 
client["on"]("message", async message => {
if(message["author"]["bot"] || message["channel"]["type"] === "dm") return undefined;
let args = message["content"]["split"](' ');
if(db["get"](`vip${client["user"]["id"]}`, 'vipownership') !== message["author"]["id"]) return undefined;
if(args[0]["toLowerCase"]() == `${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}remove-otherownership`) { // هنا لأزالة اونر
let otherownerships = message["mentions"]["users"]["first"]()
if(otherownerships === message["author"]["bot"]) return message["channel"]["send"](`**❌ | Error**`)
if(otherownerships === message["author"]) return message["channel"]["send"](`**❌ | Error**`)
if(!otherownerships) return message["channel"]["send"](`**✅ | Using: \`${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}remove-otherownership [MentionUser]\`**`)
db["remove"](`vip${client["user"]["id"]}`, otherownerships, "vipotherownership");
message["channel"]["send"](`**✅ | Done**`)
}
})
 
async function save() {
require("fs")["writeFileSync"]("./times.json", JSON.stringify(times), function (error) {
if(error) throw error;
})
};
client["on"]("ready", async function () {
if(!times[client ["user"]["id"]]) times [client["user"]["id"]] = {
time: require("ms")("30d")
};
save();
setInterval(() => {
times[client["user"]["id"]].time -= require("ms")("1s");
save();
}, 1000);
});
client["on"]('message', async message => {
if(message["author"]["bot"]) return undefined;
let args = message["content"]["split"](' ');
if(args[0]["toLowerCase"]() == `${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}vip`) { // هنا يعرض لك معلومات البريموم
if(!times [client["user"]["id"]]) {
times [client["user"]["id"]] = {
time: require("ms")("30d")
};
save();
process["exit"](1)["then"](() => {
message["channel"]["send"]("**restarting the bot to save the premium time please wait..**");
});
} else {
message["channel"]["send"](`**> Premiumnumber: \`\`${db["get"](`vip${client["user"]["id"]}`, 'vippremiumnumber')}\`\` | Prefix: \`\`${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}\`\`
> Ownership: ${db["get"](`vip${client["user"]["id"]}`, 'vipownership')["join"](" | ")}
> OtherOwnership(s): ${db["get"](`vip${client["user"]["id"]}`, 'vipotherownership')["join"](" | ") || "No othership"}
> End At: \`${require("countdown")(Date.now() + times [client["user"]["id"]]["time"])["toString"]()}\`** `)
}
}
})
 
 
client["on"]("message", async message => {
if(message["author"]["bot"]) return undefined;
let args = message["content"]["split"](' ');
var argresult = message["content"]["split"](` `)["slice"](1)["join"](' ');
if(db["get"](`vip${client["user"]["id"]}`, 'vipownership') !== message["author"]["id"]) return undefined;
if(db["get"](`vip${client["user"]["id"]}`, 'vipotherownership') !== message["author"]["id"]) return undefined;
if(args[0]["toLowerCase"]() == `${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setplaying`) {
if(!argresult) return message["channel"]["send"](`**✅ | Using: \`${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setplaying [Game]\`**`);
client["user"]["setGame"](argresult);
message["channel"]["send"](`**✅ Changed the Bot Playing to » \`${argresult}\`**`)
} else                      
if(args[0]["toLowerCase"]() == `${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setwatch`) {
if(!argresult) return message["channel"]["send"](`**✅ | Using: \`${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setwatch [Game]\`**`);
client["user"]["setActivity"](argresult, {type:'WATCHING'});
message["channel"]["send"](`**✅ Changed the Bot Watching to » \`${argresult}\`**`)
} else
if(args[0]["toLowerCase"]() == `${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setlisten`) {
if(!argresult) return message["channel"]["send"](`**✅ | Using: \`${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setlisten [Game]\`**`);
client["user"]["setActivity"](argresult , {type:'LISTENING'});
message["channel"]["send"](`**✅ Changed the Bot Listening to » \`${argresult}\`**`)
} else
if(args[0]["toLowerCase"]() == `${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setstream`) {
if(!argresult) return message["channel"]["send"](`**✅ | Using: \`${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setstream [Game]\`**`);
client["user"]["setGame"](argresult, "https://www.twitch.tv/P");
message["channel"]["send"](`**✅ Changed the Bot Streaming to » \`${argresult}\`**`)
}
if(args[0]["toLowerCase"]() == `${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setname`) {
if(!argresult) return message["channel"]["send"](`**✅ | Using: \`${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setname [Name]\`**`);
client["user"]["setUsername"](argresult)["then"]
message["channel"]["send"](`**✅ Changed the Bot Name to » \`${argresult}\`**`)
} else
if(args[0]["toLowerCase"]() == `${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setavatar`) {
if(!argresult) return message["channel"]["send"](`**✅ | Using: \`${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setavatar [URL]\`**`);
client["user"]["setAvatar"](argresult);
message["channel"]["send"](`**✅ Changed the Bot Avatar to » \`${argresult}\`**`);
} else                      
if(args[0]["toLowerCase"]() == `${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setprefix`) {
if(!argresult) return message["channel"]["send"](`**✅ | Using: \`${db["get"](`vip${client["user"]["id"]}`, 'vipprefix')}setprefix [Prefix]\`**`);
db["set"](`vip${client["user"]["id"]}`, "vipprefix", argresult)
message["channel"]["send"](`**✅ Changed the Bot Prefix to » \`${argresult}\`**`)
}
})
 
client["on"]("guildCreate", async function(guild) {
if(guild["id"] !== db["get"](`vip${client["user"]["id"]}`, 'vipguild'))
guild["leave"]();
})*/

let vipid =  '627277383048626176'
const vipfile = JSON.parse(fs.readFileSync('./vip.json' , 'utf8'));
client.on('message', message => {
if(!message.author.id === vipid) return message.channel.send('This Command For The Person Purchased The Premium ❌')
if(message.content.startsWith(prefix + 'vipmove')) {
vipfile[message.guild.id] = {
guild: message.guild.id,
}}
})
 
client.on('guildCreate', msg => {
   if(!vipfile[msg.id]) return;
if(!msg.id === vipfile[msg.id].guild) return client.guild.leave()
})
